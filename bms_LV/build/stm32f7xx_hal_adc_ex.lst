ARM GAS  /tmp/cchpYDhH.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_adc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ADC_MultiModeDMAError,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ADC_MultiModeDMAError:
  24              	.LFB155:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @file    stm32f7xx_hal_adc_ex.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *          functionalities of the ADC extension peripheral:
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *           + Extended features functions
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   @verbatim
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ==============================================================================
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                     ##### How to use this driver #####
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ==============================================================================
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     [..]
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (##) ADC pins configuration
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Configure and enable two DMA streams stream for managing data
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                  transfer from peripheral to memory (output stream)
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Associate the initialized DMA handle to the ADC DMA handle
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                  using  __HAL_LINKDMA()
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                  priority than the input stream.                  
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (#) Configure the ADC Prescaler, conversion resolution and data alignment 
ARM GAS  /tmp/cchpYDhH.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****          using the HAL_ADC_Init() function. 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (#) Configure the ADC Injected channels group features, use HAL_ADC_Init()
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****          and HAL_ADC_ConfigChannel() functions.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****          
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (#) Three operation modes are available within this driver :     
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      *** Polling mode IO operation ***
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      =================================
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      [..]    
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Start the ADC peripheral using HAL_ADCEx_InjectedStart() 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Wait for end of conversion using HAL_ADCEx_InjectedPollForConversion(), at this stage
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****            user can specify the value of timeout according to his end application      
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) To read the ADC converted values, use the HAL_ADCEx_InjectedGetValue() function.
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Stop the ADC peripheral using HAL_ADCEx_InjectedStop()
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      *** Interrupt mode IO operation ***    
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      ===================================
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      [..]    
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Start the ADC peripheral using HAL_ADCEx_InjectedStart_IT() 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) At ADC end of conversion HAL_ADCEx_InjectedConvCpltCallback() function is executed and u
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             add his own code by customization of function pointer HAL_ADCEx_InjectedConvCpltCallbac
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) In case of ADC Error, HAL_ADCEx_InjectedErrorCallback() function is executed and user ca
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             add his own code by customization of function pointer HAL_ADCEx_InjectedErrorCallback
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Stop the ADC peripheral using HAL_ADCEx_InjectedStop_IT()
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      *** DMA mode IO operation ***    
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      ==============================
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      [..]    
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Start the ADC peripheral using HAL_ADCEx_InjectedStart_DMA(), at this stage the user spe
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****            of data to be transferred at each end of conversion 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) At The end of data transfer ba HAL_ADCEx_InjectedConvCpltCallback() function is executed
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             add his own code by customization of function pointer HAL_ADCEx_InjectedConvCpltCallbac
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) In case of transfer Error, HAL_ADCEx_InjectedErrorCallback() function is executed and us
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             add his own code by customization of function pointer HAL_ADCEx_InjectedErrorCallback
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         (+) Stop the ADC peripheral using HAL_ADCEx_InjectedStop_DMA()
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      *** Multi mode ADCs Regular channels configuration ***
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      ======================================================
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      [..]        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Select the Multi mode ADC regular channels features (dual or triple mode)  
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****           and configure the DMA mode using HAL_ADCEx_MultiModeConfigChannel() functions. 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Start the ADC peripheral using HAL_ADCEx_MultiModeStart_DMA(), at this stage the user sp
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****            of data to be transferred at each end of conversion           
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (+) Read the ADCs converted values using the HAL_ADCEx_MultiModeGetValue() function.
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @attention
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * All rights reserved.</center></h2>
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/cchpYDhH.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * the "License"; You may not use this file except in compliance with the
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * License. You may obtain a copy of the License at:
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */ 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief ADC Extended driver modules
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */ 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/ 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /** @addtogroup ADCEx_Private_Functions
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @{
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAConvCplt(DMA_HandleTypeDef *hdma);
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAError(DMA_HandleTypeDef *hdma);
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAHalfConvCplt(DMA_HandleTypeDef *hdma); 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @}
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Exported Functions
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @{
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1  Extended features functions 
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *  @brief    Extended features functions  
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** @verbatim   
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****  ===============================================================================
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                  ##### Extended features functions #####
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****  ===============================================================================  
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Start conversion of injected channel.
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Stop conversion of injected channel.
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Stop multimode and disable DMA transfer.
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Configure injected channels.
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (+) Configure multimode.
ARM GAS  /tmp/cchpYDhH.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** @endverbatim
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @{
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      Tstab time the ADC's stabilization */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the Peripheral */
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Delay for ADC stabilization time */
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Compute number of CPU cycles to wait for */
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       counter--;
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cchpYDhH.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Process unlocked */
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if Multimode enabled */
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp1 = HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_JEXTEN);
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if(tmp1 && tmp2)
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Enable the selected ADC software conversion for injected group */
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         hadc->Instance->CR2 |= ADC_CR2_JSWSTART;
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     else
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp1 = HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_JEXTEN);
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if((hadc->Instance == ADC1) && tmp1 && tmp2)  
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Enable the selected ADC software conversion for injected group */
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         hadc->Instance->CR2 |= ADC_CR2_JSWSTART;
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Enables the interrupt and starts ADC conversion of injected channels.
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status.
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      Tstab time the ADC's stabilization */
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
ARM GAS  /tmp/cchpYDhH.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the Peripheral */
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Delay for ADC stabilization time */
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Compute number of CPU cycles to wait for */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       counter--;
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Process unlocked */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if Multimode enabled */
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp1 = HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_JEXTEN);
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if(tmp1 && tmp2)
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Enable the selected ADC software conversion for injected group */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         hadc->Instance->CR2 |= ADC_CR2_JSWSTART;
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     else
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cchpYDhH.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp1 = HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_JEXTEN);
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if((hadc->Instance == ADC1) && tmp1 && tmp2)  
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Enable the selected ADC software conversion for injected group */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         hadc->Instance->CR2 |= ADC_CR2_JSWSTART;
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*   are common)                                                            */
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE(hadc);
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set ADC state */
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/cchpYDhH.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process unlocked */
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return tmp_hal_status;
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Poll for injected conversion complete
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  Timeout Timeout value in millisecond.  
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tickstart = 0;
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Get tick */ 
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check End of conversion flag */
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC)))
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check for the Timeout */
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         hadc->State= HAL_ADC_STATE_TIMEOUT;
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Process unlocked */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Clear injected group conversion flag */
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC);
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Update ADC state machine */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Note: On STM32F7, there is no independent flag of end of sequence.       */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*       The test of scan sequence on going is done either with scan        */
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*       sequence disabled or with end of conversion flag set to            */
ARM GAS  /tmp/cchpYDhH.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*       of end of sequence.                                                */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC state */
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     { 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return ADC state */
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }      
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         is on going.
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*   are common)                                                            */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE(hadc);
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
ARM GAS  /tmp/cchpYDhH.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set ADC state */
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process unlocked */
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return tmp_hal_status;
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Gets the converted value from data register of injected channel.
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  InjectedRank the ADC injected rank.
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t tmp = 0;
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Clear injected group conversion flag to have similar behaviour as        */
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* regular group: reading data register also clears end of conversion flag. */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return the selected ADC converted value */ 
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   switch(InjectedRank)
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp =  hadc->Instance->JDR4;
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }  
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     break;
ARM GAS  /tmp/cchpYDhH.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {  
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp =  hadc->Instance->JDR3;
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }  
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     break;
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {  
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp =  hadc->Instance->JDR2;
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     break;
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp =  hadc->Instance->JDR1;
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     break;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     default:
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     break;  
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return tmp;
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Enables ADC DMA request after last transfer (Multi-ADC mode) and enables ADC peripheral
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * 
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @note   Caution: This function must be used only with the ADC master.  
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  pData   Pointer to buffer in which transferred from ADC peripheral to memory will be st
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  Length  The length of data to be transferred from ADC peripheral to memory.  
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      Tstab time the ADC's stabilization */
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the Peripheral */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Delay for temperature sensor stabilization time */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Compute number of CPU cycles to wait for */
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       counter--;
ARM GAS  /tmp/cchpYDhH.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular group operation                */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     else
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Process unlocked */
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_MultiModeDMAConvCplt;
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_MultiModeDMAHalfConvCplt;
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set the DMA error callback */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_MultiModeDMAError ;
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable ADC overrun interrupt */
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if (hadc->Init.DMAContinuousRequests != DISABLE)
ARM GAS  /tmp/cchpYDhH.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Enable the selected ADC DMA request after last transfer */
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC->CCR |= ADC_CCR_DDS;
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     else
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Disable the selected ADC EOC rising on each regular channel conversion */
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       ADC->CCR &= ~ADC_CCR_DDS;
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the DMA Stream */
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&ADC->CDR, (uint32_t)pData, Length);
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* if no external trigger present enable software conversion of regular channels */
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Enable the selected ADC software conversion for regular group */
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Disables ADC DMA (multi-ADC mode) and disables ADC peripheral    
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_ADC_DISABLE(hadc);
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable the selected ADC DMA mode for multimode */
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC->CCR &= ~ADC_CCR_DDS;
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* DMA transfer is on going)                                              */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
ARM GAS  /tmp/cchpYDhH.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC state */
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process unlocked */
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return tmp_hal_status;
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         data in the selected multi mode.
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval The converted data value.
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return ADC->CDR;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   UNUSED(hadc);
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****             the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****    */
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         rank in the sequencer and its sample time.
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *         the configuration information for the specified ADC.
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  sConfigInjected ADC configuration structure for injected channel. 
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #ifdef USE_FULL_ASSERT  
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tmp = 0;
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #endif /* USE_FULL_ASSERT  */
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cchpYDhH.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(sConfigInjected->ExternalTrigInjecConv));
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_LENGTH(sConfigInjected->InjectedNbrOfConversion));
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #ifdef USE_FULL_ASSERT
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   tmp = ADC_GET_RESOLUTION(hadc);
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(tmp, sConfigInjected->InjectedOffset));
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** #endif /* USE_FULL_ASSERT  */
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel > ADC_CHANNEL_9)
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Clear the old sample time */
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel);
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set the new sample time */
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->Inje
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Clear the old sample time */
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel);
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set the new sample time */
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->Inje
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*---------------------------- ADCx JSQR Configuration -----------------*/
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   hadc->Instance->JSQR &= ~(ADC_JSQR_JL);
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   hadc->Instance->JSQR |=  ADC_SQR1(sConfigInjected->InjectedNbrOfConversion);
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Rank configuration */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Clear the old SQx bits for the selected rank */
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   hadc->Instance->JSQR &= ~ADC_JSQR(ADC_JSQR_JSQ1, sConfigInjected->InjectedRank,sConfigInjected->I
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****    
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Set the SQx bits for the selected rank */
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   hadc->Instance->JSQR |= ADC_JSQR(sConfigInjected->InjectedChannel, sConfigInjected->InjectedRank,
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Enable external trigger if trigger selection is different of software  */
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* start.                                                                 */
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /*       software start.                                                  */ 
ARM GAS  /tmp/cchpYDhH.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if(sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Select external trigger to start conversion */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_JEXTSEL);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 |=  sConfigInjected->ExternalTrigInjecConv;
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Select external trigger polarity */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_JEXTEN);
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 |= sConfigInjected->ExternalTrigInjecConvEdge;
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Reset the external trigger */
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_JEXTSEL);
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_JEXTEN);  
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if (sConfigInjected->AutoInjectedConv != DISABLE)
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the selected ADC automatic injected group conversion */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR1 |= ADC_CR1_JAUTO;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable the selected ADC automatic injected group conversion */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_JAUTO);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedDiscontinuousConvMode != DISABLE)
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the selected ADC injected discontinuous mode */
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR1 |= ADC_CR1_JDISCEN;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Disable the selected ADC injected discontinuous mode */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_JDISCEN);
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case 1:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR1 &= ~(ADC_JOFR1_JOFFSET1);
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR1 |= sConfigInjected->InjectedOffset;
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case 2:
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR2 &= ~(ADC_JOFR2_JOFFSET2);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR2 |= sConfigInjected->InjectedOffset;
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case 3:
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR3 &= ~(ADC_JOFR3_JOFFSET3);
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR3 |= sConfigInjected->InjectedOffset;
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     default:
ARM GAS  /tmp/cchpYDhH.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set injected channel 4 offset */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR4 &= ~(ADC_JOFR4_JOFFSET4);
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR4 |= sConfigInjected->InjectedOffset;
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if ((hadc->Instance == ADC1) && (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT))
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the VBAT channel*/
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC->CCR |= ADC_CCR_VBATE;
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if ((hadc->Instance == ADC1) && ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) || 
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Enable the TSVREFE channel*/
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC->CCR |= ADC_CCR_TSVREFE;
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process unlocked */
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  Configures the ADC multi-mode 
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hadc       pointer to a ADC_HandleTypeDef structure that contains
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                     the configuration information for the specified ADC.  
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  multimode  pointer to an ADC_MultiModeTypeDef structure that contains 
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                     the configuration information for  multimode.
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval HAL status
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(multimode->DMAAccessMode));
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process locked */
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Set ADC mode */
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR &= ~(ADC_CCR_MULTI);
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->Mode;
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Set the ADC DMA access mode */
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR &= ~(ADC_CCR_DMA);
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->DMAAccessMode;
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Set delay between two sampling phases */
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR &= ~(ADC_CCR_DELAY);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->TwoSamplingDelay;
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cchpYDhH.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Process unlocked */
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return function status */
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   return HAL_OK;
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @}
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /**
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  DMA transfer complete callback. 
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                the configuration information for the specified DMA module.
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAConvCplt(DMA_HandleTypeDef *hdma)   
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Update state machine on conversion status if not in error state */
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Update ADC state machine */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Determine whether any further conversion upcoming on group regular   */
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Note: On STM32F7, there is no independent flag of end of sequence.   */
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       The test of scan sequence on going is done either with scan    */
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       sequence disabled or with end of conversion flag set to        */
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /*       of end of sequence.                                            */
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Disable ADC end of single conversion interrupt on group regular */
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* by overrun IRQ process below.                                      */
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       /* Set ADC state */
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Conversion complete callback */
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     HAL_ADC_ConvCpltCallback(hadc);
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/cchpYDhH.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   else
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Call DMA error callback */
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  DMA half transfer complete callback. 
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                the configuration information for the specified DMA module.
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Conversion complete callback */
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     HAL_ADC_ConvHalfCpltCallback(hadc); 
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** /**
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @brief  DMA error callback 
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   *                the configuration information for the specified DMA module.
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   * @retval None
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   */
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** static void ADC_MultiModeDMAError(DMA_HandleTypeDef *hdma)   
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** {
  26              		.loc 1 1030 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  36              		.loc 1 1031 0
  37 0002 806B     		ldr	r0, [r0, #56]
  38              	.LVL1:
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->State= HAL_ADC_STATE_ERROR_DMA;
  39              		.loc 1 1032 0
  40 0004 4023     		movs	r3, #64
  41 0006 0364     		str	r3, [r0, #64]
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     /* Set ADC error code to DMA error */
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
  42              		.loc 1 1034 0
  43 0008 436C     		ldr	r3, [r0, #68]
  44 000a 43F00403 		orr	r3, r3, #4
  45 000e 4364     		str	r3, [r0, #68]
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     HAL_ADC_ErrorCallback(hadc); 
  46              		.loc 1 1035 0
  47 0010 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
  48              	.LVL2:
  49 0014 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cchpYDhH.s 			page 20


  50              		.cfi_endproc
  51              	.LFE155:
  53              		.section	.text.ADC_MultiModeDMAHalfConvCplt,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv5-d16
  60              	ADC_MultiModeDMAHalfConvCplt:
  61              	.LFB154:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  62              		.loc 1 1017 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL3:
  67 0000 08B5     		push	{r3, lr}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 3, -8
  71              		.cfi_offset 14, -4
  72              	.LVL4:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
  73              		.loc 1 1020 0
  74 0002 806B     		ldr	r0, [r0, #56]
  75              	.LVL5:
  76 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
  77              	.LVL6:
  78 0008 08BD     		pop	{r3, pc}
  79              		.cfi_endproc
  80              	.LFE154:
  82              		.section	.text.ADC_MultiModeDMAConvCplt,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv5-d16
  89              	ADC_MultiModeDMAConvCplt:
  90              	.LFB153:
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
  91              		.loc 1 964 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL7:
  96 0000 08B5     		push	{r3, lr}
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 101              		.loc 1 966 0
 102 0002 836B     		ldr	r3, [r0, #56]
 103              	.LVL8:
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 104              		.loc 1 969 0
 105 0004 1A6C     		ldr	r2, [r3, #64]
ARM GAS  /tmp/cchpYDhH.s 			page 21


 106 0006 12F0500F 		tst	r2, #80
 107 000a 26D1     		bne	.L6
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 108              		.loc 1 972 0
 109 000c 1A6C     		ldr	r2, [r3, #64]
 110 000e 42F40072 		orr	r2, r2, #512
 111 0012 1A64     		str	r2, [r3, #64]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 112              		.loc 1 980 0
 113 0014 1A68     		ldr	r2, [r3]
 114 0016 9168     		ldr	r1, [r2, #8]
 115 0018 11F0405F 		tst	r1, #805306368
 116 001c 19D1     		bne	.L7
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 117              		.loc 1 981 0 discriminator 1
 118 001e 9969     		ldr	r1, [r3, #24]
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 119              		.loc 1 980 0 discriminator 1
 120 0020 B9B9     		cbnz	r1, .L7
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 121              		.loc 1 982 0
 122 0022 D16A     		ldr	r1, [r2, #44]
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 123              		.loc 1 981 0
 124 0024 11F4700F 		tst	r1, #15728640
 125 0028 03D0     		beq	.L8
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 126              		.loc 1 983 0
 127 002a 9168     		ldr	r1, [r2, #8]
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 128              		.loc 1 982 0
 129 002c 11F4806F 		tst	r1, #1024
 130 0030 0FD1     		bne	.L7
 131              	.L8:
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 132              		.loc 1 989 0
 133 0032 5168     		ldr	r1, [r2, #4]
 134 0034 21F02001 		bic	r1, r1, #32
 135 0038 5160     		str	r1, [r2, #4]
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 136              		.loc 1 992 0
 137 003a 1A6C     		ldr	r2, [r3, #64]
 138 003c 22F48072 		bic	r2, r2, #256
 139 0040 1A64     		str	r2, [r3, #64]
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 140              		.loc 1 994 0
 141 0042 1A6C     		ldr	r2, [r3, #64]
 142 0044 12F4805F 		tst	r2, #4096
 143 0048 03D1     		bne	.L7
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 144              		.loc 1 996 0
 145 004a 1A6C     		ldr	r2, [r3, #64]
 146 004c 42F00102 		orr	r2, r2, #1
 147 0050 1A64     		str	r2, [r3, #64]
 148              	.L7:
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 149              		.loc 1 1001 0
ARM GAS  /tmp/cchpYDhH.s 			page 22


 150 0052 1846     		mov	r0, r3
 151              	.LVL9:
 152 0054 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 153              	.LVL10:
 154 0058 08BD     		pop	{r3, pc}
 155              	.LVL11:
 156              	.L6:
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 157              		.loc 1 1006 0
 158 005a 9B6B     		ldr	r3, [r3, #56]
 159              	.LVL12:
 160 005c DB6C     		ldr	r3, [r3, #76]
 161 005e 9847     		blx	r3
 162              	.LVL13:
 163 0060 08BD     		pop	{r3, pc}
 164              		.cfi_endproc
 165              	.LFE153:
 167              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 168              		.align	1
 169              		.global	HAL_ADCEx_InjectedStart
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	HAL_ADCEx_InjectedStart:
 176              	.LFB141:
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 177              		.loc 1 160 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              	.LVL14:
 183 0000 82B0     		sub	sp, sp, #8
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 8
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 186              		.loc 1 161 0
 187 0002 0023     		movs	r3, #0
 188 0004 0193     		str	r3, [sp, #4]
 189              	.LVL15:
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 190              		.loc 1 165 0
 191 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 192 000a 012B     		cmp	r3, #1
 193 000c 66D0     		beq	.L18
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 194              		.loc 1 165 0 is_stmt 0 discriminator 2
 195 000e 0123     		movs	r3, #1
 196 0010 80F83C30 		strb	r3, [r0, #60]
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 197              		.loc 1 171 0 is_stmt 1 discriminator 2
 198 0014 0368     		ldr	r3, [r0]
 199 0016 9A68     		ldr	r2, [r3, #8]
 200 0018 12F0010F 		tst	r2, #1
 201 001c 13D1     		bne	.L13
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cchpYDhH.s 			page 23


 202              		.loc 1 174 0
 203 001e 9A68     		ldr	r2, [r3, #8]
 204 0020 42F00102 		orr	r2, r2, #1
 205 0024 9A60     		str	r2, [r3, #8]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 206              		.loc 1 178 0
 207 0026 324B     		ldr	r3, .L25
 208 0028 1B68     		ldr	r3, [r3]
 209 002a 324A     		ldr	r2, .L25+4
 210 002c A2FB0323 		umull	r2, r3, r2, r3
 211 0030 9B0C     		lsrs	r3, r3, #18
 212 0032 03EB4303 		add	r3, r3, r3, lsl #1
 213 0036 0193     		str	r3, [sp, #4]
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 214              		.loc 1 179 0
 215 0038 02E0     		b	.L14
 216              	.L15:
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 217              		.loc 1 181 0
 218 003a 019B     		ldr	r3, [sp, #4]
 219 003c 013B     		subs	r3, r3, #1
 220 003e 0193     		str	r3, [sp, #4]
 221              	.L14:
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 222              		.loc 1 179 0
 223 0040 019B     		ldr	r3, [sp, #4]
 224 0042 002B     		cmp	r3, #0
 225 0044 F9D1     		bne	.L15
 226              	.L13:
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 227              		.loc 1 186 0
 228 0046 0268     		ldr	r2, [r0]
 229 0048 9368     		ldr	r3, [r2, #8]
 230 004a 13F0010F 		tst	r3, #1
 231 004e 48D0     		beq	.L19
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 232              		.loc 1 191 0
 233 0050 016C     		ldr	r1, [r0, #64]
 234 0052 294B     		ldr	r3, .L25+8
 235 0054 0B40     		ands	r3, r3, r1
 236 0056 43F48053 		orr	r3, r3, #4096
 237 005a 0364     		str	r3, [r0, #64]
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 238              		.loc 1 199 0
 239 005c 036C     		ldr	r3, [r0, #64]
 240 005e 13F4807F 		tst	r3, #256
 241 0062 01D1     		bne	.L16
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 242              		.loc 1 202 0
 243 0064 0023     		movs	r3, #0
 244 0066 4364     		str	r3, [r0, #68]
 245              	.L16:
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 246              		.loc 1 208 0
 247 0068 0023     		movs	r3, #0
 248 006a 80F83C30 		strb	r3, [r0, #60]
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cchpYDhH.s 			page 24


 249              		.loc 1 212 0
 250 006e 6FF00403 		mvn	r3, #4
 251 0072 1360     		str	r3, [r2]
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 252              		.loc 1 215 0
 253 0074 214B     		ldr	r3, .L25+12
 254 0076 5B68     		ldr	r3, [r3, #4]
 255 0078 13F01F0F 		tst	r3, #31
 256 007c 14D1     		bne	.L17
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 257              		.loc 1 217 0
 258 007e 0368     		ldr	r3, [r0]
 259 0080 9A68     		ldr	r2, [r3, #8]
 260 0082 12F4401F 		tst	r2, #3145728
 261 0086 0CBF     		ite	eq
 262 0088 0122     		moveq	r2, #1
 263 008a 0022     		movne	r2, #0
 264              	.LVL16:
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if(tmp1 && tmp2)
 265              		.loc 1 218 0
 266 008c 5968     		ldr	r1, [r3, #4]
 267 008e 11F4806F 		tst	r1, #1024
 268              	.LVL17:
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 269              		.loc 1 219 0
 270 0092 02F00102 		and	r2, r2, #1
 271              	.LVL18:
 272 0096 18BF     		it	ne
 273 0098 0022     		movne	r2, #0
 274 009a 22B3     		cbz	r2, .L20
 275              	.LVL19:
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 276              		.loc 1 222 0
 277 009c 9A68     		ldr	r2, [r3, #8]
 278 009e 42F48002 		orr	r2, r2, #4194304
 279 00a2 9A60     		str	r2, [r3, #8]
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 280              		.loc 1 238 0
 281 00a4 0020     		movs	r0, #0
 282              	.LVL20:
 283 00a6 1AE0     		b	.L12
 284              	.LVL21:
 285              	.L17:
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 286              		.loc 1 227 0
 287 00a8 0368     		ldr	r3, [r0]
 288 00aa 9A68     		ldr	r2, [r3, #8]
 289 00ac 12F4401F 		tst	r2, #3145728
 290 00b0 0CBF     		ite	eq
 291 00b2 0121     		moveq	r1, #1
 292 00b4 0021     		movne	r1, #0
 293              	.LVL22:
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if((hadc->Instance == ADC1) && tmp1 && tmp2)  
 294              		.loc 1 228 0
 295 00b6 5A68     		ldr	r2, [r3, #4]
 296 00b8 12F4806F 		tst	r2, #1024
 297 00bc 0CBF     		ite	eq
ARM GAS  /tmp/cchpYDhH.s 			page 25


 298 00be 0120     		moveq	r0, #1
 299              	.LVL23:
 300 00c0 0020     		movne	r0, #0
 301              	.LVL24:
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 302              		.loc 1 229 0
 303 00c2 0F4A     		ldr	r2, .L25+16
 304 00c4 9342     		cmp	r3, r2
 305 00c6 01D0     		beq	.L24
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 306              		.loc 1 238 0
 307 00c8 0020     		movs	r0, #0
 308              	.LVL25:
 309 00ca 08E0     		b	.L12
 310              	.LVL26:
 311              	.L24:
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 312              		.loc 1 229 0 discriminator 1
 313 00cc 69B1     		cbz	r1, .L22
 314 00ce 60B1     		cbz	r0, .L22
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 315              		.loc 1 232 0
 316 00d0 9A68     		ldr	r2, [r3, #8]
 317 00d2 42F48002 		orr	r2, r2, #4194304
 318 00d6 9A60     		str	r2, [r3, #8]
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 319              		.loc 1 238 0
 320 00d8 0020     		movs	r0, #0
 321              	.LVL27:
 322 00da 00E0     		b	.L12
 323              	.LVL28:
 324              	.L18:
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 325              		.loc 1 165 0
 326 00dc 0220     		movs	r0, #2
 327              	.LVL29:
 328              	.L12:
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 329              		.loc 1 239 0
 330 00de 02B0     		add	sp, sp, #8
 331              	.LCFI4:
 332              		.cfi_remember_state
 333              		.cfi_def_cfa_offset 0
 334              		@ sp needed
 335 00e0 7047     		bx	lr
 336              	.LVL30:
 337              	.L19:
 338              	.LCFI5:
 339              		.cfi_restore_state
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 340              		.loc 1 238 0
 341 00e2 0020     		movs	r0, #0
 342              	.LVL31:
 343 00e4 FBE7     		b	.L12
 344              	.LVL32:
 345              	.L20:
 346 00e6 0020     		movs	r0, #0
ARM GAS  /tmp/cchpYDhH.s 			page 26


 347              	.LVL33:
 348 00e8 F9E7     		b	.L12
 349              	.LVL34:
 350              	.L22:
 351 00ea 0020     		movs	r0, #0
 352              	.LVL35:
 353 00ec F7E7     		b	.L12
 354              	.L26:
 355 00ee 00BF     		.align	2
 356              	.L25:
 357 00f0 00000000 		.word	SystemCoreClock
 358 00f4 83DE1B43 		.word	1125899907
 359 00f8 FECFFFFF 		.word	-12290
 360 00fc 00230140 		.word	1073816320
 361 0100 00200140 		.word	1073815552
 362              		.cfi_endproc
 363              	.LFE141:
 365              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 366              		.align	1
 367              		.global	HAL_ADCEx_InjectedStart_IT
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv5-d16
 373              	HAL_ADCEx_InjectedStart_IT:
 374              	.LFB142:
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 375              		.loc 1 249 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380              	.LVL36:
 381 0000 82B0     		sub	sp, sp, #8
 382              	.LCFI6:
 383              		.cfi_def_cfa_offset 8
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tmp1 = 0, tmp2 = 0;
 384              		.loc 1 250 0
 385 0002 0023     		movs	r3, #0
 386 0004 0193     		str	r3, [sp, #4]
 387              	.LVL37:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 388              		.loc 1 254 0
 389 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 390 000a 012B     		cmp	r3, #1
 391 000c 6BD0     		beq	.L34
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 392              		.loc 1 254 0 is_stmt 0 discriminator 2
 393 000e 0123     		movs	r3, #1
 394 0010 80F83C30 		strb	r3, [r0, #60]
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 395              		.loc 1 260 0 is_stmt 1 discriminator 2
 396 0014 0368     		ldr	r3, [r0]
 397 0016 9A68     		ldr	r2, [r3, #8]
 398 0018 12F0010F 		tst	r2, #1
 399 001c 13D1     		bne	.L29
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cchpYDhH.s 			page 27


 400              		.loc 1 263 0
 401 001e 9A68     		ldr	r2, [r3, #8]
 402 0020 42F00102 		orr	r2, r2, #1
 403 0024 9A60     		str	r2, [r3, #8]
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 404              		.loc 1 267 0
 405 0026 344B     		ldr	r3, .L41
 406 0028 1B68     		ldr	r3, [r3]
 407 002a 344A     		ldr	r2, .L41+4
 408 002c A2FB0323 		umull	r2, r3, r2, r3
 409 0030 9B0C     		lsrs	r3, r3, #18
 410 0032 03EB4303 		add	r3, r3, r3, lsl #1
 411 0036 0193     		str	r3, [sp, #4]
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 412              		.loc 1 268 0
 413 0038 02E0     		b	.L30
 414              	.L31:
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 415              		.loc 1 270 0
 416 003a 019B     		ldr	r3, [sp, #4]
 417 003c 013B     		subs	r3, r3, #1
 418 003e 0193     		str	r3, [sp, #4]
 419              	.L30:
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 420              		.loc 1 268 0
 421 0040 019B     		ldr	r3, [sp, #4]
 422 0042 002B     		cmp	r3, #0
 423 0044 F9D1     		bne	.L31
 424              	.L29:
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 425              		.loc 1 275 0
 426 0046 0268     		ldr	r2, [r0]
 427 0048 9368     		ldr	r3, [r2, #8]
 428 004a 13F0010F 		tst	r3, #1
 429 004e 4DD0     		beq	.L35
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 430              		.loc 1 280 0
 431 0050 016C     		ldr	r1, [r0, #64]
 432 0052 2B4B     		ldr	r3, .L41+8
 433 0054 0B40     		ands	r3, r3, r1
 434 0056 43F48053 		orr	r3, r3, #4096
 435 005a 0364     		str	r3, [r0, #64]
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 436              		.loc 1 288 0
 437 005c 036C     		ldr	r3, [r0, #64]
 438 005e 13F4807F 		tst	r3, #256
 439 0062 01D1     		bne	.L32
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 440              		.loc 1 291 0
 441 0064 0023     		movs	r3, #0
 442 0066 4364     		str	r3, [r0, #68]
 443              	.L32:
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 444              		.loc 1 297 0
 445 0068 0023     		movs	r3, #0
 446 006a 80F83C30 		strb	r3, [r0, #60]
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cchpYDhH.s 			page 28


 447              		.loc 1 301 0
 448 006e 6FF00403 		mvn	r3, #4
 449 0072 1360     		str	r3, [r2]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 450              		.loc 1 304 0
 451 0074 0268     		ldr	r2, [r0]
 452 0076 5368     		ldr	r3, [r2, #4]
 453 0078 43F08003 		orr	r3, r3, #128
 454 007c 5360     		str	r3, [r2, #4]
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 455              		.loc 1 307 0
 456 007e 214B     		ldr	r3, .L41+12
 457 0080 5B68     		ldr	r3, [r3, #4]
 458 0082 13F01F0F 		tst	r3, #31
 459 0086 14D1     		bne	.L33
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 460              		.loc 1 309 0
 461 0088 0368     		ldr	r3, [r0]
 462 008a 9A68     		ldr	r2, [r3, #8]
 463 008c 12F4401F 		tst	r2, #3145728
 464 0090 0CBF     		ite	eq
 465 0092 0122     		moveq	r2, #1
 466 0094 0022     		movne	r2, #0
 467              	.LVL38:
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if(tmp1 && tmp2)
 468              		.loc 1 310 0
 469 0096 5968     		ldr	r1, [r3, #4]
 470 0098 11F4806F 		tst	r1, #1024
 471              	.LVL39:
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 472              		.loc 1 311 0
 473 009c 02F00102 		and	r2, r2, #1
 474              	.LVL40:
 475 00a0 18BF     		it	ne
 476 00a2 0022     		movne	r2, #0
 477 00a4 22B3     		cbz	r2, .L36
 478              	.LVL41:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 479              		.loc 1 314 0
 480 00a6 9A68     		ldr	r2, [r3, #8]
 481 00a8 42F48002 		orr	r2, r2, #4194304
 482 00ac 9A60     		str	r2, [r3, #8]
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 483              		.loc 1 330 0
 484 00ae 0020     		movs	r0, #0
 485              	.LVL42:
 486 00b0 1AE0     		b	.L28
 487              	.LVL43:
 488              	.L33:
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       tmp2 = HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO);
 489              		.loc 1 319 0
 490 00b2 0368     		ldr	r3, [r0]
 491 00b4 9A68     		ldr	r2, [r3, #8]
 492 00b6 12F4401F 		tst	r2, #3145728
 493 00ba 0CBF     		ite	eq
 494 00bc 0121     		moveq	r1, #1
 495 00be 0021     		movne	r1, #0
ARM GAS  /tmp/cchpYDhH.s 			page 29


 496              	.LVL44:
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       if((hadc->Instance == ADC1) && tmp1 && tmp2)  
 497              		.loc 1 320 0
 498 00c0 5A68     		ldr	r2, [r3, #4]
 499 00c2 12F4806F 		tst	r2, #1024
 500 00c6 0CBF     		ite	eq
 501 00c8 0120     		moveq	r0, #1
 502              	.LVL45:
 503 00ca 0020     		movne	r0, #0
 504              	.LVL46:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 505              		.loc 1 321 0
 506 00cc 0E4A     		ldr	r2, .L41+16
 507 00ce 9342     		cmp	r3, r2
 508 00d0 01D0     		beq	.L40
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 509              		.loc 1 330 0
 510 00d2 0020     		movs	r0, #0
 511              	.LVL47:
 512 00d4 08E0     		b	.L28
 513              	.LVL48:
 514              	.L40:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 515              		.loc 1 321 0 discriminator 1
 516 00d6 69B1     		cbz	r1, .L38
 517 00d8 60B1     		cbz	r0, .L38
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 518              		.loc 1 324 0
 519 00da 9A68     		ldr	r2, [r3, #8]
 520 00dc 42F48002 		orr	r2, r2, #4194304
 521 00e0 9A60     		str	r2, [r3, #8]
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 522              		.loc 1 330 0
 523 00e2 0020     		movs	r0, #0
 524              	.LVL49:
 525 00e4 00E0     		b	.L28
 526              	.LVL50:
 527              	.L34:
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 528              		.loc 1 254 0
 529 00e6 0220     		movs	r0, #2
 530              	.LVL51:
 531              	.L28:
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 532              		.loc 1 331 0
 533 00e8 02B0     		add	sp, sp, #8
 534              	.LCFI7:
 535              		.cfi_remember_state
 536              		.cfi_def_cfa_offset 0
 537              		@ sp needed
 538 00ea 7047     		bx	lr
 539              	.LVL52:
 540              	.L35:
 541              	.LCFI8:
 542              		.cfi_restore_state
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 543              		.loc 1 330 0
ARM GAS  /tmp/cchpYDhH.s 			page 30


 544 00ec 0020     		movs	r0, #0
 545              	.LVL53:
 546 00ee FBE7     		b	.L28
 547              	.LVL54:
 548              	.L36:
 549 00f0 0020     		movs	r0, #0
 550              	.LVL55:
 551 00f2 F9E7     		b	.L28
 552              	.LVL56:
 553              	.L38:
 554 00f4 0020     		movs	r0, #0
 555              	.LVL57:
 556 00f6 F7E7     		b	.L28
 557              	.L42:
 558              		.align	2
 559              	.L41:
 560 00f8 00000000 		.word	SystemCoreClock
 561 00fc 83DE1B43 		.word	1125899907
 562 0100 FECFFFFF 		.word	-12290
 563 0104 00230140 		.word	1073816320
 564 0108 00200140 		.word	1073815552
 565              		.cfi_endproc
 566              	.LFE142:
 568              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 569              		.align	1
 570              		.global	HAL_ADCEx_InjectedStop
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-d16
 576              	HAL_ADCEx_InjectedStop:
 577              	.LFB143:
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 578              		.loc 1 346 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583              	.LVL58:
 584 0000 0346     		mov	r3, r0
 585              	.LVL59:
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 586              		.loc 1 353 0
 587 0002 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 588 0006 012A     		cmp	r2, #1
 589 0008 27D0     		beq	.L47
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 590              		.loc 1 353 0 is_stmt 0 discriminator 2
 591 000a 0122     		movs	r2, #1
 592 000c 80F83C20 		strb	r2, [r0, #60]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 593              		.loc 1 361 0 is_stmt 1 discriminator 2
 594 0010 026C     		ldr	r2, [r0, #64]
 595 0012 12F4807F 		tst	r2, #256
 596 0016 15D1     		bne	.L45
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 597              		.loc 1 362 0 discriminator 1
ARM GAS  /tmp/cchpYDhH.s 			page 31


 598 0018 0268     		ldr	r2, [r0]
 599 001a 5168     		ldr	r1, [r2, #4]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 600              		.loc 1 361 0 discriminator 1
 601 001c 11F4806F 		tst	r1, #1024
 602 0020 10D1     		bne	.L45
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 603              		.loc 1 366 0
 604 0022 9168     		ldr	r1, [r2, #8]
 605 0024 21F00101 		bic	r1, r1, #1
 606 0028 9160     		str	r1, [r2, #8]
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 607              		.loc 1 369 0
 608 002a 0268     		ldr	r2, [r0]
 609 002c 9268     		ldr	r2, [r2, #8]
 610 002e 12F0010F 		tst	r2, #1
 611 0032 10D1     		bne	.L48
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 612              		.loc 1 372 0
 613 0034 016C     		ldr	r1, [r0, #64]
 614 0036 0A4A     		ldr	r2, .L49
 615 0038 0A40     		ands	r2, r2, r1
 616 003a 42F00102 		orr	r2, r2, #1
 617 003e 0264     		str	r2, [r0, #64]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 618              		.loc 1 347 0
 619 0040 0020     		movs	r0, #0
 620              	.LVL60:
 621 0042 04E0     		b	.L46
 622              	.LVL61:
 623              	.L45:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 624              		.loc 1 380 0
 625 0044 1A6C     		ldr	r2, [r3, #64]
 626 0046 42F02002 		orr	r2, r2, #32
 627 004a 1A64     		str	r2, [r3, #64]
 628              	.LVL62:
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 629              		.loc 1 382 0
 630 004c 0120     		movs	r0, #1
 631              	.LVL63:
 632              	.L46:
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 633              		.loc 1 386 0
 634 004e 0022     		movs	r2, #0
 635 0050 83F83C20 		strb	r2, [r3, #60]
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 636              		.loc 1 389 0
 637 0054 7047     		bx	lr
 638              	.LVL64:
 639              	.L48:
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 640              		.loc 1 347 0
 641 0056 0020     		movs	r0, #0
 642              	.LVL65:
 643 0058 F9E7     		b	.L46
 644              	.LVL66:
ARM GAS  /tmp/cchpYDhH.s 			page 32


 645              	.L47:
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 646              		.loc 1 353 0
 647 005a 0220     		movs	r0, #2
 648              	.LVL67:
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 649              		.loc 1 390 0
 650 005c 7047     		bx	lr
 651              	.L50:
 652 005e 00BF     		.align	2
 653              	.L49:
 654 0060 FEEEFFFF 		.word	-4354
 655              		.cfi_endproc
 656              	.LFE143:
 658              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 659              		.align	1
 660              		.global	HAL_ADCEx_InjectedPollForConversion
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu fpv5-d16
 666              	HAL_ADCEx_InjectedPollForConversion:
 667              	.LFB144:
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   uint32_t tickstart = 0;
 668              		.loc 1 400 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              	.LVL68:
 673 0000 70B5     		push	{r4, r5, r6, lr}
 674              	.LCFI9:
 675              		.cfi_def_cfa_offset 16
 676              		.cfi_offset 4, -16
 677              		.cfi_offset 5, -12
 678              		.cfi_offset 6, -8
 679              		.cfi_offset 14, -4
 680 0002 0446     		mov	r4, r0
 681 0004 0D46     		mov	r5, r1
 682              	.LVL69:
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 683              		.loc 1 404 0
 684 0006 FFF7FEFF 		bl	HAL_GetTick
 685              	.LVL70:
 686 000a 0646     		mov	r6, r0
 687              	.LVL71:
 688              	.L53:
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 689              		.loc 1 407 0
 690 000c 2368     		ldr	r3, [r4]
 691 000e 1A68     		ldr	r2, [r3]
 692 0010 12F0040F 		tst	r2, #4
 693 0014 0FD1     		bne	.L65
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 694              		.loc 1 410 0
 695 0016 B5F1FF3F 		cmp	r5, #-1
 696 001a F7D0     		beq	.L53
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cchpYDhH.s 			page 33


 697              		.loc 1 412 0
 698 001c 25B1     		cbz	r5, .L54
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       {
 699              		.loc 1 412 0 is_stmt 0 discriminator 1
 700 001e FFF7FEFF 		bl	HAL_GetTick
 701              	.LVL72:
 702 0022 801B     		subs	r0, r0, r6
 703 0024 8542     		cmp	r5, r0
 704 0026 F1D2     		bcs	.L53
 705              	.L54:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         /* Process unlocked */
 706              		.loc 1 414 0 is_stmt 1
 707 0028 0423     		movs	r3, #4
 708 002a 2364     		str	r3, [r4, #64]
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 709              		.loc 1 416 0
 710 002c 0023     		movs	r3, #0
 711 002e 84F83C30 		strb	r3, [r4, #60]
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       }
 712              		.loc 1 417 0
 713 0032 0320     		movs	r0, #3
 714 0034 70BD     		pop	{r4, r5, r6, pc}
 715              	.LVL73:
 716              	.L65:
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 717              		.loc 1 423 0
 718 0036 6FF00C02 		mvn	r2, #12
 719 003a 1A60     		str	r2, [r3]
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 720              		.loc 1 426 0
 721 003c 236C     		ldr	r3, [r4, #64]
 722 003e 43F40053 		orr	r3, r3, #8192
 723 0042 2364     		str	r3, [r4, #64]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 724              		.loc 1 434 0
 725 0044 2368     		ldr	r3, [r4]
 726 0046 9A68     		ldr	r2, [r3, #8]
 727 0048 12F4401F 		tst	r2, #3145728
 728 004c 1FD1     		bne	.L58
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 729              		.loc 1 435 0 discriminator 1
 730 004e 9A6B     		ldr	r2, [r3, #56]
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 731              		.loc 1 434 0 discriminator 1
 732 0050 12F4401F 		tst	r2, #3145728
 733 0054 03D0     		beq	.L57
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 734              		.loc 1 436 0
 735 0056 9A68     		ldr	r2, [r3, #8]
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 736              		.loc 1 435 0
 737 0058 12F4806F 		tst	r2, #1024
 738 005c 19D1     		bne	.L59
 739              	.L57:
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 740              		.loc 1 437 0
 741 005e 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/cchpYDhH.s 			page 34


 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 742              		.loc 1 436 0
 743 0060 12F4806F 		tst	r2, #1024
 744 0064 17D1     		bne	.L60
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 745              		.loc 1 438 0
 746 0066 9B68     		ldr	r3, [r3, #8]
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 747              		.loc 1 437 0
 748 0068 13F0405F 		tst	r3, #805306368
 749 006c 15D1     		bne	.L61
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 750              		.loc 1 439 0
 751 006e A369     		ldr	r3, [r4, #24]
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 752              		.loc 1 438 0
 753 0070 ABB9     		cbnz	r3, .L62
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 754              		.loc 1 442 0
 755 0072 236C     		ldr	r3, [r4, #64]
 756 0074 23F48053 		bic	r3, r3, #4096
 757 0078 2364     		str	r3, [r4, #64]
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     { 
 758              		.loc 1 444 0
 759 007a 236C     		ldr	r3, [r4, #64]
 760 007c 13F4807F 		tst	r3, #256
 761 0080 0FD1     		bne	.L63
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 762              		.loc 1 446 0
 763 0082 236C     		ldr	r3, [r4, #64]
 764 0084 43F00103 		orr	r3, r3, #1
 765 0088 2364     		str	r3, [r4, #64]
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }      
 766              		.loc 1 451 0
 767 008a 0020     		movs	r0, #0
 768 008c 70BD     		pop	{r4, r5, r6, pc}
 769              	.LVL74:
 770              	.L58:
 771 008e 0020     		movs	r0, #0
 772 0090 70BD     		pop	{r4, r5, r6, pc}
 773              	.LVL75:
 774              	.L59:
 775 0092 0020     		movs	r0, #0
 776 0094 70BD     		pop	{r4, r5, r6, pc}
 777              	.LVL76:
 778              	.L60:
 779 0096 0020     		movs	r0, #0
 780 0098 70BD     		pop	{r4, r5, r6, pc}
 781              	.LVL77:
 782              	.L61:
 783 009a 0020     		movs	r0, #0
 784 009c 70BD     		pop	{r4, r5, r6, pc}
 785              	.LVL78:
 786              	.L62:
 787 009e 0020     		movs	r0, #0
 788 00a0 70BD     		pop	{r4, r5, r6, pc}
 789              	.LVL79:
ARM GAS  /tmp/cchpYDhH.s 			page 35


 790              	.L63:
 791 00a2 0020     		movs	r0, #0
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 792              		.loc 1 452 0
 793 00a4 70BD     		pop	{r4, r5, r6, pc}
 794              		.cfi_endproc
 795              	.LFE144:
 797              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 798              		.align	1
 799              		.global	HAL_ADCEx_InjectedStop_IT
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv5-d16
 805              	HAL_ADCEx_InjectedStop_IT:
 806              	.LFB145:
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 807              		.loc 1 467 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
 812              	.LVL80:
 813 0000 0346     		mov	r3, r0
 814              	.LVL81:
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 815              		.loc 1 474 0
 816 0002 90F83C20 		ldrb	r2, [r0, #60]	@ zero_extendqisi2
 817 0006 012A     		cmp	r2, #1
 818 0008 2BD0     		beq	.L70
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 819              		.loc 1 474 0 is_stmt 0 discriminator 2
 820 000a 0122     		movs	r2, #1
 821 000c 80F83C20 		strb	r2, [r0, #60]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 822              		.loc 1 482 0 is_stmt 1 discriminator 2
 823 0010 026C     		ldr	r2, [r0, #64]
 824 0012 12F4807F 		tst	r2, #256
 825 0016 19D1     		bne	.L68
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 826              		.loc 1 483 0 discriminator 1
 827 0018 0268     		ldr	r2, [r0]
 828 001a 5168     		ldr	r1, [r2, #4]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 829              		.loc 1 482 0 discriminator 1
 830 001c 11F4806F 		tst	r1, #1024
 831 0020 14D1     		bne	.L68
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 832              		.loc 1 487 0
 833 0022 9168     		ldr	r1, [r2, #8]
 834 0024 21F00101 		bic	r1, r1, #1
 835 0028 9160     		str	r1, [r2, #8]
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 836              		.loc 1 490 0
 837 002a 0268     		ldr	r2, [r0]
 838 002c 9168     		ldr	r1, [r2, #8]
 839 002e 11F0010F 		tst	r1, #1
ARM GAS  /tmp/cchpYDhH.s 			page 36


 840 0032 14D1     		bne	.L71
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 841              		.loc 1 493 0
 842 0034 5168     		ldr	r1, [r2, #4]
 843 0036 21F08001 		bic	r1, r1, #128
 844 003a 5160     		str	r1, [r2, #4]
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 845              		.loc 1 496 0
 846 003c 016C     		ldr	r1, [r0, #64]
 847 003e 0A4A     		ldr	r2, .L72
 848 0040 0A40     		ands	r2, r2, r1
 849 0042 42F00102 		orr	r2, r2, #1
 850 0046 0264     		str	r2, [r0, #64]
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 851              		.loc 1 468 0
 852 0048 0020     		movs	r0, #0
 853              	.LVL82:
 854 004a 04E0     		b	.L69
 855              	.LVL83:
 856              	.L68:
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       
 857              		.loc 1 504 0
 858 004c 1A6C     		ldr	r2, [r3, #64]
 859 004e 42F02002 		orr	r2, r2, #32
 860 0052 1A64     		str	r2, [r3, #64]
 861              	.LVL84:
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 862              		.loc 1 506 0
 863 0054 0120     		movs	r0, #1
 864              	.LVL85:
 865              	.L69:
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 866              		.loc 1 510 0
 867 0056 0022     		movs	r2, #0
 868 0058 83F83C20 		strb	r2, [r3, #60]
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 869              		.loc 1 513 0
 870 005c 7047     		bx	lr
 871              	.LVL86:
 872              	.L71:
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 873              		.loc 1 468 0
 874 005e 0020     		movs	r0, #0
 875              	.LVL87:
 876 0060 F9E7     		b	.L69
 877              	.LVL88:
 878              	.L70:
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 879              		.loc 1 474 0
 880 0062 0220     		movs	r0, #2
 881              	.LVL89:
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 882              		.loc 1 514 0
 883 0064 7047     		bx	lr
 884              	.L73:
 885 0066 00BF     		.align	2
 886              	.L72:
ARM GAS  /tmp/cchpYDhH.s 			page 37


 887 0068 FEEEFFFF 		.word	-4354
 888              		.cfi_endproc
 889              	.LFE145:
 891              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_ADCEx_InjectedGetValue
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv5-d16
 899              	HAL_ADCEx_InjectedGetValue:
 900              	.LFB146:
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t tmp = 0;
 901              		.loc 1 529 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 8
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL90:
 907 0000 82B0     		sub	sp, sp, #8
 908              	.LCFI10:
 909              		.cfi_def_cfa_offset 8
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 910              		.loc 1 530 0
 911 0002 0023     		movs	r3, #0
 912 0004 0193     		str	r3, [sp, #4]
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 913              		.loc 1 537 0
 914 0006 0368     		ldr	r3, [r0]
 915 0008 6FF00402 		mvn	r2, #4
 916 000c 1A60     		str	r2, [r3]
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 917              		.loc 1 540 0
 918 000e 0139     		subs	r1, r1, #1
 919              	.LVL91:
 920 0010 0329     		cmp	r1, #3
 921 0012 06D8     		bhi	.L75
 922 0014 DFE801F0 		tbb	[pc, r1]
 923              	.L77:
 924 0018 10       		.byte	(.L76-.L77)/2
 925 0019 0C       		.byte	(.L78-.L77)/2
 926 001a 08       		.byte	(.L79-.L77)/2
 927 001b 02       		.byte	(.L80-.L77)/2
 928              		.p2align 1
 929              	.L80:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }  
 930              		.loc 1 544 0
 931 001c 0368     		ldr	r3, [r0]
 932 001e 9B6C     		ldr	r3, [r3, #72]
 933 0020 0193     		str	r3, [sp, #4]
 934              	.L75:
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 935              		.loc 1 565 0
 936 0022 0198     		ldr	r0, [sp, #4]
 937              	.LVL92:
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 938              		.loc 1 566 0
ARM GAS  /tmp/cchpYDhH.s 			page 38


 939 0024 02B0     		add	sp, sp, #8
 940              	.LCFI11:
 941              		.cfi_remember_state
 942              		.cfi_def_cfa_offset 0
 943              		@ sp needed
 944 0026 7047     		bx	lr
 945              	.LVL93:
 946              	.L79:
 947              	.LCFI12:
 948              		.cfi_restore_state
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }  
 949              		.loc 1 549 0
 950 0028 0368     		ldr	r3, [r0]
 951 002a 5B6C     		ldr	r3, [r3, #68]
 952 002c 0193     		str	r3, [sp, #4]
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 953              		.loc 1 551 0
 954 002e F8E7     		b	.L75
 955              	.L78:
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 956              		.loc 1 554 0
 957 0030 0368     		ldr	r3, [r0]
 958 0032 1B6C     		ldr	r3, [r3, #64]
 959 0034 0193     		str	r3, [sp, #4]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 960              		.loc 1 556 0
 961 0036 F4E7     		b	.L75
 962              	.L76:
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 963              		.loc 1 559 0
 964 0038 0368     		ldr	r3, [r0]
 965 003a DB6B     		ldr	r3, [r3, #60]
 966 003c 0193     		str	r3, [sp, #4]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     default:
 967              		.loc 1 561 0
 968 003e F0E7     		b	.L75
 969              		.cfi_endproc
 970              	.LFE146:
 972              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 973              		.align	1
 974              		.global	HAL_ADCEx_MultiModeStart_DMA
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv5-d16
 980              	HAL_ADCEx_MultiModeStart_DMA:
 981              	.LFB147:
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   __IO uint32_t counter = 0;
 982              		.loc 1 580 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 8
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986              	.LVL94:
 987 0000 30B5     		push	{r4, r5, lr}
 988              	.LCFI13:
 989              		.cfi_def_cfa_offset 12
 990              		.cfi_offset 4, -12
ARM GAS  /tmp/cchpYDhH.s 			page 39


 991              		.cfi_offset 5, -8
 992              		.cfi_offset 14, -4
 993 0002 83B0     		sub	sp, sp, #12
 994              	.LCFI14:
 995              		.cfi_def_cfa_offset 24
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 996              		.loc 1 581 0
 997 0004 0023     		movs	r3, #0
 998 0006 0193     		str	r3, [sp, #4]
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 999              		.loc 1 589 0
 1000 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1001 000c 012B     		cmp	r3, #1
 1002 000e 70D0     		beq	.L92
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1003              		.loc 1 589 0 is_stmt 0 discriminator 2
 1004 0010 0123     		movs	r3, #1
 1005 0012 80F83C30 		strb	r3, [r0, #60]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 1006              		.loc 1 593 0 is_stmt 1 discriminator 2
 1007 0016 0368     		ldr	r3, [r0]
 1008 0018 9C68     		ldr	r4, [r3, #8]
 1009 001a 14F0010F 		tst	r4, #1
 1010 001e 13D1     		bne	.L84
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1011              		.loc 1 596 0
 1012 0020 9C68     		ldr	r4, [r3, #8]
 1013 0022 44F00104 		orr	r4, r4, #1
 1014 0026 9C60     		str	r4, [r3, #8]
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     while(counter != 0)
 1015              		.loc 1 600 0
 1016 0028 354B     		ldr	r3, .L96
 1017 002a 1C68     		ldr	r4, [r3]
 1018 002c 354B     		ldr	r3, .L96+4
 1019 002e A3FB0434 		umull	r3, r4, r3, r4
 1020 0032 A40C     		lsrs	r4, r4, #18
 1021 0034 04EB4404 		add	r4, r4, r4, lsl #1
 1022 0038 0194     		str	r4, [sp, #4]
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1023              		.loc 1 601 0
 1024 003a 02E0     		b	.L85
 1025              	.L86:
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1026              		.loc 1 603 0
 1027 003c 019C     		ldr	r4, [sp, #4]
 1028 003e 013C     		subs	r4, r4, #1
 1029 0040 0194     		str	r4, [sp, #4]
 1030              	.L85:
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1031              		.loc 1 601 0
 1032 0042 019C     		ldr	r4, [sp, #4]
 1033 0044 002C     		cmp	r4, #0
 1034 0046 F9D1     		bne	.L86
 1035              	.L84:
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1036              		.loc 1 608 0
 1037 0048 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cchpYDhH.s 			page 40


 1038 004a 9C68     		ldr	r4, [r3, #8]
 1039 004c 14F0010F 		tst	r4, #1
 1040 0050 52D0     		beq	.L93
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 1041              		.loc 1 613 0
 1042 0052 056C     		ldr	r5, [r0, #64]
 1043 0054 2C4C     		ldr	r4, .L96+8
 1044 0056 2C40     		ands	r4, r4, r5
 1045 0058 44F48074 		orr	r4, r4, #256
 1046 005c 0464     		str	r4, [r0, #64]
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1047              		.loc 1 619 0
 1048 005e 5B68     		ldr	r3, [r3, #4]
 1049 0060 13F4806F 		tst	r3, #1024
 1050 0064 05D0     		beq	.L87
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1051              		.loc 1 621 0
 1052 0066 036C     		ldr	r3, [r0, #64]
 1053 0068 23F44053 		bic	r3, r3, #12288
 1054 006c 43F48053 		orr	r3, r3, #4096
 1055 0070 0364     		str	r3, [r0, #64]
 1056              	.L87:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1057              		.loc 1 625 0
 1058 0072 036C     		ldr	r3, [r0, #64]
 1059 0074 13F4805F 		tst	r3, #4096
 1060 0078 32D0     		beq	.L88
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1061              		.loc 1 628 0
 1062 007a 436C     		ldr	r3, [r0, #68]
 1063 007c 23F00603 		bic	r3, r3, #6
 1064 0080 4364     		str	r3, [r0, #68]
 1065              	.L89:
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1066              		.loc 1 639 0
 1067 0082 0023     		movs	r3, #0
 1068 0084 80F83C30 		strb	r3, [r0, #60]
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1069              		.loc 1 642 0
 1070 0088 836B     		ldr	r3, [r0, #56]
 1071 008a 204C     		ldr	r4, .L96+12
 1072 008c DC63     		str	r4, [r3, #60]
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1073              		.loc 1 645 0
 1074 008e 836B     		ldr	r3, [r0, #56]
 1075 0090 1F4C     		ldr	r4, .L96+16
 1076 0092 1C64     		str	r4, [r3, #64]
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1077              		.loc 1 648 0
 1078 0094 836B     		ldr	r3, [r0, #56]
 1079 0096 1F4C     		ldr	r4, .L96+20
 1080 0098 DC64     		str	r4, [r3, #76]
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1081              		.loc 1 655 0
 1082 009a 0368     		ldr	r3, [r0]
 1083 009c 6FF00204 		mvn	r4, #2
 1084 00a0 1C60     		str	r4, [r3]
ARM GAS  /tmp/cchpYDhH.s 			page 41


 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1085              		.loc 1 658 0
 1086 00a2 0468     		ldr	r4, [r0]
 1087 00a4 6368     		ldr	r3, [r4, #4]
 1088 00a6 43F08063 		orr	r3, r3, #67108864
 1089 00aa 6360     		str	r3, [r4, #4]
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1090              		.loc 1 660 0
 1091 00ac 90F83030 		ldrb	r3, [r0, #48]	@ zero_extendqisi2
 1092 00b0 CBB1     		cbz	r3, .L90
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1093              		.loc 1 663 0
 1094 00b2 194C     		ldr	r4, .L96+24
 1095 00b4 6368     		ldr	r3, [r4, #4]
 1096 00b6 43F40053 		orr	r3, r3, #8192
 1097 00ba 6360     		str	r3, [r4, #4]
 1098              	.L91:
 1099 00bc 1346     		mov	r3, r2
 1100 00be 0A46     		mov	r2, r1
 1101              	.LVL95:
 1102 00c0 0446     		mov	r4, r0
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1103              		.loc 1 672 0
 1104 00c2 1649     		ldr	r1, .L96+28
 1105              	.LVL96:
 1106 00c4 806B     		ldr	r0, [r0, #56]
 1107              	.LVL97:
 1108 00c6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1109              	.LVL98:
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     {
 1110              		.loc 1 675 0
 1111 00ca 2368     		ldr	r3, [r4]
 1112 00cc 9A68     		ldr	r2, [r3, #8]
 1113 00ce 12F0405F 		tst	r2, #805306368
 1114 00d2 13D1     		bne	.L94
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1115              		.loc 1 678 0
 1116 00d4 9A68     		ldr	r2, [r3, #8]
 1117 00d6 42F08042 		orr	r2, r2, #1073741824
 1118 00da 9A60     		str	r2, [r3, #8]
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1119              		.loc 1 683 0
 1120 00dc 0020     		movs	r0, #0
 1121 00de 09E0     		b	.L83
 1122              	.LVL99:
 1123              	.L88:
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1124              		.loc 1 633 0
 1125 00e0 0023     		movs	r3, #0
 1126 00e2 4364     		str	r3, [r0, #68]
 1127 00e4 CDE7     		b	.L89
 1128              	.L90:
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     }
 1129              		.loc 1 668 0
 1130 00e6 0C4C     		ldr	r4, .L96+24
 1131 00e8 6368     		ldr	r3, [r4, #4]
 1132 00ea 23F40053 		bic	r3, r3, #8192
ARM GAS  /tmp/cchpYDhH.s 			page 42


 1133 00ee 6360     		str	r3, [r4, #4]
 1134 00f0 E4E7     		b	.L91
 1135              	.L92:
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1136              		.loc 1 589 0
 1137 00f2 0220     		movs	r0, #2
 1138              	.LVL100:
 1139              	.L83:
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1140              		.loc 1 684 0
 1141 00f4 03B0     		add	sp, sp, #12
 1142              	.LCFI15:
 1143              		.cfi_remember_state
 1144              		.cfi_def_cfa_offset 12
 1145              		@ sp needed
 1146 00f6 30BD     		pop	{r4, r5, pc}
 1147              	.LVL101:
 1148              	.L93:
 1149              	.LCFI16:
 1150              		.cfi_restore_state
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1151              		.loc 1 683 0
 1152 00f8 0020     		movs	r0, #0
 1153              	.LVL102:
 1154 00fa FBE7     		b	.L83
 1155              	.LVL103:
 1156              	.L94:
 1157 00fc 0020     		movs	r0, #0
 1158 00fe F9E7     		b	.L83
 1159              	.L97:
 1160              		.align	2
 1161              	.L96:
 1162 0100 00000000 		.word	SystemCoreClock
 1163 0104 83DE1B43 		.word	1125899907
 1164 0108 FEF8FFFF 		.word	-1794
 1165 010c 00000000 		.word	ADC_MultiModeDMAConvCplt
 1166 0110 00000000 		.word	ADC_MultiModeDMAHalfConvCplt
 1167 0114 00000000 		.word	ADC_MultiModeDMAError
 1168 0118 00230140 		.word	1073816320
 1169 011c 08230140 		.word	1073816328
 1170              		.cfi_endproc
 1171              	.LFE147:
 1173              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1174              		.align	1
 1175              		.global	HAL_ADCEx_MultiModeStop_DMA
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1179              		.fpu fpv5-d16
 1181              	HAL_ADCEx_MultiModeStop_DMA:
 1182              	.LFB148:
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1183              		.loc 1 693 0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              	.LVL104:
ARM GAS  /tmp/cchpYDhH.s 			page 43


 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1188              		.loc 1 700 0
 1189 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1190 0004 012B     		cmp	r3, #1
 1191 0006 27D0     		beq	.L101
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1192              		.loc 1 693 0 discriminator 2
 1193 0008 10B5     		push	{r4, lr}
 1194              	.LCFI17:
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 4, -8
 1197              		.cfi_offset 14, -4
 1198 000a 0446     		mov	r4, r0
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1199              		.loc 1 700 0 discriminator 2
 1200 000c 0123     		movs	r3, #1
 1201 000e 80F83C30 		strb	r3, [r0, #60]
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1202              		.loc 1 704 0 discriminator 2
 1203 0012 0268     		ldr	r2, [r0]
 1204 0014 9368     		ldr	r3, [r2, #8]
 1205 0016 23F00103 		bic	r3, r3, #1
 1206 001a 9360     		str	r3, [r2, #8]
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1207              		.loc 1 707 0 discriminator 2
 1208 001c 0368     		ldr	r3, [r0]
 1209 001e 9B68     		ldr	r3, [r3, #8]
 1210 0020 13F0010F 		tst	r3, #1
 1211 0024 04D0     		beq	.L107
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1212              		.loc 1 694 0
 1213 0026 0020     		movs	r0, #0
 1214              	.LVL105:
 1215              	.L100:
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1216              		.loc 1 726 0
 1217 0028 0023     		movs	r3, #0
 1218 002a 84F83C30 		strb	r3, [r4, #60]
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1219              		.loc 1 729 0
 1220 002e 10BD     		pop	{r4, pc}
 1221              	.LVL106:
 1222              	.L107:
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1223              		.loc 1 710 0
 1224 0030 0A4A     		ldr	r2, .L108
 1225 0032 5368     		ldr	r3, [r2, #4]
 1226 0034 23F40053 		bic	r3, r3, #8192
 1227 0038 5360     		str	r3, [r2, #4]
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1228              		.loc 1 714 0
 1229 003a 806B     		ldr	r0, [r0, #56]
 1230              	.LVL107:
 1231 003c FFF7FEFF 		bl	HAL_DMA_Abort
 1232              	.LVL108:
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1233              		.loc 1 717 0
ARM GAS  /tmp/cchpYDhH.s 			page 44


 1234 0040 2268     		ldr	r2, [r4]
 1235 0042 5368     		ldr	r3, [r2, #4]
 1236 0044 23F08063 		bic	r3, r3, #67108864
 1237 0048 5360     		str	r3, [r2, #4]
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1238              		.loc 1 720 0
 1239 004a 226C     		ldr	r2, [r4, #64]
 1240 004c 044B     		ldr	r3, .L108+4
 1241 004e 1340     		ands	r3, r3, r2
 1242 0050 43F00103 		orr	r3, r3, #1
 1243 0054 2364     		str	r3, [r4, #64]
 1244 0056 E7E7     		b	.L100
 1245              	.LVL109:
 1246              	.L101:
 1247              	.LCFI18:
 1248              		.cfi_def_cfa_offset 0
 1249              		.cfi_restore 4
 1250              		.cfi_restore 14
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1251              		.loc 1 700 0
 1252 0058 0220     		movs	r0, #2
 1253              	.LVL110:
 1254 005a 7047     		bx	lr
 1255              	.L109:
 1256              		.align	2
 1257              	.L108:
 1258 005c 00230140 		.word	1073816320
 1259 0060 FEEEFFFF 		.word	-4354
 1260              		.cfi_endproc
 1261              	.LFE148:
 1263              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 1264              		.align	1
 1265              		.global	HAL_ADCEx_MultiModeGetValue
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1269              		.fpu fpv5-d16
 1271              	HAL_ADCEx_MultiModeGetValue:
 1272              	.LFB149:
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
 1273              		.loc 1 740 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 1278              	.LVL111:
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1279              		.loc 1 742 0
 1280 0000 014B     		ldr	r3, .L111
 1281 0002 9868     		ldr	r0, [r3, #8]
 1282              	.LVL112:
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1283              		.loc 1 743 0
 1284 0004 7047     		bx	lr
 1285              	.L112:
 1286 0006 00BF     		.align	2
 1287              	.L111:
ARM GAS  /tmp/cchpYDhH.s 			page 45


 1288 0008 00230140 		.word	1073816320
 1289              		.cfi_endproc
 1290              	.LFE149:
 1292              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1293              		.align	1
 1294              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1298              		.fpu fpv5-d16
 1300              	HAL_ADCEx_InjectedConvCpltCallback:
 1301              	.LFB150:
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 1302              		.loc 1 752 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 1307              	.LVL113:
 1308 0000 7047     		bx	lr
 1309              		.cfi_endproc
 1310              	.LFE150:
 1312              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1313              		.align	1
 1314              		.global	HAL_ADCEx_InjectedConfigChannel
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv5-d16
 1320              	HAL_ADCEx_InjectedConfigChannel:
 1321              	.LFB151:
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1322              		.loc 1 769 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 0
 1325              		@ frame_needed = 0, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327              	.LVL114:
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1328              		.loc 1 795 0
 1329 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1330 0004 012B     		cmp	r3, #1
 1331 0006 00F0F380 		beq	.L131
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1332              		.loc 1 769 0 discriminator 2
 1333 000a 30B4     		push	{r4, r5}
 1334              	.LCFI19:
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 4, -8
 1337              		.cfi_offset 5, -4
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1338              		.loc 1 795 0 discriminator 2
 1339 000c 0123     		movs	r3, #1
 1340 000e 80F83C30 		strb	r3, [r0, #60]
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1341              		.loc 1 798 0 discriminator 2
 1342 0012 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/cchpYDhH.s 			page 46


 1343 0014 092B     		cmp	r3, #9
 1344 0016 7BD9     		bls	.L116
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1345              		.loc 1 801 0
 1346 0018 0568     		ldr	r5, [r0]
 1347 001a EA68     		ldr	r2, [r5, #12]
 1348 001c 9BB2     		uxth	r3, r3
 1349 001e 03EB4303 		add	r3, r3, r3, lsl #1
 1350 0022 1E3B     		subs	r3, r3, #30
 1351 0024 0724     		movs	r4, #7
 1352 0026 04FA03F3 		lsl	r3, r4, r3
 1353 002a 22EA0303 		bic	r3, r2, r3
 1354 002e EB60     		str	r3, [r5, #12]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1355              		.loc 1 804 0
 1356 0030 0568     		ldr	r5, [r0]
 1357 0032 EA68     		ldr	r2, [r5, #12]
 1358 0034 8C68     		ldr	r4, [r1, #8]
 1359 0036 0B88     		ldrh	r3, [r1]
 1360 0038 03EB4303 		add	r3, r3, r3, lsl #1
 1361 003c 1E3B     		subs	r3, r3, #30
 1362 003e 04FA03F3 		lsl	r3, r4, r3
 1363 0042 1343     		orrs	r3, r3, r2
 1364 0044 EB60     		str	r3, [r5, #12]
 1365              	.L117:
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   hadc->Instance->JSQR |=  ADC_SQR1(sConfigInjected->InjectedNbrOfConversion);
 1366              		.loc 1 816 0
 1367 0046 0268     		ldr	r2, [r0]
 1368 0048 936B     		ldr	r3, [r2, #56]
 1369 004a 23F44013 		bic	r3, r3, #3145728
 1370 004e 9363     		str	r3, [r2, #56]
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1371              		.loc 1 817 0
 1372 0050 0468     		ldr	r4, [r0]
 1373 0052 A36B     		ldr	r3, [r4, #56]
 1374 0054 0A69     		ldr	r2, [r1, #16]
 1375 0056 013A     		subs	r2, r2, #1
 1376 0058 43EA0253 		orr	r3, r3, r2, lsl #20
 1377 005c A363     		str	r3, [r4, #56]
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****    
 1378              		.loc 1 822 0
 1379 005e 0568     		ldr	r5, [r0]
 1380 0060 AA6B     		ldr	r2, [r5, #56]
 1381 0062 4B68     		ldr	r3, [r1, #4]
 1382 0064 0C69     		ldr	r4, [r1, #16]
 1383 0066 1B1B     		subs	r3, r3, r4
 1384 0068 DBB2     		uxtb	r3, r3
 1385 006a 0333     		adds	r3, r3, #3
 1386 006c DBB2     		uxtb	r3, r3
 1387 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1388 0072 1F24     		movs	r4, #31
 1389 0074 04FA03F3 		lsl	r3, r4, r3
 1390 0078 22EA0303 		bic	r3, r2, r3
 1391 007c AB63     		str	r3, [r5, #56]
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1392              		.loc 1 825 0
 1393 007e 0568     		ldr	r5, [r0]
ARM GAS  /tmp/cchpYDhH.s 			page 47


 1394 0080 AA6B     		ldr	r2, [r5, #56]
 1395 0082 4B68     		ldr	r3, [r1, #4]
 1396 0084 0C69     		ldr	r4, [r1, #16]
 1397 0086 1B1B     		subs	r3, r3, r4
 1398 0088 DBB2     		uxtb	r3, r3
 1399 008a 0333     		adds	r3, r3, #3
 1400 008c DBB2     		uxtb	r3, r3
 1401 008e 03EB8303 		add	r3, r3, r3, lsl #2
 1402 0092 0C88     		ldrh	r4, [r1]
 1403 0094 04FA03F3 		lsl	r3, r4, r3
 1404 0098 1343     		orrs	r3, r3, r2
 1405 009a AB63     		str	r3, [r5, #56]
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {  
 1406              		.loc 1 832 0
 1407 009c 8A69     		ldr	r2, [r1, #24]
 1408 009e 554B     		ldr	r3, .L140
 1409 00a0 9A42     		cmp	r2, r3
 1410 00a2 4BD0     		beq	.L118
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 |=  sConfigInjected->ExternalTrigInjecConv;
 1411              		.loc 1 835 0
 1412 00a4 0268     		ldr	r2, [r0]
 1413 00a6 9368     		ldr	r3, [r2, #8]
 1414 00a8 23F47023 		bic	r3, r3, #983040
 1415 00ac 9360     		str	r3, [r2, #8]
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1416              		.loc 1 836 0
 1417 00ae 0268     		ldr	r2, [r0]
 1418 00b0 9368     		ldr	r3, [r2, #8]
 1419 00b2 8C69     		ldr	r4, [r1, #24]
 1420 00b4 2343     		orrs	r3, r3, r4
 1421 00b6 9360     		str	r3, [r2, #8]
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 |= sConfigInjected->ExternalTrigInjecConvEdge;
 1422              		.loc 1 839 0
 1423 00b8 0268     		ldr	r2, [r0]
 1424 00ba 9368     		ldr	r3, [r2, #8]
 1425 00bc 23F44013 		bic	r3, r3, #3145728
 1426 00c0 9360     		str	r3, [r2, #8]
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1427              		.loc 1 840 0
 1428 00c2 0268     		ldr	r2, [r0]
 1429 00c4 9368     		ldr	r3, [r2, #8]
 1430 00c6 CC69     		ldr	r4, [r1, #28]
 1431 00c8 2343     		orrs	r3, r3, r4
 1432 00ca 9360     		str	r3, [r2, #8]
 1433              	.L119:
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1434              		.loc 1 849 0
 1435 00cc 4B7D     		ldrb	r3, [r1, #21]	@ zero_extendqisi2
 1436 00ce 002B     		cmp	r3, #0
 1437 00d0 3FD0     		beq	.L120
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1438              		.loc 1 852 0
 1439 00d2 0268     		ldr	r2, [r0]
 1440 00d4 5368     		ldr	r3, [r2, #4]
 1441 00d6 43F48063 		orr	r3, r3, #1024
 1442 00da 5360     		str	r3, [r2, #4]
 1443              	.L121:
ARM GAS  /tmp/cchpYDhH.s 			page 48


 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1444              		.loc 1 860 0
 1445 00dc 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1446 00de 002B     		cmp	r3, #0
 1447 00e0 3DD0     		beq	.L122
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1448              		.loc 1 863 0
 1449 00e2 0268     		ldr	r2, [r0]
 1450 00e4 5368     		ldr	r3, [r2, #4]
 1451 00e6 43F48053 		orr	r3, r3, #4096
 1452 00ea 5360     		str	r3, [r2, #4]
 1453              	.L123:
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1454              		.loc 1 871 0
 1455 00ec 4B68     		ldr	r3, [r1, #4]
 1456 00ee 022B     		cmp	r3, #2
 1457 00f0 53D0     		beq	.L125
 1458 00f2 032B     		cmp	r3, #3
 1459 00f4 5CD0     		beq	.L126
 1460 00f6 012B     		cmp	r3, #1
 1461 00f8 37D0     		beq	.L137
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR4 |= sConfigInjected->InjectedOffset;
 1462              		.loc 1 890 0
 1463 00fa 0268     		ldr	r2, [r0]
 1464 00fc 146A     		ldr	r4, [r2, #32]
 1465 00fe 3E4B     		ldr	r3, .L140+4
 1466 0100 2340     		ands	r3, r3, r4
 1467 0102 1362     		str	r3, [r2, #32]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 1468              		.loc 1 891 0
 1469 0104 0268     		ldr	r2, [r0]
 1470 0106 136A     		ldr	r3, [r2, #32]
 1471 0108 CC68     		ldr	r4, [r1, #12]
 1472 010a 2343     		orrs	r3, r3, r4
 1473 010c 1362     		str	r3, [r2, #32]
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1474              		.loc 1 892 0
 1475 010e 36E0     		b	.L128
 1476              	.L116:
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     
 1477              		.loc 1 809 0
 1478 0110 0568     		ldr	r5, [r0]
 1479 0112 2A69     		ldr	r2, [r5, #16]
 1480 0114 9BB2     		uxth	r3, r3
 1481 0116 03EB4303 		add	r3, r3, r3, lsl #1
 1482 011a 0724     		movs	r4, #7
 1483 011c 04FA03F3 		lsl	r3, r4, r3
 1484 0120 22EA0303 		bic	r3, r2, r3
 1485 0124 2B61     		str	r3, [r5, #16]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1486              		.loc 1 812 0
 1487 0126 0568     		ldr	r5, [r0]
 1488 0128 2A69     		ldr	r2, [r5, #16]
 1489 012a 8C68     		ldr	r4, [r1, #8]
 1490 012c 0B88     		ldrh	r3, [r1]
 1491 012e 03EB4303 		add	r3, r3, r3, lsl #1
 1492 0132 04FA03F3 		lsl	r3, r4, r3
ARM GAS  /tmp/cchpYDhH.s 			page 49


 1493 0136 1343     		orrs	r3, r3, r2
 1494 0138 2B61     		str	r3, [r5, #16]
 1495 013a 84E7     		b	.L117
 1496              	.L118:
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_JEXTEN);  
 1497              		.loc 1 845 0
 1498 013c 0268     		ldr	r2, [r0]
 1499 013e 9368     		ldr	r3, [r2, #8]
 1500 0140 23F47023 		bic	r3, r3, #983040
 1501 0144 9360     		str	r3, [r2, #8]
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1502              		.loc 1 846 0
 1503 0146 0268     		ldr	r2, [r0]
 1504 0148 9368     		ldr	r3, [r2, #8]
 1505 014a 23F44013 		bic	r3, r3, #3145728
 1506 014e 9360     		str	r3, [r2, #8]
 1507 0150 BCE7     		b	.L119
 1508              	.L120:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1509              		.loc 1 857 0
 1510 0152 0268     		ldr	r2, [r0]
 1511 0154 5368     		ldr	r3, [r2, #4]
 1512 0156 23F48063 		bic	r3, r3, #1024
 1513 015a 5360     		str	r3, [r2, #4]
 1514 015c BEE7     		b	.L121
 1515              	.L122:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1516              		.loc 1 868 0
 1517 015e 0268     		ldr	r2, [r0]
 1518 0160 5368     		ldr	r3, [r2, #4]
 1519 0162 23F48053 		bic	r3, r3, #4096
 1520 0166 5360     		str	r3, [r2, #4]
 1521 0168 C0E7     		b	.L123
 1522              	.L137:
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR1 |= sConfigInjected->InjectedOffset;
 1523              		.loc 1 875 0
 1524 016a 0268     		ldr	r2, [r0]
 1525 016c 5469     		ldr	r4, [r2, #20]
 1526 016e 224B     		ldr	r3, .L140+4
 1527 0170 2340     		ands	r3, r3, r4
 1528 0172 5361     		str	r3, [r2, #20]
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 1529              		.loc 1 876 0
 1530 0174 0268     		ldr	r2, [r0]
 1531 0176 5369     		ldr	r3, [r2, #20]
 1532 0178 CC68     		ldr	r4, [r1, #12]
 1533 017a 2343     		orrs	r3, r3, r4
 1534 017c 5361     		str	r3, [r2, #20]
 1535              	.L128:
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1536              		.loc 1 896 0
 1537 017e 0268     		ldr	r2, [r0]
 1538 0180 1E4B     		ldr	r3, .L140+8
 1539 0182 9A42     		cmp	r2, r3
 1540 0184 1FD0     		beq	.L138
 1541              	.L129:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cchpYDhH.s 			page 50


 1542              		.loc 1 903 0
 1543 0186 0268     		ldr	r2, [r0]
 1544 0188 1C4B     		ldr	r3, .L140+8
 1545 018a 9A42     		cmp	r2, r3
 1546 018c 24D0     		beq	.L139
 1547              	.L130:
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1548              		.loc 1 910 0
 1549 018e 0023     		movs	r3, #0
 1550 0190 80F83C30 		strb	r3, [r0, #60]
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1551              		.loc 1 913 0
 1552 0194 1846     		mov	r0, r3
 1553              	.LVL115:
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1554              		.loc 1 914 0
 1555 0196 30BC     		pop	{r4, r5}
 1556              	.LCFI20:
 1557              		.cfi_remember_state
 1558              		.cfi_restore 5
 1559              		.cfi_restore 4
 1560              		.cfi_def_cfa_offset 0
 1561 0198 7047     		bx	lr
 1562              	.LVL116:
 1563              	.L125:
 1564              	.LCFI21:
 1565              		.cfi_restore_state
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR2 |= sConfigInjected->InjectedOffset;
 1566              		.loc 1 880 0
 1567 019a 0268     		ldr	r2, [r0]
 1568 019c 9469     		ldr	r4, [r2, #24]
 1569 019e 164B     		ldr	r3, .L140+4
 1570 01a0 2340     		ands	r3, r3, r4
 1571 01a2 9361     		str	r3, [r2, #24]
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 1572              		.loc 1 881 0
 1573 01a4 0268     		ldr	r2, [r0]
 1574 01a6 9369     		ldr	r3, [r2, #24]
 1575 01a8 CC68     		ldr	r4, [r1, #12]
 1576 01aa 2343     		orrs	r3, r3, r4
 1577 01ac 9361     		str	r3, [r2, #24]
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     case 3:
 1578              		.loc 1 882 0
 1579 01ae E6E7     		b	.L128
 1580              	.L126:
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       hadc->Instance->JOFR3 |= sConfigInjected->InjectedOffset;
 1581              		.loc 1 885 0
 1582 01b0 0268     		ldr	r2, [r0]
 1583 01b2 D469     		ldr	r4, [r2, #28]
 1584 01b4 104B     		ldr	r3, .L140+4
 1585 01b6 2340     		ands	r3, r3, r4
 1586 01b8 D361     		str	r3, [r2, #28]
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****       break;
 1587              		.loc 1 886 0
 1588 01ba 0268     		ldr	r2, [r0]
 1589 01bc D369     		ldr	r3, [r2, #28]
 1590 01be CC68     		ldr	r4, [r1, #12]
ARM GAS  /tmp/cchpYDhH.s 			page 51


 1591 01c0 2343     		orrs	r3, r3, r4
 1592 01c2 D361     		str	r3, [r2, #28]
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****     default:
 1593              		.loc 1 887 0
 1594 01c4 DBE7     		b	.L128
 1595              	.L138:
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1596              		.loc 1 896 0 discriminator 1
 1597 01c6 0B68     		ldr	r3, [r1]
 1598 01c8 122B     		cmp	r3, #18
 1599 01ca DCD1     		bne	.L129
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1600              		.loc 1 899 0
 1601 01cc 0C4A     		ldr	r2, .L140+12
 1602 01ce 5368     		ldr	r3, [r2, #4]
 1603 01d0 43F48003 		orr	r3, r3, #4194304
 1604 01d4 5360     		str	r3, [r2, #4]
 1605 01d6 D6E7     		b	.L129
 1606              	.L139:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   {
 1607              		.loc 1 903 0 discriminator 1
 1608 01d8 0B68     		ldr	r3, [r1]
 1609 01da 0A4A     		ldr	r2, .L140+16
 1610 01dc 112B     		cmp	r3, #17
 1611 01de 18BF     		it	ne
 1612 01e0 9342     		cmpne	r3, r2
 1613 01e2 D4D1     		bne	.L130
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   }
 1614              		.loc 1 906 0
 1615 01e4 064A     		ldr	r2, .L140+12
 1616 01e6 5368     		ldr	r3, [r2, #4]
 1617 01e8 43F40003 		orr	r3, r3, #8388608
 1618 01ec 5360     		str	r3, [r2, #4]
 1619 01ee CEE7     		b	.L130
 1620              	.L131:
 1621              	.LCFI22:
 1622              		.cfi_def_cfa_offset 0
 1623              		.cfi_restore 4
 1624              		.cfi_restore 5
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1625              		.loc 1 795 0
 1626 01f0 0220     		movs	r0, #2
 1627              	.LVL117:
 1628 01f2 7047     		bx	lr
 1629              	.L141:
 1630              		.align	2
 1631              	.L140:
 1632 01f4 01000F00 		.word	983041
 1633 01f8 00F0FFFF 		.word	-4096
 1634 01fc 00200140 		.word	1073815552
 1635 0200 00230140 		.word	1073816320
 1636 0204 12000010 		.word	268435474
 1637              		.cfi_endproc
 1638              	.LFE151:
 1640              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 1641              		.align	1
 1642              		.global	HAL_ADCEx_MultiModeConfigChannel
ARM GAS  /tmp/cchpYDhH.s 			page 52


 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu fpv5-d16
 1648              	HAL_ADCEx_MultiModeConfigChannel:
 1649              	.LFB152:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 1650              		.loc 1 925 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 0
 1653              		@ frame_needed = 0, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655              	.LVL118:
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1656              		.loc 1 932 0
 1657 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1658 0004 012B     		cmp	r3, #1
 1659 0006 23D0     		beq	.L144
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   /* Check the parameters */
 1660              		.loc 1 925 0 discriminator 2
 1661 0008 10B4     		push	{r4}
 1662              	.LCFI23:
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 4, -4
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1665              		.loc 1 932 0 discriminator 2
 1666 000a 0123     		movs	r3, #1
 1667 000c 80F83C30 		strb	r3, [r0, #60]
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->Mode;
 1668              		.loc 1 935 0 discriminator 2
 1669 0010 104B     		ldr	r3, .L149
 1670 0012 5A68     		ldr	r2, [r3, #4]
 1671 0014 22F01F02 		bic	r2, r2, #31
 1672 0018 5A60     		str	r2, [r3, #4]
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1673              		.loc 1 936 0 discriminator 2
 1674 001a 5A68     		ldr	r2, [r3, #4]
 1675 001c 0C68     		ldr	r4, [r1]
 1676 001e 2243     		orrs	r2, r2, r4
 1677 0020 5A60     		str	r2, [r3, #4]
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->DMAAccessMode;
 1678              		.loc 1 939 0 discriminator 2
 1679 0022 5A68     		ldr	r2, [r3, #4]
 1680 0024 22F44042 		bic	r2, r2, #49152
 1681 0028 5A60     		str	r2, [r3, #4]
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1682              		.loc 1 940 0 discriminator 2
 1683 002a 5A68     		ldr	r2, [r3, #4]
 1684 002c 4C68     		ldr	r4, [r1, #4]
 1685 002e 2243     		orrs	r2, r2, r4
 1686 0030 5A60     		str	r2, [r3, #4]
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   ADC->CCR |= multimode->TwoSamplingDelay;
 1687              		.loc 1 943 0 discriminator 2
 1688 0032 5A68     		ldr	r2, [r3, #4]
 1689 0034 22F47062 		bic	r2, r2, #3840
 1690 0038 5A60     		str	r2, [r3, #4]
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
ARM GAS  /tmp/cchpYDhH.s 			page 53


 1691              		.loc 1 944 0 discriminator 2
 1692 003a 5A68     		ldr	r2, [r3, #4]
 1693 003c 8968     		ldr	r1, [r1, #8]
 1694              	.LVL119:
 1695 003e 0A43     		orrs	r2, r2, r1
 1696 0040 5A60     		str	r2, [r3, #4]
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1697              		.loc 1 947 0 discriminator 2
 1698 0042 0023     		movs	r3, #0
 1699 0044 80F83C30 		strb	r3, [r0, #60]
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** }
 1700              		.loc 1 950 0 discriminator 2
 1701 0048 1846     		mov	r0, r3
 1702              	.LVL120:
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c **** 
 1703              		.loc 1 951 0 discriminator 2
 1704 004a 5DF8044B 		ldr	r4, [sp], #4
 1705              	.LCFI24:
 1706              		.cfi_restore 4
 1707              		.cfi_def_cfa_offset 0
 1708 004e 7047     		bx	lr
 1709              	.LVL121:
 1710              	.L144:
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c ****   
 1711              		.loc 1 932 0
 1712 0050 0220     		movs	r0, #2
 1713              	.LVL122:
 1714 0052 7047     		bx	lr
 1715              	.L150:
 1716              		.align	2
 1717              	.L149:
 1718 0054 00230140 		.word	1073816320
 1719              		.cfi_endproc
 1720              	.LFE152:
 1722              		.text
 1723              	.Letext0:
 1724              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1725              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1726              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1727              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1728              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1729              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1730              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1731              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1732              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 1733              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc_ex.h"
 1734              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cchpYDhH.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_adc_ex.c
     /tmp/cchpYDhH.s:17     .text.ADC_MultiModeDMAError:0000000000000000 $t
     /tmp/cchpYDhH.s:23     .text.ADC_MultiModeDMAError:0000000000000000 ADC_MultiModeDMAError
     /tmp/cchpYDhH.s:54     .text.ADC_MultiModeDMAHalfConvCplt:0000000000000000 $t
     /tmp/cchpYDhH.s:60     .text.ADC_MultiModeDMAHalfConvCplt:0000000000000000 ADC_MultiModeDMAHalfConvCplt
     /tmp/cchpYDhH.s:83     .text.ADC_MultiModeDMAConvCplt:0000000000000000 $t
     /tmp/cchpYDhH.s:89     .text.ADC_MultiModeDMAConvCplt:0000000000000000 ADC_MultiModeDMAConvCplt
     /tmp/cchpYDhH.s:168    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/cchpYDhH.s:175    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/cchpYDhH.s:357    .text.HAL_ADCEx_InjectedStart:00000000000000f0 $d
     /tmp/cchpYDhH.s:366    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/cchpYDhH.s:373    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cchpYDhH.s:560    .text.HAL_ADCEx_InjectedStart_IT:00000000000000f8 $d
     /tmp/cchpYDhH.s:569    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/cchpYDhH.s:576    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/cchpYDhH.s:654    .text.HAL_ADCEx_InjectedStop:0000000000000060 $d
     /tmp/cchpYDhH.s:659    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/cchpYDhH.s:666    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cchpYDhH.s:798    .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/cchpYDhH.s:805    .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cchpYDhH.s:887    .text.HAL_ADCEx_InjectedStop_IT:0000000000000068 $d
     /tmp/cchpYDhH.s:892    .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/cchpYDhH.s:899    .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/cchpYDhH.s:924    .text.HAL_ADCEx_InjectedGetValue:0000000000000018 $d
     /tmp/cchpYDhH.s:928    .text.HAL_ADCEx_InjectedGetValue:000000000000001c $t
     /tmp/cchpYDhH.s:973    .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/cchpYDhH.s:980    .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cchpYDhH.s:1162   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000100 $d
     /tmp/cchpYDhH.s:1174   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/cchpYDhH.s:1181   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cchpYDhH.s:1258   .text.HAL_ADCEx_MultiModeStop_DMA:000000000000005c $d
     /tmp/cchpYDhH.s:1264   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/cchpYDhH.s:1271   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cchpYDhH.s:1288   .text.HAL_ADCEx_MultiModeGetValue:0000000000000008 $d
     /tmp/cchpYDhH.s:1293   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cchpYDhH.s:1300   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cchpYDhH.s:1313   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/cchpYDhH.s:1320   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cchpYDhH.s:1632   .text.HAL_ADCEx_InjectedConfigChannel:00000000000001f4 $d
     /tmp/cchpYDhH.s:1641   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/cchpYDhH.s:1648   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cchpYDhH.s:1718   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000054 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_ErrorCallback
HAL_ADC_ConvHalfCpltCallback
HAL_ADC_ConvCpltCallback
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
