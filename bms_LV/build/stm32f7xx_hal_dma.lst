ARM GAS  /tmp/ccBmVPq7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_dma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.DMA_SetConfig,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	DMA_SetConfig:
  24              	.LFB153:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
ARM GAS  /tmp/ccBmVPq7.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Select Callbacks functions using HAL_DMA_RegisterCallback()
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =============================================
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * All rights reserved.</center></h2>
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccBmVPq7.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
ARM GAS  /tmp/ccBmVPq7.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
ARM GAS  /tmp/ccBmVPq7.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
ARM GAS  /tmp/ccBmVPq7.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_ERROR; 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccBmVPq7.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clean all callbacks */
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the error code */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset the DMA state */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
ARM GAS  /tmp/ccBmVPq7.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccBmVPq7.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
ARM GAS  /tmp/ccBmVPq7.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
ARM GAS  /tmp/ccBmVPq7.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
ARM GAS  /tmp/ccBmVPq7.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
ARM GAS  /tmp/ccBmVPq7.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
ARM GAS  /tmp/ccBmVPq7.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer flag */
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccBmVPq7.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
ARM GAS  /tmp/ccBmVPq7.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
ARM GAS  /tmp/ccBmVPq7.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccBmVPq7.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
ARM GAS  /tmp/ccBmVPq7.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
ARM GAS  /tmp/ccBmVPq7.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
ARM GAS  /tmp/ccBmVPq7.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  26              		.loc 1 1153 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 30B4     		push	{r4, r5}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
  37              		.loc 1 1155 0
  38 0002 0568     		ldr	r5, [r0]
  39 0004 2C68     		ldr	r4, [r5]
  40 0006 24F48024 		bic	r4, r4, #262144
  41 000a 2C60     		str	r4, [r5]
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
ARM GAS  /tmp/ccBmVPq7.s 			page 22


1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
  42              		.loc 1 1158 0
  43 000c 0468     		ldr	r4, [r0]
  44 000e 6360     		str	r3, [r4, #4]
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  45              		.loc 1 1161 0
  46 0010 8368     		ldr	r3, [r0, #8]
  47              	.LVL1:
  48 0012 402B     		cmp	r3, #64
  49 0014 05D0     		beq	.L5
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
  50              		.loc 1 1173 0
  51 0016 0368     		ldr	r3, [r0]
  52 0018 9960     		str	r1, [r3, #8]
  53              	.LVL2:
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
  54              		.loc 1 1176 0
  55 001a 0368     		ldr	r3, [r0]
  56 001c DA60     		str	r2, [r3, #12]
  57              	.L1:
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
  58              		.loc 1 1178 0
  59 001e 30BC     		pop	{r4, r5}
  60              	.LCFI1:
  61              		.cfi_remember_state
  62              		.cfi_restore 5
  63              		.cfi_restore 4
  64              		.cfi_def_cfa_offset 0
  65 0020 7047     		bx	lr
  66              	.LVL3:
  67              	.L5:
  68              	.LCFI2:
  69              		.cfi_restore_state
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
  70              		.loc 1 1164 0
  71 0022 0368     		ldr	r3, [r0]
  72 0024 9A60     		str	r2, [r3, #8]
  73              	.LVL4:
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
  74              		.loc 1 1167 0
  75 0026 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccBmVPq7.s 			page 23


  76 0028 D960     		str	r1, [r3, #12]
  77 002a F8E7     		b	.L1
  78              		.cfi_endproc
  79              	.LFE153:
  81              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
  82              		.align	1
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-d16
  88              	DMA_CalcBaseAndBitshift:
  89              	.LFB154:
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  90              		.loc 1 1187 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL5:
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
  96              		.loc 1 1188 0
  97 0000 0268     		ldr	r2, [r0]
  98 0002 D3B2     		uxtb	r3, r2
  99 0004 103B     		subs	r3, r3, #16
 100 0006 0949     		ldr	r1, .L10
 101 0008 A1FB0313 		umull	r1, r3, r1, r3
 102 000c 1B09     		lsrs	r3, r3, #4
 103              	.LVL6:
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 104              		.loc 1 1192 0
 105 000e 0849     		ldr	r1, .L10+4
 106 0010 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 107 0012 C165     		str	r1, [r0, #92]
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 108              		.loc 1 1194 0
 109 0014 032B     		cmp	r3, #3
 110 0016 04D8     		bhi	.L9
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
ARM GAS  /tmp/ccBmVPq7.s 			page 24


 111              		.loc 1 1202 0
 112 0018 064B     		ldr	r3, .L10+8
 113              	.LVL7:
 114 001a 1340     		ands	r3, r3, r2
 115 001c 8365     		str	r3, [r0, #88]
 116              	.L8:
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 117              		.loc 1 1206 0
 118 001e 806D     		ldr	r0, [r0, #88]
 119              	.LVL8:
 120 0020 7047     		bx	lr
 121              	.LVL9:
 122              	.L9:
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 123              		.loc 1 1197 0
 124 0022 044B     		ldr	r3, .L10+8
 125              	.LVL10:
 126 0024 1340     		ands	r3, r3, r2
 127 0026 0433     		adds	r3, r3, #4
 128 0028 8365     		str	r3, [r0, #88]
 129 002a F8E7     		b	.L8
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 002c ABAAAAAA 		.word	-1431655765
 134 0030 00000000 		.word	.LANCHOR0
 135 0034 00FCFFFF 		.word	-1024
 136              		.cfi_endproc
 137              	.LFE154:
 139              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	DMA_CheckFifoParam:
 147              	.LFB155:
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 148              		.loc 1 1215 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL11:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
ARM GAS  /tmp/ccBmVPq7.s 			page 25


 154              		.loc 1 1217 0
 155 0000 836A     		ldr	r3, [r0, #40]
 156              	.LVL12:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 157              		.loc 1 1220 0
 158 0002 8269     		ldr	r2, [r0, #24]
 159 0004 92B9     		cbnz	r2, .L13
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 160              		.loc 1 1222 0
 161 0006 012B     		cmp	r3, #1
 162 0008 0AD0     		beq	.L15
 163 000a 1BB1     		cbz	r3, .L16
 164 000c 022B     		cmp	r3, #2
 165 000e 01D0     		beq	.L16
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 166              		.loc 1 1216 0
 167 0010 0020     		movs	r0, #0
 168              	.LVL13:
 169 0012 7047     		bx	lr
 170              	.LVL14:
 171              	.L16:
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 172              		.loc 1 1226 0
 173 0014 C36A     		ldr	r3, [r0, #44]
 174              	.LVL15:
 175 0016 13F0807F 		tst	r3, #16777216
 176 001a 2CD1     		bne	.L25
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 177              		.loc 1 1216 0
 178 001c 0020     		movs	r0, #0
 179              	.LVL16:
 180 001e 7047     		bx	lr
 181              	.LVL17:
 182              	.L15:
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 183              		.loc 1 1232 0
 184 0020 C36A     		ldr	r3, [r0, #44]
 185              	.LVL18:
 186 0022 B3F1C07F 		cmp	r3, #25165824
 187 0026 28D0     		beq	.L26
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 188              		.loc 1 1216 0
 189 0028 0020     		movs	r0, #0
 190              	.LVL19:
 191 002a 7047     		bx	lr
 192              	.LVL20:
ARM GAS  /tmp/ccBmVPq7.s 			page 26


 193              	.L13:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 194              		.loc 1 1245 0
 195 002c B2F5005F 		cmp	r2, #8192
 196 0030 05D0     		beq	.L33
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;   
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 197              		.loc 1 1273 0
 198 0032 022B     		cmp	r3, #2
 199 0034 29D9     		bls	.L30
 200 0036 032B     		cmp	r3, #3
 201 0038 15D0     		beq	.L23
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 202              		.loc 1 1216 0
 203 003a 0020     		movs	r0, #0
 204              	.LVL21:
 205 003c 7047     		bx	lr
 206              	.LVL22:
 207              	.L33:
ARM GAS  /tmp/ccBmVPq7.s 			page 27


1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 208              		.loc 1 1247 0
 209 003e 032B     		cmp	r3, #3
 210 0040 03D8     		bhi	.L18
 211 0042 DFE803F0 		tbb	[pc, r3]
 212              	.L19:
 213 0046 1C       		.byte	(.L27-.L19)/2
 214 0047 04       		.byte	(.L20-.L19)/2
 215 0048 1C       		.byte	(.L27-.L19)/2
 216 0049 0A       		.byte	(.L21-.L19)/2
 217              		.p2align 1
 218              	.L18:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 219              		.loc 1 1216 0
 220 004a 0020     		movs	r0, #0
 221              	.LVL23:
 222 004c 7047     		bx	lr
 223              	.LVL24:
 224              	.L20:
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 225              		.loc 1 1254 0
 226 004e C36A     		ldr	r3, [r0, #44]
 227              	.LVL25:
 228 0050 13F0807F 		tst	r3, #16777216
 229 0054 15D1     		bne	.L28
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 230              		.loc 1 1216 0
 231 0056 0020     		movs	r0, #0
 232              	.LVL26:
 233 0058 7047     		bx	lr
 234              	.LVL27:
 235              	.L21:
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 236              		.loc 1 1260 0
 237 005a C36A     		ldr	r3, [r0, #44]
 238              	.LVL28:
 239 005c B3F1C07F 		cmp	r3, #25165824
 240 0060 11D0     		beq	.L29
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 241              		.loc 1 1216 0
 242 0062 0020     		movs	r0, #0
 243              	.LVL29:
 244 0064 7047     		bx	lr
 245              	.LVL30:
 246              	.L23:
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 247              		.loc 1 1281 0
 248 0066 C36A     		ldr	r3, [r0, #44]
 249              	.LVL31:
 250 0068 13F0807F 		tst	r3, #16777216
ARM GAS  /tmp/ccBmVPq7.s 			page 28


 251 006c 01D0     		beq	.L34
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 252              		.loc 1 1283 0
 253 006e 0120     		movs	r0, #1
 254              	.LVL32:
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 255              		.loc 1 1292 0
 256 0070 7047     		bx	lr
 257              	.LVL33:
 258              	.L34:
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 259              		.loc 1 1216 0
 260 0072 0020     		movs	r0, #0
 261              	.LVL34:
 262 0074 7047     		bx	lr
 263              	.LVL35:
 264              	.L25:
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 265              		.loc 1 1228 0
 266 0076 0120     		movs	r0, #1
 267              	.LVL36:
 268 0078 7047     		bx	lr
 269              	.LVL37:
 270              	.L26:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 271              		.loc 1 1234 0
 272 007a 0120     		movs	r0, #1
 273              	.LVL38:
 274 007c 7047     		bx	lr
 275              	.LVL39:
 276              	.L27:
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 277              		.loc 1 1251 0
 278 007e 0120     		movs	r0, #1
 279              	.LVL40:
 280 0080 7047     		bx	lr
 281              	.LVL41:
 282              	.L28:
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 283              		.loc 1 1256 0
 284 0082 0120     		movs	r0, #1
 285              	.LVL42:
 286 0084 7047     		bx	lr
 287              	.LVL43:
 288              	.L29:
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 289              		.loc 1 1262 0
 290 0086 0120     		movs	r0, #1
ARM GAS  /tmp/ccBmVPq7.s 			page 29


 291              	.LVL44:
 292 0088 7047     		bx	lr
 293              	.LVL45:
 294              	.L30:
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 295              		.loc 1 1278 0
 296 008a 0120     		movs	r0, #1
 297              	.LVL46:
 298 008c 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE155:
 302              		.section	.text.HAL_DMA_Init,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_DMA_Init
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv5-d16
 310              	HAL_DMA_Init:
 311              	.LFB141:
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
 312              		.loc 1 173 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL47:
 317 0000 70B5     		push	{r4, r5, r6, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 4, -16
 321              		.cfi_offset 5, -12
 322              		.cfi_offset 6, -8
 323              		.cfi_offset 14, -4
 324 0002 0446     		mov	r4, r0
 325              	.LVL48:
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 326              		.loc 1 175 0
 327 0004 FFF7FEFF 		bl	HAL_GetTick
 328              	.LVL49:
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 329              		.loc 1 179 0
 330 0008 002C     		cmp	r4, #0
 331 000a 5DD0     		beq	.L41
 332 000c 0546     		mov	r5, r0
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 333              		.loc 1 205 0
 334 000e 0023     		movs	r3, #0
 335 0010 84F83430 		strb	r3, [r4, #52]
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 336              		.loc 1 208 0
 337 0014 0223     		movs	r3, #2
 338 0016 84F83530 		strb	r3, [r4, #53]
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 339              		.loc 1 211 0
 340 001a 2268     		ldr	r2, [r4]
 341 001c 1368     		ldr	r3, [r2]
 342 001e 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccBmVPq7.s 			page 30


 343 0022 1360     		str	r3, [r2]
 344              	.LVL50:
 345              	.L37:
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 346              		.loc 1 214 0
 347 0024 2368     		ldr	r3, [r4]
 348 0026 1A68     		ldr	r2, [r3]
 349 0028 12F0010F 		tst	r2, #1
 350 002c 0AD0     		beq	.L43
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 351              		.loc 1 217 0
 352 002e FFF7FEFF 		bl	HAL_GetTick
 353              	.LVL51:
 354 0032 401B     		subs	r0, r0, r5
 355 0034 0528     		cmp	r0, #5
 356 0036 F5D9     		bls	.L37
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 357              		.loc 1 220 0
 358 0038 2023     		movs	r3, #32
 359 003a 6365     		str	r3, [r4, #84]
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 360              		.loc 1 223 0
 361 003c 0320     		movs	r0, #3
 362 003e 84F83500 		strb	r0, [r4, #53]
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 363              		.loc 1 225 0
 364 0042 70BD     		pop	{r4, r5, r6, pc}
 365              	.LVL52:
 366              	.L43:
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 367              		.loc 1 230 0
 368 0044 1A68     		ldr	r2, [r3]
 369              	.LVL53:
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 370              		.loc 1 233 0
 371 0046 2149     		ldr	r1, .L46
 372 0048 1140     		ands	r1, r1, r2
 373              	.LVL54:
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 374              		.loc 1 239 0
 375 004a 6268     		ldr	r2, [r4, #4]
 376 004c A068     		ldr	r0, [r4, #8]
 377 004e 0243     		orrs	r2, r2, r0
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 378              		.loc 1 240 0
 379 0050 E068     		ldr	r0, [r4, #12]
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 380              		.loc 1 239 0
 381 0052 0243     		orrs	r2, r2, r0
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 382              		.loc 1 240 0
 383 0054 2069     		ldr	r0, [r4, #16]
 384 0056 0243     		orrs	r2, r2, r0
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 385              		.loc 1 241 0
 386 0058 6069     		ldr	r0, [r4, #20]
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
ARM GAS  /tmp/ccBmVPq7.s 			page 31


 387              		.loc 1 240 0
 388 005a 0243     		orrs	r2, r2, r0
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 389              		.loc 1 241 0
 390 005c A069     		ldr	r0, [r4, #24]
 391 005e 0243     		orrs	r2, r2, r0
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 392              		.loc 1 242 0
 393 0060 E069     		ldr	r0, [r4, #28]
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 394              		.loc 1 241 0
 395 0062 0243     		orrs	r2, r2, r0
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 396              		.loc 1 242 0
 397 0064 206A     		ldr	r0, [r4, #32]
 398 0066 0243     		orrs	r2, r2, r0
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 399              		.loc 1 239 0
 400 0068 0A43     		orrs	r2, r2, r1
 401              	.LVL55:
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 402              		.loc 1 245 0
 403 006a 616A     		ldr	r1, [r4, #36]
 404 006c 0429     		cmp	r1, #4
 405 006e 16D0     		beq	.L44
 406              	.L39:
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 407              		.loc 1 252 0
 408 0070 1A60     		str	r2, [r3]
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 409              		.loc 1 255 0
 410 0072 2668     		ldr	r6, [r4]
 411 0074 7569     		ldr	r5, [r6, #20]
 412              	.LVL56:
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 413              		.loc 1 258 0
 414 0076 25F00705 		bic	r5, r5, #7
 415              	.LVL57:
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 416              		.loc 1 261 0
 417 007a 636A     		ldr	r3, [r4, #36]
 418 007c 1D43     		orrs	r5, r5, r3
 419              	.LVL58:
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 420              		.loc 1 264 0
 421 007e 042B     		cmp	r3, #4
 422 0080 12D0     		beq	.L45
 423              	.L40:
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 424              		.loc 1 287 0
 425 0082 7561     		str	r5, [r6, #20]
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 426              		.loc 1 291 0
 427 0084 2046     		mov	r0, r4
 428 0086 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 429              	.LVL59:
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccBmVPq7.s 			page 32


 430              		.loc 1 294 0
 431 008a E26D     		ldr	r2, [r4, #92]
 432 008c 3F23     		movs	r3, #63
 433 008e 9340     		lsls	r3, r3, r2
 434 0090 8360     		str	r3, [r0, #8]
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 435              		.loc 1 297 0
 436 0092 0020     		movs	r0, #0
 437              	.LVL60:
 438 0094 6065     		str	r0, [r4, #84]
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 439              		.loc 1 300 0
 440 0096 0123     		movs	r3, #1
 441 0098 84F83530 		strb	r3, [r4, #53]
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 442              		.loc 1 302 0
 443 009c 70BD     		pop	{r4, r5, r6, pc}
 444              	.LVL61:
 445              	.L44:
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 446              		.loc 1 248 0
 447 009e E16A     		ldr	r1, [r4, #44]
 448 00a0 206B     		ldr	r0, [r4, #48]
 449 00a2 0143     		orrs	r1, r1, r0
 450 00a4 0A43     		orrs	r2, r2, r1
 451              	.LVL62:
 452 00a6 E3E7     		b	.L39
 453              	.LVL63:
 454              	.L45:
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 455              		.loc 1 267 0
 456 00a8 A36A     		ldr	r3, [r4, #40]
 457 00aa 1D43     		orrs	r5, r5, r3
 458              	.LVL64:
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 459              		.loc 1 271 0
 460 00ac E36A     		ldr	r3, [r4, #44]
 461 00ae 002B     		cmp	r3, #0
 462 00b0 E7D0     		beq	.L40
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 463              		.loc 1 273 0
 464 00b2 2046     		mov	r0, r4
 465 00b4 FFF7FEFF 		bl	DMA_CheckFifoParam
 466              	.LVL65:
 467 00b8 0028     		cmp	r0, #0
 468 00ba E2D0     		beq	.L40
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 469              		.loc 1 276 0
 470 00bc 4023     		movs	r3, #64
 471 00be 6365     		str	r3, [r4, #84]
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 472              		.loc 1 279 0
 473 00c0 0120     		movs	r0, #1
 474 00c2 84F83500 		strb	r0, [r4, #53]
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 475              		.loc 1 281 0
 476 00c6 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccBmVPq7.s 			page 33


 477              	.LVL66:
 478              	.L41:
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 479              		.loc 1 181 0
 480 00c8 0120     		movs	r0, #1
 481              	.LVL67:
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 482              		.loc 1 303 0
 483 00ca 70BD     		pop	{r4, r5, r6, pc}
 484              	.LVL68:
 485              	.L47:
 486              		.align	2
 487              	.L46:
 488 00cc 3F8010E0 		.word	-535789505
 489              		.cfi_endproc
 490              	.LFE141:
 492              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 493              		.align	1
 494              		.global	HAL_DMA_DeInit
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv5-d16
 500              	HAL_DMA_DeInit:
 501              	.LFB142:
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 502              		.loc 1 312 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL69:
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 507              		.loc 1 316 0
 508 0000 0028     		cmp	r0, #0
 509 0002 2ED0     		beq	.L50
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 510              		.loc 1 312 0
 511 0004 38B5     		push	{r3, r4, r5, lr}
 512              	.LCFI4:
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 3, -16
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 518 0006 0446     		mov	r4, r0
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 519              		.loc 1 322 0
 520 0008 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 521 000c DBB2     		uxtb	r3, r3
 522 000e 022B     		cmp	r3, #2
 523 0010 01D1     		bne	.L56
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 524              		.loc 1 325 0
 525 0012 0220     		movs	r0, #2
 526              	.LVL70:
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 527              		.loc 1 376 0
ARM GAS  /tmp/ccBmVPq7.s 			page 34


 528 0014 38BD     		pop	{r3, r4, r5, pc}
 529              	.LVL71:
 530              	.L56:
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 531              		.loc 1 332 0
 532 0016 0268     		ldr	r2, [r0]
 533 0018 1368     		ldr	r3, [r2]
 534 001a 23F00103 		bic	r3, r3, #1
 535 001e 1360     		str	r3, [r2]
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 536              		.loc 1 335 0
 537 0020 0368     		ldr	r3, [r0]
 538 0022 0025     		movs	r5, #0
 539 0024 1D60     		str	r5, [r3]
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 540              		.loc 1 338 0
 541 0026 0368     		ldr	r3, [r0]
 542 0028 5D60     		str	r5, [r3, #4]
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 543              		.loc 1 341 0
 544 002a 0368     		ldr	r3, [r0]
 545 002c 9D60     		str	r5, [r3, #8]
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 546              		.loc 1 344 0
 547 002e 0368     		ldr	r3, [r0]
 548 0030 DD60     		str	r5, [r3, #12]
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 549              		.loc 1 347 0
 550 0032 0368     		ldr	r3, [r0]
 551 0034 1D61     		str	r5, [r3, #16]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 552              		.loc 1 350 0
 553 0036 0368     		ldr	r3, [r0]
 554 0038 2122     		movs	r2, #33
 555 003a 5A61     		str	r2, [r3, #20]
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 556              		.loc 1 353 0
 557 003c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 558              	.LVL72:
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 559              		.loc 1 356 0
 560 0040 E26D     		ldr	r2, [r4, #92]
 561 0042 3F23     		movs	r3, #63
 562 0044 9340     		lsls	r3, r3, r2
 563 0046 8360     		str	r3, [r0, #8]
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 564              		.loc 1 359 0
 565 0048 E563     		str	r5, [r4, #60]
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 566              		.loc 1 360 0
 567 004a 2564     		str	r5, [r4, #64]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 568              		.loc 1 361 0
 569 004c 6564     		str	r5, [r4, #68]
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 570              		.loc 1 362 0
 571 004e A564     		str	r5, [r4, #72]
ARM GAS  /tmp/ccBmVPq7.s 			page 35


 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;  
 572              		.loc 1 363 0
 573 0050 E564     		str	r5, [r4, #76]
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 574              		.loc 1 364 0
 575 0052 2565     		str	r5, [r4, #80]
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 576              		.loc 1 367 0
 577 0054 6565     		str	r5, [r4, #84]
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 578              		.loc 1 370 0
 579 0056 84F83550 		strb	r5, [r4, #53]
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 580              		.loc 1 373 0
 581 005a 84F83450 		strb	r5, [r4, #52]
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 582              		.loc 1 375 0
 583 005e 2846     		mov	r0, r5
 584              	.LVL73:
 585 0060 38BD     		pop	{r3, r4, r5, pc}
 586              	.LVL74:
 587              	.L50:
 588              	.LCFI5:
 589              		.cfi_def_cfa_offset 0
 590              		.cfi_restore 3
 591              		.cfi_restore 4
 592              		.cfi_restore 5
 593              		.cfi_restore 14
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 594              		.loc 1 318 0
 595 0062 0120     		movs	r0, #1
 596              	.LVL75:
 597 0064 7047     		bx	lr
 598              		.cfi_endproc
 599              	.LFE142:
 601              		.section	.text.HAL_DMA_Start,"ax",%progbits
 602              		.align	1
 603              		.global	HAL_DMA_Start
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv5-d16
 609              	HAL_DMA_Start:
 610              	.LFB143:
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 611              		.loc 1 410 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              	.LVL76:
 616 0000 38B5     		push	{r3, r4, r5, lr}
 617              	.LCFI6:
 618              		.cfi_def_cfa_offset 16
 619              		.cfi_offset 3, -16
 620              		.cfi_offset 4, -12
 621              		.cfi_offset 5, -8
 622              		.cfi_offset 14, -4
ARM GAS  /tmp/ccBmVPq7.s 			page 36


 623              	.LVL77:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 624              		.loc 1 417 0
 625 0002 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 626 0006 012C     		cmp	r4, #1
 627 0008 1CD0     		beq	.L60
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 628              		.loc 1 417 0 is_stmt 0 discriminator 2
 629 000a 0124     		movs	r4, #1
 630 000c 80F83440 		strb	r4, [r0, #52]
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 631              		.loc 1 419 0 is_stmt 1 discriminator 2
 632 0010 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 633 0014 E4B2     		uxtb	r4, r4
 634 0016 012C     		cmp	r4, #1
 635 0018 04D0     		beq	.L62
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 636              		.loc 1 436 0
 637 001a 0023     		movs	r3, #0
 638              	.LVL78:
 639 001c 80F83430 		strb	r3, [r0, #52]
 640              	.LVL79:
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 641              		.loc 1 439 0
 642 0020 0220     		movs	r0, #2
 643              	.LVL80:
 644 0022 38BD     		pop	{r3, r4, r5, pc}
 645              	.LVL81:
 646              	.L62:
 647 0024 0546     		mov	r5, r0
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 648              		.loc 1 422 0
 649 0026 0220     		movs	r0, #2
 650              	.LVL82:
 651 0028 85F83500 		strb	r0, [r5, #53]
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 652              		.loc 1 425 0
 653 002c 0024     		movs	r4, #0
 654 002e 6C65     		str	r4, [r5, #84]
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 655              		.loc 1 428 0
 656 0030 2846     		mov	r0, r5
 657 0032 FFF7FEFF 		bl	DMA_SetConfig
 658              	.LVL83:
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 659              		.loc 1 431 0
 660 0036 2A68     		ldr	r2, [r5]
 661 0038 1368     		ldr	r3, [r2]
 662 003a 43F00103 		orr	r3, r3, #1
 663 003e 1360     		str	r3, [r2]
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 664              		.loc 1 411 0
 665 0040 2046     		mov	r0, r4
 666 0042 38BD     		pop	{r3, r4, r5, pc}
 667              	.LVL84:
 668              	.L60:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccBmVPq7.s 			page 37


 669              		.loc 1 417 0
 670 0044 0220     		movs	r0, #2
 671              	.LVL85:
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 672              		.loc 1 442 0
 673 0046 38BD     		pop	{r3, r4, r5, pc}
 674              		.cfi_endproc
 675              	.LFE143:
 677              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_DMA_Start_IT
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv5-d16
 685              	HAL_DMA_Start_IT:
 686              	.LFB144:
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 687              		.loc 1 454 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL86:
 692 0000 38B5     		push	{r3, r4, r5, lr}
 693              	.LCFI7:
 694              		.cfi_def_cfa_offset 16
 695              		.cfi_offset 3, -16
 696              		.cfi_offset 4, -12
 697              		.cfi_offset 5, -8
 698              		.cfi_offset 14, -4
 699              	.LVL87:
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 700              		.loc 1 458 0
 701 0002 856D     		ldr	r5, [r0, #88]
 702              	.LVL88:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 703              		.loc 1 464 0
 704 0004 90F83440 		ldrb	r4, [r0, #52]	@ zero_extendqisi2
 705 0008 012C     		cmp	r4, #1
 706 000a 31D0     		beq	.L67
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 707              		.loc 1 464 0 is_stmt 0 discriminator 2
 708 000c 0124     		movs	r4, #1
 709 000e 80F83440 		strb	r4, [r0, #52]
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 710              		.loc 1 466 0 is_stmt 1 discriminator 2
 711 0012 90F83540 		ldrb	r4, [r0, #53]	@ zero_extendqisi2
 712 0016 E4B2     		uxtb	r4, r4
 713 0018 012C     		cmp	r4, #1
 714 001a 04D0     		beq	.L69
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 715              		.loc 1 495 0
 716 001c 0023     		movs	r3, #0
 717              	.LVL89:
 718 001e 80F83430 		strb	r3, [r0, #52]
 719              	.LVL90:
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccBmVPq7.s 			page 38


 720              		.loc 1 498 0
 721 0022 0220     		movs	r0, #2
 722              	.LVL91:
 723 0024 38BD     		pop	{r3, r4, r5, pc}
 724              	.LVL92:
 725              	.L69:
 726 0026 0446     		mov	r4, r0
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 727              		.loc 1 469 0
 728 0028 0220     		movs	r0, #2
 729              	.LVL93:
 730 002a 84F83500 		strb	r0, [r4, #53]
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 731              		.loc 1 472 0
 732 002e 0020     		movs	r0, #0
 733 0030 6065     		str	r0, [r4, #84]
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 734              		.loc 1 475 0
 735 0032 2046     		mov	r0, r4
 736 0034 FFF7FEFF 		bl	DMA_SetConfig
 737              	.LVL94:
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 738              		.loc 1 478 0
 739 0038 E26D     		ldr	r2, [r4, #92]
 740 003a 3F23     		movs	r3, #63
 741 003c 9340     		lsls	r3, r3, r2
 742 003e AB60     		str	r3, [r5, #8]
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 743              		.loc 1 481 0
 744 0040 2268     		ldr	r2, [r4]
 745 0042 1368     		ldr	r3, [r2]
 746 0044 43F01603 		orr	r3, r3, #22
 747 0048 1360     		str	r3, [r2]
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 748              		.loc 1 482 0
 749 004a 2268     		ldr	r2, [r4]
 750 004c 5369     		ldr	r3, [r2, #20]
 751 004e 43F08003 		orr	r3, r3, #128
 752 0052 5361     		str	r3, [r2, #20]
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 753              		.loc 1 484 0
 754 0054 236C     		ldr	r3, [r4, #64]
 755 0056 23B1     		cbz	r3, .L66
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 756              		.loc 1 486 0
 757 0058 2268     		ldr	r2, [r4]
 758 005a 1368     		ldr	r3, [r2]
 759 005c 43F00803 		orr	r3, r3, #8
 760 0060 1360     		str	r3, [r2]
 761              	.L66:
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 762              		.loc 1 490 0
 763 0062 2268     		ldr	r2, [r4]
 764 0064 1368     		ldr	r3, [r2]
 765 0066 43F00103 		orr	r3, r3, #1
 766 006a 1360     		str	r3, [r2]
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
ARM GAS  /tmp/ccBmVPq7.s 			page 39


 767              		.loc 1 455 0
 768 006c 0020     		movs	r0, #0
 769 006e 38BD     		pop	{r3, r4, r5, pc}
 770              	.LVL95:
 771              	.L67:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 772              		.loc 1 464 0
 773 0070 0220     		movs	r0, #2
 774              	.LVL96:
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 775              		.loc 1 502 0
 776 0072 38BD     		pop	{r3, r4, r5, pc}
 777              		.cfi_endproc
 778              	.LFE144:
 780              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 781              		.align	1
 782              		.global	HAL_DMA_Abort
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu fpv5-d16
 788              	HAL_DMA_Abort:
 789              	.LFB145:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 790              		.loc 1 517 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL97:
 795 0000 70B5     		push	{r4, r5, r6, lr}
 796              	.LCFI8:
 797              		.cfi_def_cfa_offset 16
 798              		.cfi_offset 4, -16
 799              		.cfi_offset 5, -12
 800              		.cfi_offset 6, -8
 801              		.cfi_offset 14, -4
 802 0002 0446     		mov	r4, r0
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 803              		.loc 1 519 0
 804 0004 866D     		ldr	r6, [r0, #88]
 805              	.LVL98:
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 806              		.loc 1 521 0
 807 0006 FFF7FEFF 		bl	HAL_GetTick
 808              	.LVL99:
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 809              		.loc 1 523 0
 810 000a 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 811 000e DBB2     		uxtb	r3, r3
 812 0010 022B     		cmp	r3, #2
 813 0012 06D0     		beq	.L71
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 814              		.loc 1 525 0
 815 0014 8023     		movs	r3, #128
 816 0016 6365     		str	r3, [r4, #84]
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 817              		.loc 1 528 0
ARM GAS  /tmp/ccBmVPq7.s 			page 40


 818 0018 0023     		movs	r3, #0
 819 001a 84F83430 		strb	r3, [r4, #52]
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 820              		.loc 1 530 0
 821 001e 0120     		movs	r0, #1
 822              	.LVL100:
 823 0020 70BD     		pop	{r4, r5, r6, pc}
 824              	.LVL101:
 825              	.L71:
 826 0022 0546     		mov	r5, r0
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 827              		.loc 1 535 0
 828 0024 2268     		ldr	r2, [r4]
 829 0026 1368     		ldr	r3, [r2]
 830 0028 23F01603 		bic	r3, r3, #22
 831 002c 1360     		str	r3, [r2]
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 832              		.loc 1 536 0
 833 002e 2268     		ldr	r2, [r4]
 834 0030 5369     		ldr	r3, [r2, #20]
 835 0032 23F08003 		bic	r3, r3, #128
 836 0036 5361     		str	r3, [r2, #20]
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 837              		.loc 1 538 0
 838 0038 236C     		ldr	r3, [r4, #64]
 839 003a E3B1     		cbz	r3, .L78
 840              	.L73:
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 841              		.loc 1 540 0
 842 003c 2268     		ldr	r2, [r4]
 843 003e 1368     		ldr	r3, [r2]
 844 0040 23F00803 		bic	r3, r3, #8
 845 0044 1360     		str	r3, [r2]
 846              	.L74:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 847              		.loc 1 544 0
 848 0046 2268     		ldr	r2, [r4]
 849 0048 1368     		ldr	r3, [r2]
 850 004a 23F00103 		bic	r3, r3, #1
 851 004e 1360     		str	r3, [r2]
 852              	.LVL102:
 853              	.L75:
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 854              		.loc 1 547 0
 855 0050 2368     		ldr	r3, [r4]
 856 0052 1B68     		ldr	r3, [r3]
 857 0054 13F0010F 		tst	r3, #1
 858 0058 11D0     		beq	.L79
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 859              		.loc 1 550 0
 860 005a FFF7FEFF 		bl	HAL_GetTick
 861              	.LVL103:
 862 005e 401B     		subs	r0, r0, r5
 863 0060 0528     		cmp	r0, #5
 864 0062 F5D9     		bls	.L75
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 865              		.loc 1 553 0
ARM GAS  /tmp/ccBmVPq7.s 			page 41


 866 0064 2023     		movs	r3, #32
 867 0066 6365     		str	r3, [r4, #84]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 868              		.loc 1 556 0
 869 0068 0023     		movs	r3, #0
 870 006a 84F83430 		strb	r3, [r4, #52]
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 871              		.loc 1 559 0
 872 006e 0320     		movs	r0, #3
 873 0070 84F83500 		strb	r0, [r4, #53]
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 874              		.loc 1 561 0
 875 0074 70BD     		pop	{r4, r5, r6, pc}
 876              	.LVL104:
 877              	.L78:
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 878              		.loc 1 538 0 discriminator 1
 879 0076 A36C     		ldr	r3, [r4, #72]
 880 0078 002B     		cmp	r3, #0
 881 007a DFD1     		bne	.L73
 882 007c E3E7     		b	.L74
 883              	.LVL105:
 884              	.L79:
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 885              		.loc 1 566 0
 886 007e E26D     		ldr	r2, [r4, #92]
 887 0080 3F23     		movs	r3, #63
 888 0082 9340     		lsls	r3, r3, r2
 889 0084 B360     		str	r3, [r6, #8]
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 890              		.loc 1 569 0
 891 0086 0020     		movs	r0, #0
 892 0088 84F83400 		strb	r0, [r4, #52]
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 893              		.loc 1 572 0
 894 008c 0123     		movs	r3, #1
 895 008e 84F83530 		strb	r3, [r4, #53]
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 896              		.loc 1 575 0
 897 0092 70BD     		pop	{r4, r5, r6, pc}
 898              		.cfi_endproc
 899              	.LFE145:
 901              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 902              		.align	1
 903              		.global	HAL_DMA_Abort_IT
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 907              		.fpu fpv5-d16
 909              	HAL_DMA_Abort_IT:
 910              	.LFB146:
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 911              		.loc 1 584 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
ARM GAS  /tmp/ccBmVPq7.s 			page 42


 916              	.LVL106:
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 917              		.loc 1 585 0
 918 0000 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 919 0004 DBB2     		uxtb	r3, r3
 920 0006 022B     		cmp	r3, #2
 921 0008 03D0     		beq	.L81
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 922              		.loc 1 587 0
 923 000a 8023     		movs	r3, #128
 924 000c 4365     		str	r3, [r0, #84]
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 925              		.loc 1 588 0
 926 000e 0120     		movs	r0, #1
 927              	.LVL107:
 928 0010 7047     		bx	lr
 929              	.LVL108:
 930              	.L81:
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 931              		.loc 1 593 0
 932 0012 0523     		movs	r3, #5
 933 0014 80F83530 		strb	r3, [r0, #53]
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 934              		.loc 1 596 0
 935 0018 0268     		ldr	r2, [r0]
 936 001a 1368     		ldr	r3, [r2]
 937 001c 23F00103 		bic	r3, r3, #1
 938 0020 1360     		str	r3, [r2]
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 939              		.loc 1 599 0
 940 0022 0020     		movs	r0, #0
 941              	.LVL109:
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 942              		.loc 1 600 0
 943 0024 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE146:
 947              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 948              		.align	1
 949              		.global	HAL_DMA_PollForTransfer
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv5-d16
 955              	HAL_DMA_PollForTransfer:
 956              	.LFB147:
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 957              		.loc 1 614 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL110:
 962 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 963              	.LCFI9:
 964              		.cfi_def_cfa_offset 32
 965              		.cfi_offset 3, -32
 966              		.cfi_offset 4, -28
ARM GAS  /tmp/ccBmVPq7.s 			page 43


 967              		.cfi_offset 5, -24
 968              		.cfi_offset 6, -20
 969              		.cfi_offset 7, -16
 970              		.cfi_offset 8, -12
 971              		.cfi_offset 9, -8
 972              		.cfi_offset 14, -4
 973 0004 0446     		mov	r4, r0
 974 0006 8946     		mov	r9, r1
 975 0008 1546     		mov	r5, r2
 976              	.LVL111:
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 977              		.loc 1 617 0
 978 000a FFF7FEFF 		bl	HAL_GetTick
 979              	.LVL112:
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 980              		.loc 1 623 0
 981 000e 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 982 0012 DBB2     		uxtb	r3, r3
 983 0014 022B     		cmp	r3, #2
 984 0016 07D0     		beq	.L84
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 985              		.loc 1 626 0
 986 0018 8023     		movs	r3, #128
 987 001a 6365     		str	r3, [r4, #84]
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 988              		.loc 1 627 0
 989 001c 0023     		movs	r3, #0
 990 001e 84F83430 		strb	r3, [r4, #52]
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 991              		.loc 1 628 0
 992 0022 0120     		movs	r0, #1
 993              	.LVL113:
 994 0024 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 995              	.LVL114:
 996              	.L84:
 997 0028 8046     		mov	r8, r0
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 998              		.loc 1 632 0
 999 002a 2368     		ldr	r3, [r4]
 1000 002c 1B68     		ldr	r3, [r3]
 1001 002e 13F4807F 		tst	r3, #256
 1002 0032 38D1     		bne	.L100
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1003              		.loc 1 639 0
 1004 0034 B9F1000F 		cmp	r9, #0
 1005 0038 3BD1     		bne	.L87
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1006              		.loc 1 642 0
 1007 003a E36D     		ldr	r3, [r4, #92]
 1008 003c 2027     		movs	r7, #32
 1009 003e 9F40     		lsls	r7, r7, r3
 1010              	.LVL115:
 1011              	.L88:
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1012              		.loc 1 650 0
 1013 0040 A66D     		ldr	r6, [r4, #88]
 1014              	.LVL116:
ARM GAS  /tmp/ccBmVPq7.s 			page 44


 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1015              		.loc 1 651 0
 1016 0042 3368     		ldr	r3, [r6]
 1017              	.LVL117:
 1018              	.L89:
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1019              		.loc 1 653 0
 1020 0044 1F42     		tst	r7, r3
 1021 0046 43D1     		bne	.L95
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1022              		.loc 1 653 0 is_stmt 0 discriminator 1
 1023 0048 636D     		ldr	r3, [r4, #84]
 1024              	.LVL118:
 1025 004a 13F0010F 		tst	r3, #1
 1026 004e 3FD1     		bne	.L95
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1027              		.loc 1 656 0 is_stmt 1
 1028 0050 B5F1FF3F 		cmp	r5, #-1
 1029 0054 07D0     		beq	.L90
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1030              		.loc 1 658 0
 1031 0056 002D     		cmp	r5, #0
 1032 0058 2FD0     		beq	.L91
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1033              		.loc 1 658 0 is_stmt 0 discriminator 1
 1034 005a FFF7FEFF 		bl	HAL_GetTick
 1035              	.LVL119:
 1036 005e A0EB0800 		sub	r0, r0, r8
 1037 0062 8542     		cmp	r5, r0
 1038 0064 29D3     		bcc	.L91
 1039              	.L90:
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1040              		.loc 1 674 0 is_stmt 1
 1041 0066 3368     		ldr	r3, [r6]
 1042              	.LVL120:
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1043              		.loc 1 676 0
 1044 0068 E16D     		ldr	r1, [r4, #92]
 1045 006a 0822     		movs	r2, #8
 1046 006c 8A40     		lsls	r2, r2, r1
 1047 006e 1342     		tst	r3, r2
 1048 0070 04D0     		beq	.L92
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1049              		.loc 1 679 0
 1050 0072 616D     		ldr	r1, [r4, #84]
 1051 0074 41F00101 		orr	r1, r1, #1
 1052 0078 6165     		str	r1, [r4, #84]
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1053              		.loc 1 682 0
 1054 007a B260     		str	r2, [r6, #8]
 1055              	.L92:
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1056              		.loc 1 685 0
 1057 007c E16D     		ldr	r1, [r4, #92]
 1058 007e 0122     		movs	r2, #1
 1059 0080 8A40     		lsls	r2, r2, r1
 1060 0082 1342     		tst	r3, r2
ARM GAS  /tmp/ccBmVPq7.s 			page 45


 1061 0084 04D0     		beq	.L93
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1062              		.loc 1 688 0
 1063 0086 616D     		ldr	r1, [r4, #84]
 1064 0088 41F00201 		orr	r1, r1, #2
 1065 008c 6165     		str	r1, [r4, #84]
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1066              		.loc 1 691 0
 1067 008e B260     		str	r2, [r6, #8]
 1068              	.L93:
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1069              		.loc 1 694 0
 1070 0090 E16D     		ldr	r1, [r4, #92]
 1071 0092 0422     		movs	r2, #4
 1072 0094 8A40     		lsls	r2, r2, r1
 1073 0096 1342     		tst	r3, r2
 1074 0098 D4D0     		beq	.L89
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1075              		.loc 1 697 0
 1076 009a 616D     		ldr	r1, [r4, #84]
 1077 009c 41F00401 		orr	r1, r1, #4
 1078 00a0 6165     		str	r1, [r4, #84]
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1079              		.loc 1 700 0
 1080 00a2 B260     		str	r2, [r6, #8]
 1081 00a4 CEE7     		b	.L89
 1082              	.LVL121:
 1083              	.L100:
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 1084              		.loc 1 634 0
 1085 00a6 4FF48073 		mov	r3, #256
 1086 00aa 6365     		str	r3, [r4, #84]
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1087              		.loc 1 635 0
 1088 00ac 0120     		movs	r0, #1
 1089              	.LVL122:
 1090 00ae BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1091              	.LVL123:
 1092              	.L87:
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1093              		.loc 1 647 0
 1094 00b2 E36D     		ldr	r3, [r4, #92]
 1095 00b4 1027     		movs	r7, #16
 1096 00b6 9F40     		lsls	r7, r7, r3
 1097              	.LVL124:
 1098 00b8 C2E7     		b	.L88
 1099              	.LVL125:
 1100              	.L91:
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1101              		.loc 1 661 0
 1102 00ba 2023     		movs	r3, #32
 1103 00bc 6365     		str	r3, [r4, #84]
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1104              		.loc 1 664 0
 1105 00be 0023     		movs	r3, #0
 1106 00c0 84F83430 		strb	r3, [r4, #52]
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
ARM GAS  /tmp/ccBmVPq7.s 			page 46


 1107              		.loc 1 667 0
 1108 00c4 0123     		movs	r3, #1
 1109 00c6 84F83530 		strb	r3, [r4, #53]
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 1110              		.loc 1 669 0
 1111 00ca 0320     		movs	r0, #3
 1112 00cc BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1113              	.LVL126:
 1114              	.L95:
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1115              		.loc 1 704 0
 1116 00d0 636D     		ldr	r3, [r4, #84]
 1117 00d2 1BB1     		cbz	r3, .L97
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1118              		.loc 1 706 0
 1119 00d4 636D     		ldr	r3, [r4, #84]
 1120 00d6 13F0010F 		tst	r3, #1
 1121 00da 09D1     		bne	.L101
 1122              	.L97:
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1123              		.loc 1 724 0
 1124 00dc B9F1000F 		cmp	r9, #0
 1125 00e0 15D0     		beq	.L102
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1126              		.loc 1 737 0
 1127 00e2 E26D     		ldr	r2, [r4, #92]
 1128 00e4 1023     		movs	r3, #16
 1129 00e6 9340     		lsls	r3, r3, r2
 1130 00e8 B360     		str	r3, [r6, #8]
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1131              		.loc 1 740 0
 1132 00ea 0020     		movs	r0, #0
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1133              		.loc 1 741 0
 1134 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1135              	.LVL127:
 1136              	.L101:
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1137              		.loc 1 708 0
 1138 00f0 2046     		mov	r0, r4
 1139 00f2 FFF7FEFF 		bl	HAL_DMA_Abort
 1140              	.LVL128:
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1141              		.loc 1 711 0
 1142 00f6 E26D     		ldr	r2, [r4, #92]
 1143 00f8 3023     		movs	r3, #48
 1144 00fa 9340     		lsls	r3, r3, r2
 1145 00fc B360     		str	r3, [r6, #8]
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1146              		.loc 1 714 0
 1147 00fe 0023     		movs	r3, #0
 1148 0100 84F83430 		strb	r3, [r4, #52]
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1149              		.loc 1 717 0
 1150 0104 0120     		movs	r0, #1
 1151 0106 84F83500 		strb	r0, [r4, #53]
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
ARM GAS  /tmp/ccBmVPq7.s 			page 47


 1152              		.loc 1 719 0
 1153 010a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1154              	.LVL129:
 1155              	.L102:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 1156              		.loc 1 727 0
 1157 010e E26D     		ldr	r2, [r4, #92]
 1158 0110 3023     		movs	r3, #48
 1159 0112 9340     		lsls	r3, r3, r2
 1160 0114 B360     		str	r3, [r6, #8]
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1161              		.loc 1 730 0
 1162 0116 0020     		movs	r0, #0
 1163 0118 84F83400 		strb	r0, [r4, #52]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1164              		.loc 1 732 0
 1165 011c 0123     		movs	r3, #1
 1166 011e 84F83530 		strb	r3, [r4, #53]
 1167 0122 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1168              		.cfi_endproc
 1169              	.LFE147:
 1171              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1172              		.align	1
 1173              		.global	HAL_DMA_IRQHandler
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv5-d16
 1179              	HAL_DMA_IRQHandler:
 1180              	.LFB148:
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 1181              		.loc 1 750 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              	.LVL130:
 1186 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1187              	.LCFI10:
 1188              		.cfi_def_cfa_offset 20
 1189              		.cfi_offset 4, -20
 1190              		.cfi_offset 5, -16
 1191              		.cfi_offset 6, -12
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 83B0     		sub	sp, sp, #12
 1195              	.LCFI11:
 1196              		.cfi_def_cfa_offset 32
 1197 0004 0446     		mov	r4, r0
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1198              		.loc 1 752 0
 1199 0006 0023     		movs	r3, #0
 1200 0008 0193     		str	r3, [sp, #4]
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1201              		.loc 1 753 0
 1202 000a 724B     		ldr	r3, .L125
 1203 000c 1D68     		ldr	r5, [r3]
 1204 000e 724B     		ldr	r3, .L125+4
ARM GAS  /tmp/ccBmVPq7.s 			page 48


 1205 0010 A3FB0535 		umull	r3, r5, r3, r5
 1206 0014 AD0A     		lsrs	r5, r5, #10
 1207              	.LVL131:
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1208              		.loc 1 756 0
 1209 0016 876D     		ldr	r7, [r0, #88]
 1210              	.LVL132:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1211              		.loc 1 758 0
 1212 0018 3E68     		ldr	r6, [r7]
 1213              	.LVL133:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1214              		.loc 1 761 0
 1215 001a C26D     		ldr	r2, [r0, #92]
 1216 001c 0823     		movs	r3, #8
 1217 001e 9340     		lsls	r3, r3, r2
 1218 0020 1E42     		tst	r6, r3
 1219 0022 10D0     		beq	.L104
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1220              		.loc 1 763 0
 1221 0024 0368     		ldr	r3, [r0]
 1222 0026 1A68     		ldr	r2, [r3]
 1223 0028 12F0040F 		tst	r2, #4
 1224 002c 0BD0     		beq	.L104
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1225              		.loc 1 766 0
 1226 002e 1A68     		ldr	r2, [r3]
 1227 0030 22F00402 		bic	r2, r2, #4
 1228 0034 1A60     		str	r2, [r3]
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1229              		.loc 1 769 0
 1230 0036 C26D     		ldr	r2, [r0, #92]
 1231 0038 0823     		movs	r3, #8
 1232 003a 9340     		lsls	r3, r3, r2
 1233 003c BB60     		str	r3, [r7, #8]
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1234              		.loc 1 772 0
 1235 003e 436D     		ldr	r3, [r0, #84]
 1236 0040 43F00103 		orr	r3, r3, #1
 1237 0044 4365     		str	r3, [r0, #84]
 1238              	.L104:
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1239              		.loc 1 776 0
 1240 0046 E26D     		ldr	r2, [r4, #92]
 1241 0048 0123     		movs	r3, #1
 1242 004a 9340     		lsls	r3, r3, r2
 1243 004c 1E42     		tst	r6, r3
 1244 004e 09D0     		beq	.L105
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1245              		.loc 1 778 0
 1246 0050 2268     		ldr	r2, [r4]
 1247 0052 5269     		ldr	r2, [r2, #20]
 1248 0054 12F0800F 		tst	r2, #128
 1249 0058 04D0     		beq	.L105
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1250              		.loc 1 781 0
 1251 005a BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccBmVPq7.s 			page 49


 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1252              		.loc 1 784 0
 1253 005c 636D     		ldr	r3, [r4, #84]
 1254 005e 43F00203 		orr	r3, r3, #2
 1255 0062 6365     		str	r3, [r4, #84]
 1256              	.L105:
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1257              		.loc 1 788 0
 1258 0064 E26D     		ldr	r2, [r4, #92]
 1259 0066 0423     		movs	r3, #4
 1260 0068 9340     		lsls	r3, r3, r2
 1261 006a 1E42     		tst	r6, r3
 1262 006c 09D0     		beq	.L106
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1263              		.loc 1 790 0
 1264 006e 2268     		ldr	r2, [r4]
 1265 0070 1268     		ldr	r2, [r2]
 1266 0072 12F0020F 		tst	r2, #2
 1267 0076 04D0     		beq	.L106
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1268              		.loc 1 793 0
 1269 0078 BB60     		str	r3, [r7, #8]
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1270              		.loc 1 796 0
 1271 007a 636D     		ldr	r3, [r4, #84]
 1272 007c 43F00403 		orr	r3, r3, #4
 1273 0080 6365     		str	r3, [r4, #84]
 1274              	.L106:
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1275              		.loc 1 800 0
 1276 0082 E26D     		ldr	r2, [r4, #92]
 1277 0084 1023     		movs	r3, #16
 1278 0086 9340     		lsls	r3, r3, r2
 1279 0088 1E42     		tst	r6, r3
 1280 008a 24D0     		beq	.L107
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1281              		.loc 1 802 0
 1282 008c 2268     		ldr	r2, [r4]
 1283 008e 1268     		ldr	r2, [r2]
 1284 0090 12F0080F 		tst	r2, #8
 1285 0094 1FD0     		beq	.L107
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1286              		.loc 1 805 0
 1287 0096 BB60     		str	r3, [r7, #8]
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1288              		.loc 1 808 0
 1289 0098 2368     		ldr	r3, [r4]
 1290 009a 1A68     		ldr	r2, [r3]
 1291 009c 12F4802F 		tst	r2, #262144
 1292 00a0 0DD0     		beq	.L108
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1293              		.loc 1 811 0
 1294 00a2 1B68     		ldr	r3, [r3]
 1295 00a4 13F4002F 		tst	r3, #524288
 1296 00a8 04D1     		bne	.L109
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1297              		.loc 1 813 0
ARM GAS  /tmp/ccBmVPq7.s 			page 50


 1298 00aa 236C     		ldr	r3, [r4, #64]
 1299 00ac 9BB1     		cbz	r3, .L107
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1300              		.loc 1 816 0
 1301 00ae 2046     		mov	r0, r4
 1302              	.LVL134:
 1303 00b0 9847     		blx	r3
 1304              	.LVL135:
 1305 00b2 10E0     		b	.L107
 1306              	.LVL136:
 1307              	.L109:
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1308              		.loc 1 822 0
 1309 00b4 A36C     		ldr	r3, [r4, #72]
 1310 00b6 73B1     		cbz	r3, .L107
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1311              		.loc 1 825 0
 1312 00b8 2046     		mov	r0, r4
 1313              	.LVL137:
 1314 00ba 9847     		blx	r3
 1315              	.LVL138:
 1316 00bc 0BE0     		b	.L107
 1317              	.LVL139:
 1318              	.L108:
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1319              		.loc 1 832 0
 1320 00be 1A68     		ldr	r2, [r3]
 1321 00c0 12F4807F 		tst	r2, #256
 1322 00c4 03D1     		bne	.L110
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1323              		.loc 1 835 0
 1324 00c6 1A68     		ldr	r2, [r3]
 1325 00c8 22F00802 		bic	r2, r2, #8
 1326 00cc 1A60     		str	r2, [r3]
 1327              	.L110:
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1328              		.loc 1 838 0
 1329 00ce 236C     		ldr	r3, [r4, #64]
 1330 00d0 0BB1     		cbz	r3, .L107
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1331              		.loc 1 841 0
 1332 00d2 2046     		mov	r0, r4
 1333              	.LVL140:
 1334 00d4 9847     		blx	r3
 1335              	.LVL141:
 1336              	.L107:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1337              		.loc 1 847 0
 1338 00d6 E26D     		ldr	r2, [r4, #92]
 1339 00d8 2023     		movs	r3, #32
 1340 00da 9340     		lsls	r3, r3, r2
 1341 00dc 1E42     		tst	r6, r3
 1342 00de 55D0     		beq	.L111
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1343              		.loc 1 849 0
 1344 00e0 2268     		ldr	r2, [r4]
 1345 00e2 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccBmVPq7.s 			page 51


 1346 00e4 12F0100F 		tst	r2, #16
 1347 00e8 50D0     		beq	.L111
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1348              		.loc 1 852 0
 1349 00ea BB60     		str	r3, [r7, #8]
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1350              		.loc 1 854 0
 1351 00ec 94F83530 		ldrb	r3, [r4, #53]	@ zero_extendqisi2
 1352 00f0 DBB2     		uxtb	r3, r3
 1353 00f2 052B     		cmp	r3, #5
 1354 00f4 0ED0     		beq	.L123
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 1355              		.loc 1 881 0
 1356 00f6 2368     		ldr	r3, [r4]
 1357 00f8 1A68     		ldr	r2, [r3]
 1358 00fa 12F4802F 		tst	r2, #262144
 1359 00fe 33D0     		beq	.L116
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1360              		.loc 1 884 0
 1361 0100 1B68     		ldr	r3, [r3]
 1362 0102 13F4002F 		tst	r3, #524288
 1363 0106 2AD1     		bne	.L117
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1364              		.loc 1 886 0
 1365 0108 636C     		ldr	r3, [r4, #68]
 1366 010a 002B     		cmp	r3, #0
 1367 010c 3ED0     		beq	.L111
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1368              		.loc 1 889 0
 1369 010e 2046     		mov	r0, r4
 1370 0110 9847     		blx	r3
 1371              	.LVL142:
 1372 0112 3BE0     		b	.L111
 1373              	.L123:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1374              		.loc 1 857 0
 1375 0114 2268     		ldr	r2, [r4]
 1376 0116 1368     		ldr	r3, [r2]
 1377 0118 23F01603 		bic	r3, r3, #22
 1378 011c 1360     		str	r3, [r2]
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 1379              		.loc 1 858 0
 1380 011e 2268     		ldr	r2, [r4]
 1381 0120 5369     		ldr	r3, [r2, #20]
 1382 0122 23F08003 		bic	r3, r3, #128
 1383 0126 5361     		str	r3, [r2, #20]
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1384              		.loc 1 860 0
 1385 0128 236C     		ldr	r3, [r4, #64]
 1386 012a A3B1     		cbz	r3, .L124
 1387              	.L113:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1388              		.loc 1 862 0
 1389 012c 2268     		ldr	r2, [r4]
 1390 012e 1368     		ldr	r3, [r2]
 1391 0130 23F00803 		bic	r3, r3, #8
 1392 0134 1360     		str	r3, [r2]
ARM GAS  /tmp/ccBmVPq7.s 			page 52


 1393              	.L114:
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1394              		.loc 1 866 0
 1395 0136 E26D     		ldr	r2, [r4, #92]
 1396 0138 3F23     		movs	r3, #63
 1397 013a 9340     		lsls	r3, r3, r2
 1398 013c BB60     		str	r3, [r7, #8]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1399              		.loc 1 869 0
 1400 013e 0023     		movs	r3, #0
 1401 0140 84F83430 		strb	r3, [r4, #52]
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1402              		.loc 1 872 0
 1403 0144 0123     		movs	r3, #1
 1404 0146 84F83530 		strb	r3, [r4, #53]
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1405              		.loc 1 874 0
 1406 014a 236D     		ldr	r3, [r4, #80]
 1407 014c 002B     		cmp	r3, #0
 1408 014e 3FD0     		beq	.L103
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1409              		.loc 1 876 0
 1410 0150 2046     		mov	r0, r4
 1411 0152 9847     		blx	r3
 1412              	.LVL143:
 1413 0154 3CE0     		b	.L103
 1414              	.L124:
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1415              		.loc 1 860 0 discriminator 1
 1416 0156 A36C     		ldr	r3, [r4, #72]
 1417 0158 002B     		cmp	r3, #0
 1418 015a E7D1     		bne	.L113
 1419 015c EBE7     		b	.L114
 1420              	.L117:
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 1421              		.loc 1 895 0
 1422 015e E36B     		ldr	r3, [r4, #60]
 1423 0160 A3B1     		cbz	r3, .L111
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 1424              		.loc 1 898 0
 1425 0162 2046     		mov	r0, r4
 1426 0164 9847     		blx	r3
 1427              	.LVL144:
 1428 0166 11E0     		b	.L111
 1429              	.L116:
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1430              		.loc 1 905 0
 1431 0168 1A68     		ldr	r2, [r3]
 1432 016a 12F4807F 		tst	r2, #256
 1433 016e 09D1     		bne	.L118
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1434              		.loc 1 908 0
 1435 0170 1A68     		ldr	r2, [r3]
 1436 0172 22F01002 		bic	r2, r2, #16
 1437 0176 1A60     		str	r2, [r3]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1438              		.loc 1 911 0
ARM GAS  /tmp/ccBmVPq7.s 			page 53


 1439 0178 0023     		movs	r3, #0
 1440 017a 84F83430 		strb	r3, [r4, #52]
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1441              		.loc 1 914 0
 1442 017e 0123     		movs	r3, #1
 1443 0180 84F83530 		strb	r3, [r4, #53]
 1444              	.L118:
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1445              		.loc 1 917 0
 1446 0184 E36B     		ldr	r3, [r4, #60]
 1447 0186 0BB1     		cbz	r3, .L111
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 1448              		.loc 1 920 0
 1449 0188 2046     		mov	r0, r4
 1450 018a 9847     		blx	r3
 1451              	.LVL145:
 1452              	.L111:
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1453              		.loc 1 927 0
 1454 018c 636D     		ldr	r3, [r4, #84]
 1455 018e FBB1     		cbz	r3, .L103
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1456              		.loc 1 929 0
 1457 0190 636D     		ldr	r3, [r4, #84]
 1458 0192 13F0010F 		tst	r3, #1
 1459 0196 17D0     		beq	.L119
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1460              		.loc 1 931 0
 1461 0198 0523     		movs	r3, #5
 1462 019a 84F83530 		strb	r3, [r4, #53]
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1463              		.loc 1 934 0
 1464 019e 2268     		ldr	r2, [r4]
 1465 01a0 1368     		ldr	r3, [r2]
 1466 01a2 23F00103 		bic	r3, r3, #1
 1467 01a6 1360     		str	r3, [r2]
 1468              	.L121:
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 1469              		.loc 1 938 0
 1470 01a8 019B     		ldr	r3, [sp, #4]
 1471 01aa 0133     		adds	r3, r3, #1
 1472 01ac 0193     		str	r3, [sp, #4]
 1473 01ae 9D42     		cmp	r5, r3
 1474 01b0 04D3     		bcc	.L120
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1475              		.loc 1 943 0
 1476 01b2 2368     		ldr	r3, [r4]
 1477 01b4 1B68     		ldr	r3, [r3]
 1478 01b6 13F0010F 		tst	r3, #1
 1479 01ba F5D1     		bne	.L121
 1480              	.L120:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1481              		.loc 1 946 0
 1482 01bc 0023     		movs	r3, #0
 1483 01be 84F83430 		strb	r3, [r4, #52]
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1484              		.loc 1 949 0
ARM GAS  /tmp/ccBmVPq7.s 			page 54


 1485 01c2 0123     		movs	r3, #1
 1486 01c4 84F83530 		strb	r3, [r4, #53]
 1487              	.L119:
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1488              		.loc 1 952 0
 1489 01c8 E36C     		ldr	r3, [r4, #76]
 1490 01ca 0BB1     		cbz	r3, .L103
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 1491              		.loc 1 955 0
 1492 01cc 2046     		mov	r0, r4
 1493 01ce 9847     		blx	r3
 1494              	.LVL146:
 1495              	.L103:
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1496              		.loc 1 958 0
 1497 01d0 03B0     		add	sp, sp, #12
 1498              	.LCFI12:
 1499              		.cfi_def_cfa_offset 20
 1500              		@ sp needed
 1501 01d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1502              	.LVL147:
 1503              	.L126:
 1504              		.align	2
 1505              	.L125:
 1506 01d4 00000000 		.word	SystemCoreClock
 1507 01d8 B5814E1B 		.word	458129845
 1508              		.cfi_endproc
 1509              	.LFE148:
 1511              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1512              		.align	1
 1513              		.global	HAL_DMA_RegisterCallback
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv5-d16
 1519              	HAL_DMA_RegisterCallback:
 1520              	.LFB149:
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1521              		.loc 1 971 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 1526              	.LVL148:
 1527 0000 0346     		mov	r3, r0
 1528              	.LVL149:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1529              		.loc 1 976 0
 1530 0002 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 1531              	.LVL150:
 1532 0006 0128     		cmp	r0, #1
 1533 0008 27D0     		beq	.L137
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1534              		.loc 1 976 0 is_stmt 0 discriminator 2
 1535 000a 0120     		movs	r0, #1
 1536 000c 83F83400 		strb	r0, [r3, #52]
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
ARM GAS  /tmp/ccBmVPq7.s 			page 55


 1537              		.loc 1 978 0 is_stmt 1 discriminator 2
 1538 0010 93F83500 		ldrb	r0, [r3, #53]	@ zero_extendqisi2
 1539 0014 C0B2     		uxtb	r0, r0
 1540 0016 0128     		cmp	r0, #1
 1541 0018 04D0     		beq	.L140
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1542              		.loc 1 1013 0
 1543 001a 0120     		movs	r0, #1
 1544              	.L129:
 1545              	.LVL151:
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1546              		.loc 1 1017 0
 1547 001c 0022     		movs	r2, #0
 1548              	.LVL152:
 1549 001e 83F83420 		strb	r2, [r3, #52]
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1550              		.loc 1 1019 0
 1551 0022 7047     		bx	lr
 1552              	.LVL153:
 1553              	.L140:
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1554              		.loc 1 980 0
 1555 0024 0529     		cmp	r1, #5
 1556 0026 16D8     		bhi	.L139
 1557 0028 DFE801F0 		tbb	[pc, r1]
 1558              	.L131:
 1559 002c 03       		.byte	(.L130-.L131)/2
 1560 002d 06       		.byte	(.L132-.L131)/2
 1561 002e 09       		.byte	(.L133-.L131)/2
 1562 002f 0C       		.byte	(.L134-.L131)/2
 1563 0030 0F       		.byte	(.L135-.L131)/2
 1564 0031 12       		.byte	(.L136-.L131)/2
 1565              		.p2align 1
 1566              	.L130:
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1567              		.loc 1 983 0
 1568 0032 DA63     		str	r2, [r3, #60]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1569              		.loc 1 973 0
 1570 0034 0020     		movs	r0, #0
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1571              		.loc 1 984 0
 1572 0036 F1E7     		b	.L129
 1573              	.L132:
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1574              		.loc 1 987 0
 1575 0038 1A64     		str	r2, [r3, #64]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1576              		.loc 1 973 0
 1577 003a 0020     		movs	r0, #0
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1578              		.loc 1 988 0
 1579 003c EEE7     		b	.L129
 1580              	.L133:
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1581              		.loc 1 991 0
 1582 003e 5A64     		str	r2, [r3, #68]
ARM GAS  /tmp/ccBmVPq7.s 			page 56


 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1583              		.loc 1 973 0
 1584 0040 0020     		movs	r0, #0
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1585              		.loc 1 992 0
 1586 0042 EBE7     		b	.L129
 1587              	.L134:
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1588              		.loc 1 995 0
 1589 0044 9A64     		str	r2, [r3, #72]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1590              		.loc 1 973 0
 1591 0046 0020     		movs	r0, #0
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1592              		.loc 1 996 0
 1593 0048 E8E7     		b	.L129
 1594              	.L135:
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1595              		.loc 1 999 0
 1596 004a DA64     		str	r2, [r3, #76]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1597              		.loc 1 973 0
 1598 004c 0020     		movs	r0, #0
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1599              		.loc 1 1000 0
 1600 004e E5E7     		b	.L129
 1601              	.L136:
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1602              		.loc 1 1003 0
 1603 0050 1A65     		str	r2, [r3, #80]
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1604              		.loc 1 973 0
 1605 0052 0020     		movs	r0, #0
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1606              		.loc 1 1004 0
 1607 0054 E2E7     		b	.L129
 1608              	.L139:
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1609              		.loc 1 973 0
 1610 0056 0020     		movs	r0, #0
 1611 0058 E0E7     		b	.L129
 1612              	.L137:
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1613              		.loc 1 976 0
 1614 005a 0220     		movs	r0, #2
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1615              		.loc 1 1020 0
 1616 005c 7047     		bx	lr
 1617              		.cfi_endproc
 1618              	.LFE149:
 1620              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1621              		.align	1
 1622              		.global	HAL_DMA_UnRegisterCallback
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1626              		.fpu fpv5-d16
ARM GAS  /tmp/ccBmVPq7.s 			page 57


 1628              	HAL_DMA_UnRegisterCallback:
 1629              	.LFB150:
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1630              		.loc 1 1031 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              		@ link register save eliminated.
 1635              	.LVL154:
 1636 0000 0346     		mov	r3, r0
 1637              	.LVL155:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1638              		.loc 1 1035 0
 1639 0002 90F83420 		ldrb	r2, [r0, #52]	@ zero_extendqisi2
 1640 0006 012A     		cmp	r2, #1
 1641 0008 30D0     		beq	.L152
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1642              		.loc 1 1035 0 is_stmt 0 discriminator 2
 1643 000a 0122     		movs	r2, #1
 1644 000c 80F83420 		strb	r2, [r0, #52]
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1645              		.loc 1 1037 0 is_stmt 1 discriminator 2
 1646 0010 90F83520 		ldrb	r2, [r0, #53]	@ zero_extendqisi2
 1647 0014 D2B2     		uxtb	r2, r2
 1648 0016 012A     		cmp	r2, #1
 1649 0018 04D0     		beq	.L155
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 1650              		.loc 1 1081 0
 1651 001a 0120     		movs	r0, #1
 1652              	.LVL156:
 1653              	.L143:
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1654              		.loc 1 1085 0
 1655 001c 0022     		movs	r2, #0
 1656 001e 83F83420 		strb	r2, [r3, #52]
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1657              		.loc 1 1087 0
 1658 0022 7047     		bx	lr
 1659              	.LVL157:
 1660              	.L155:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 1661              		.loc 1 1039 0
 1662 0024 0629     		cmp	r1, #6
 1663 0026 1FD8     		bhi	.L154
 1664 0028 DFE801F0 		tbb	[pc, r1]
 1665              	.L145:
 1666 002c 04       		.byte	(.L144-.L145)/2
 1667 002d 07       		.byte	(.L146-.L145)/2
 1668 002e 0A       		.byte	(.L147-.L145)/2
 1669 002f 0D       		.byte	(.L148-.L145)/2
 1670 0030 10       		.byte	(.L149-.L145)/2
 1671 0031 13       		.byte	(.L150-.L145)/2
 1672 0032 16       		.byte	(.L151-.L145)/2
 1673 0033 00       		.p2align 1
 1674              	.L144:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1675              		.loc 1 1042 0
ARM GAS  /tmp/ccBmVPq7.s 			page 58


 1676 0034 0020     		movs	r0, #0
 1677              	.LVL158:
 1678 0036 D863     		str	r0, [r3, #60]
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1679              		.loc 1 1043 0
 1680 0038 F0E7     		b	.L143
 1681              	.LVL159:
 1682              	.L146:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1683              		.loc 1 1046 0
 1684 003a 0020     		movs	r0, #0
 1685              	.LVL160:
 1686 003c 1864     		str	r0, [r3, #64]
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1687              		.loc 1 1047 0
 1688 003e EDE7     		b	.L143
 1689              	.LVL161:
 1690              	.L147:
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1691              		.loc 1 1050 0
 1692 0040 0020     		movs	r0, #0
 1693              	.LVL162:
 1694 0042 5864     		str	r0, [r3, #68]
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1695              		.loc 1 1051 0
 1696 0044 EAE7     		b	.L143
 1697              	.LVL163:
 1698              	.L148:
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1699              		.loc 1 1054 0
 1700 0046 0020     		movs	r0, #0
 1701              	.LVL164:
 1702 0048 9864     		str	r0, [r3, #72]
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1703              		.loc 1 1055 0
 1704 004a E7E7     		b	.L143
 1705              	.LVL165:
 1706              	.L149:
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1707              		.loc 1 1058 0
 1708 004c 0020     		movs	r0, #0
 1709              	.LVL166:
 1710 004e D864     		str	r0, [r3, #76]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1711              		.loc 1 1059 0
 1712 0050 E4E7     		b	.L143
 1713              	.LVL167:
 1714              	.L150:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1715              		.loc 1 1062 0
 1716 0052 0020     		movs	r0, #0
 1717              	.LVL168:
 1718 0054 1865     		str	r0, [r3, #80]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1719              		.loc 1 1063 0
 1720 0056 E1E7     		b	.L143
 1721              	.LVL169:
ARM GAS  /tmp/ccBmVPq7.s 			page 59


 1722              	.L151:
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1723              		.loc 1 1066 0
 1724 0058 0020     		movs	r0, #0
 1725              	.LVL170:
 1726 005a D863     		str	r0, [r3, #60]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1727              		.loc 1 1067 0
 1728 005c 1864     		str	r0, [r3, #64]
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1729              		.loc 1 1068 0
 1730 005e 5864     		str	r0, [r3, #68]
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1731              		.loc 1 1069 0
 1732 0060 9864     		str	r0, [r3, #72]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1733              		.loc 1 1070 0
 1734 0062 D864     		str	r0, [r3, #76]
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1735              		.loc 1 1071 0
 1736 0064 1865     		str	r0, [r3, #80]
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 1737              		.loc 1 1072 0
 1738 0066 D9E7     		b	.L143
 1739              	.LVL171:
 1740              	.L154:
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1741              		.loc 1 1075 0
 1742 0068 0120     		movs	r0, #1
 1743              	.LVL172:
 1744 006a D7E7     		b	.L143
 1745              	.LVL173:
 1746              	.L152:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 1747              		.loc 1 1035 0
 1748 006c 0220     		movs	r0, #2
 1749              	.LVL174:
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1750              		.loc 1 1088 0
 1751 006e 7047     		bx	lr
 1752              		.cfi_endproc
 1753              	.LFE150:
 1755              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1756              		.align	1
 1757              		.global	HAL_DMA_GetState
 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1761              		.fpu fpv5-d16
 1763              	HAL_DMA_GetState:
 1764              	.LFB151:
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 1765              		.loc 1 1116 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 0, uses_anonymous_args = 0
 1769              		@ link register save eliminated.
ARM GAS  /tmp/ccBmVPq7.s 			page 60


 1770              	.LVL175:
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1771              		.loc 1 1117 0
 1772 0000 90F83500 		ldrb	r0, [r0, #53]	@ zero_extendqisi2
 1773              	.LVL176:
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1774              		.loc 1 1118 0
 1775 0004 7047     		bx	lr
 1776              		.cfi_endproc
 1777              	.LFE151:
 1779              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1780              		.align	1
 1781              		.global	HAL_DMA_GetError
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1785              		.fpu fpv5-d16
 1787              	HAL_DMA_GetError:
 1788              	.LFB152:
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 1789              		.loc 1 1127 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794              	.LVL177:
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1795              		.loc 1 1128 0
 1796 0000 406D     		ldr	r0, [r0, #84]
 1797              	.LVL178:
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 1798              		.loc 1 1129 0
 1799 0002 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE152:
 1803              		.section	.rodata.flagBitshiftOffset.9184,"a",%progbits
 1804              		.align	2
 1805              		.set	.LANCHOR0,. + 0
 1808              	flagBitshiftOffset.9184:
 1809 0000 00       		.byte	0
 1810 0001 06       		.byte	6
 1811 0002 10       		.byte	16
 1812 0003 16       		.byte	22
 1813 0004 00       		.byte	0
 1814 0005 06       		.byte	6
 1815 0006 10       		.byte	16
 1816 0007 16       		.byte	22
 1817              		.text
 1818              	.Letext0:
 1819              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1820              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1821              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1822              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1823              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1824              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1825              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1826              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
ARM GAS  /tmp/ccBmVPq7.s 			page 61


 1827              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccBmVPq7.s 			page 62


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma.c
     /tmp/ccBmVPq7.s:17     .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccBmVPq7.s:23     .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccBmVPq7.s:82     .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccBmVPq7.s:88     .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccBmVPq7.s:133    .text.DMA_CalcBaseAndBitshift:000000000000002c $d
     /tmp/ccBmVPq7.s:140    .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccBmVPq7.s:146    .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccBmVPq7.s:213    .text.DMA_CheckFifoParam:0000000000000046 $d
     /tmp/ccBmVPq7.s:217    .text.DMA_CheckFifoParam:000000000000004a $t
     /tmp/ccBmVPq7.s:303    .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccBmVPq7.s:310    .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccBmVPq7.s:488    .text.HAL_DMA_Init:00000000000000cc $d
     /tmp/ccBmVPq7.s:493    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccBmVPq7.s:500    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccBmVPq7.s:602    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccBmVPq7.s:609    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccBmVPq7.s:678    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccBmVPq7.s:685    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccBmVPq7.s:781    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccBmVPq7.s:788    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccBmVPq7.s:902    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccBmVPq7.s:909    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccBmVPq7.s:948    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccBmVPq7.s:955    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccBmVPq7.s:1172   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccBmVPq7.s:1179   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccBmVPq7.s:1506   .text.HAL_DMA_IRQHandler:00000000000001d4 $d
     /tmp/ccBmVPq7.s:1512   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccBmVPq7.s:1519   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccBmVPq7.s:1559   .text.HAL_DMA_RegisterCallback:000000000000002c $d
     /tmp/ccBmVPq7.s:1565   .text.HAL_DMA_RegisterCallback:0000000000000032 $t
     /tmp/ccBmVPq7.s:1621   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccBmVPq7.s:1628   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccBmVPq7.s:1666   .text.HAL_DMA_UnRegisterCallback:000000000000002c $d
     /tmp/ccBmVPq7.s:1756   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccBmVPq7.s:1763   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccBmVPq7.s:1780   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccBmVPq7.s:1787   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccBmVPq7.s:1804   .rodata.flagBitshiftOffset.9184:0000000000000000 $d
     /tmp/ccBmVPq7.s:1808   .rodata.flagBitshiftOffset.9184:0000000000000000 flagBitshiftOffset.9184
                     .debug_frame:0000000000000010 $d
     /tmp/ccBmVPq7.s:1673   .text.HAL_DMA_UnRegisterCallback:0000000000000033 $d
     /tmp/ccBmVPq7.s:1673   .text.HAL_DMA_UnRegisterCallback:0000000000000034 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
