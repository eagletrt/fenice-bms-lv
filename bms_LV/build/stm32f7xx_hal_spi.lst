ARM GAS  /tmp/ccQwr80L.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal_spi.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	SPI_WaitFlagStateUntilTimeout:
  24              	.LFB188:
  25              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @file    stm32f7xx_hal_spi.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) SPI pins configuration
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Enable the DMAx clock
ARM GAS  /tmp/ccQwr80L.s 			page 2


  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Circular mode restriction:
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) Master 1Line Rx
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Master Receive mode restriction:
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (##) HAL_SPI_Init()
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Callback registration:
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           and a pointer to the user callback function.
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           weak function.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           and the Callback ID.
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           This function allows to reset following callbacks:
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxCpltCallback        : SPI Tx Completed callback
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxCpltCallback        : SPI Rx Completed callback
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxCpltCallback      : SPI TxRx Completed callback
  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxHalfCpltCallback    : SPI Tx Half Completed callback
ARM GAS  /tmp/ccQwr80L.s 			page 3


  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) RxHalfCpltCallback    : SPI Rx Half Completed callback
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) ErrorCallback         : SPI Error callback
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) AbortCpltCallback     : SPI Abort callback
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspInitCallback       : SPI Msp Init callback
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (+) MspDeInitCallback     : SPI Msp DeInit callback
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        or HAL_SPI_Init() function.
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        When The compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        not defined, the callback registering feature is not available
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      [..]
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   @endverbatim
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Additional table :
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
ARM GAS  /tmp/ccQwr80L.s 			page 4


 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        | Process | Tranfert mode  |---------------------|----------------------|-------------------
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |===========================================================================================
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    |    NA     |   NA  
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/4  | Fpclk/8  | Fpclk/16  | Fpclk/8  | Fpclk/8   | Fpclk/
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/16 | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/4  | Fpclk/2  | Fpclk/2   | Fpclk/16 | Fpclk/2   | Fpclk/
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |     Polling    | Fpclk/8  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/16  | Fpclk/
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/8   | Fpclk/
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (4bits, 5bits,..., 8bits,...15bits, 16bi
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        @note
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @attention
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * All rights reserved.</center></h2>
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * the "License"; You may not use this file except in compliance with the
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * License. You may obtain a copy of the License at:
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                        opensource.org/licenses/BSD-3-Clause
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ******************************************************************************
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #include "stm32f7xx_hal.h"
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup STM32F7xx_HAL_Driver
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 5


 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI SPI
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief SPI HAL module driver
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
ARM GAS  /tmp/ccQwr80L.s 			page 6


 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           the selected configuration:
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Mode
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Direction
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Data Size
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) Clock Polarity and Phase
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) NSS Management
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) BaudRate Prescaler
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FirstBit
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) TIMode
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Calculation
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) CRC Length, used only with Data8 and Data16
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (++) FIFO reception threshold
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           of the selected SPIx peripheral.
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
ARM GAS  /tmp/ccQwr80L.s 			page 7


 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the parameters */
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the SPI Callback settings */
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccQwr80L.s 			page 8


 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align by default the rs fifo threshold on the data size */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_HF;
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     frxth = SPI_RXFIFO_THRESHOLD_QF;
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* CRC calculation is valid only for 16Bit and 8 Bit */
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC must be disabled */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Align the CRC Length on the data size */
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_DATASIZE)
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC Length aligned on the data size : value set by default */
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_16BIT;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Init.CRCLength = SPI_CRC_LENGTH_8BIT;
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction |
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Length */
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->CR1 |= SPI_CR1_CRCL;
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode |
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccQwr80L.s 			page 9


 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi == NULL)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check SPI Instance parameter */
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 10


 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (pCallback == NULL)
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 11


 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_ERROR;
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 12


 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Return error status */
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     status =  HAL_ERROR;
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return status;
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
ARM GAS  /tmp/ccQwr80L.s 			page 13


 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     switch (CallbackID)
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
ARM GAS  /tmp/ccQwr80L.s 			page 14


 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       default :
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Update the error code */
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Return error status */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         status =  HAL_ERROR;
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update the error code */
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Return error status */
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     status =  HAL_ERROR;
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Release Lock */
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return status;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *  @brief   Data transfers functions
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  *
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   ==============================================================================
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### IO operation functions #####
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  [..]
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     data transfers.
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) There are two modes of transfer:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             after finishing transfer.
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The end of the data processing will be indicated through the
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             using DMA mode.
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
ARM GAS  /tmp/ccQwr80L.s 			page 15


 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
ARM GAS  /tmp/ccQwr80L.s 			page 16


 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccQwr80L.s 			page 17


 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* write on the data register in packing mode */
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* write on the data register in packing mode */
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
ARM GAS  /tmp/ccQwr80L.s 			page 18


 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be received
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
ARM GAS  /tmp/ccQwr80L.s 			page 19


1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccQwr80L.s 			page 20


1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* read the received data */
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Transfer loop */
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check the RXNE flag */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Timeout management */
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Handle the CRC Transmission */
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read the latest data */
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* the latest data has not been received */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
ARM GAS  /tmp/ccQwr80L.s 			page 21


1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait the CRC data */
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 16bit CRC */
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC */
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16B
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 22


1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           uint32_t Timeout)
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_RxXferCount;
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tickstart;
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             spi_cr1;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             spi_cr2;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             txallowed = 1U;
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_RxXferCount = Size;
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   spi_cr1             = READ_REG(hspi->Instance->CR1);
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   spi_cr2             = READ_REG(hspi->Instance->CR2);
ARM GAS  /tmp/ccQwr80L.s 			page 23


1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the Rx Fifo threshold */
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 8bit */
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 24


1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check RXNE flag */
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 25


1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->TxXferCount > 1U)
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr++;
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Check TXE flag */
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->TxXferCount > 1U)
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 0U;
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Enable CRC Transmission */
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set NSS Soft to received correctly the CRC on slave mode with NSS pulse activated */
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if ((READ_BIT(spi_cr1, SPI_CR1_MSTR) == 0U) && (READ_BIT(spi_cr2, SPI_CR2_NSSP) == SPI_CR
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_SSM);
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->RxXferCount > 1U)
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
ARM GAS  /tmp/ccQwr80L.s 			page 26


1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Set RX Fifo threshold before to switch on 8 bit data size */
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         else
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr++;
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         txallowed = 1U;
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         errorcode = HAL_TIMEOUT;
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait until TXE flag */
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Error on the CRC reception */
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_TIMEOUT;
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       goto error;
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Read CRC */
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 16bit CRC */
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(hspi->Instance->DR);
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC */
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           errorcode = HAL_TIMEOUT;
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
ARM GAS  /tmp/ccQwr80L.s 			page 27


1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear CRC Flag */
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 28


1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQwr80L.s 			page 29


1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the data size to adapt Rx threshold and the set the function for IT treatment */
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 30


1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             process unlock */
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
ARM GAS  /tmp/ccQwr80L.s 			page 31


1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef    errorcode = HAL_OK;
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the function for IT treatment */
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 1U;
ARM GAS  /tmp/ccQwr80L.s 			page 32


1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->CRCSize = 2U;
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->CRCSize = 0U;
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if packing mode is enabled and if there is more than 2 data to receive */
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (Size >= 2U))
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16 bit */
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8 bit */
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check tx dma handle */
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
ARM GAS  /tmp/ccQwr80L.s 			page 33


1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
ARM GAS  /tmp/ccQwr80L.s 			page 34


1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.DataSize <= SPI_DATASIZE_8BIT) && (hspi->hdmatx->Init.MemDataAlignment == DMA_MDA
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the even/odd of the data size + crc if enabled */
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((hspi->TxXferCount & 0x1U) == 0U)
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pData pointer to data buffer
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccQwr80L.s 			page 35


1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check rx dma handle */
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check tx dma handle */
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /*Init field not used in handle to zero */
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 36


1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 16bit */
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
ARM GAS  /tmp/ccQwr80L.s 			page 37


2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error:
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Size amount of data to be sent
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                               uint16_t Size)
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check rx & tx dma handles */
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check Direction parameter */
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process locked */
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init temporary variables */
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_state           = hspi->State;
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_BUSY;
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 38


2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the transaction information */
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init field not used in handle to zero */
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset CRC Calculation */
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset the threshold bit */
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX | SPI_CR2_LDMARX);
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The packing mode management is enabled by the DMA settings according the spi data size */
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set fiforxthreshold according the reception data length: 16bit */
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set RX Fifo threshold according the reception data length: 8bit */
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->TxXferSize & 0x1U) == 0x0U)
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMATX);
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
ARM GAS  /tmp/ccQwr80L.s 			page 39


2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 16bit */
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->RxXferCount & 0x1U) == 0x0U)
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR2, SPI_CR2_LDMARX);
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA error callback */
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Rx DMA Request */
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
ARM GAS  /tmp/ccQwr80L.s 			page 40


2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Update SPI error code */
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Enable SPI peripheral */
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable Tx DMA Request */
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** error :
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
ARM GAS  /tmp/ccQwr80L.s 			page 41


2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Tx DMA Request */
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
ARM GAS  /tmp/ccQwr80L.s 			page 42


2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable SPI Peripheral */
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable peripheral */
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Control the BSY flag */
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Empty the FRLVL fifo */
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT,
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable Rx DMA Request */
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check error during Abort procedure */
ARM GAS  /tmp/ccQwr80L.s 			page 43


2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->state to ready */
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         This procedure performs following operations :
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - Set handle State to READY
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** */
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t abortcplt ;
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count, resetcount;
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Initialized local variable  */
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   errorcode = HAL_OK;
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
ARM GAS  /tmp/ccQwr80L.s 			page 44


2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (hspi->State != HAL_SPI_STATE_ABORT);
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count = resetcount;
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      before any call to DMA Abort functions */
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****        Otherwise, set it to NULL */
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
2483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
ARM GAS  /tmp/ccQwr80L.s 			page 45


2485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
2487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
2492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
2495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
2498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
2505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
2510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
2513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
2516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
2519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         abortcplt = 0U;
2523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (abortcplt == 1U)
2528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check error during Abort procedure */
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
2535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
2540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Reset errorCode */
ARM GAS  /tmp/ccQwr80L.s 			page 46


2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
2543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
2548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
2557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
2579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_LOCK(hspi);
2593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccQwr80L.s 			page 47


2599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
2608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
2612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      */
2617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
2620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
2622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
2629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
2631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
2634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
2640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
2653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
ARM GAS  /tmp/ccQwr80L.s 			page 48


2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
2657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR(hspi);
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
2664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR(hspi);
2666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
2671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
2674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
2676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
2684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
2689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
2692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
2696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
2699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable all interrupts */
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
2705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
2707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
2709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
2711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
ARM GAS  /tmp/ccQwr80L.s 			page 49


2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
2714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
2719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
2725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
2726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
2730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
2732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
2733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
2734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
2736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
2737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user error callback */
2738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
2742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
2744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
2746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
ARM GAS  /tmp/ccQwr80L.s 			page 50


2770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
ARM GAS  /tmp/ccQwr80L.s 			page 51


2827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI error callback.
2847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle.
2867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   UNUSED(hspi);
2873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****    */
2877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
ARM GAS  /tmp/ccQwr80L.s 			page 52


2884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   SPI control functions
2885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *
2886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @verbatim
2887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****  ===============================================================================
2890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     [..]
2891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** @endverbatim
2895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI state
2903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->State;
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Return the SPI error code.
2912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
2914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval SPI error code in bitmap format
2915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return hspi->ErrorCode;
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @}
2928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief   Private functions
2932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @{
2933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
2934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccQwr80L.s 			page 53


2941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
2944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
2945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
2948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
2951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
2952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
2954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Tx DMA Request */
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
2960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
2966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
2968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
2975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
2976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
2982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
2983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
2984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Tx complete callback */
2985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
2989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
2991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
2992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
2993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
2997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
ARM GAS  /tmp/ccQwr80L.s 			page 54


2998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
3008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
3014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Wait until RXNE flag */
3017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
3018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Error on the CRC reception */
3020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read CRC */
3023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
3024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 16bit CRC */
3026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read 8bit CRC */
3031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCLength == SPI_CRC_LENGTH_16BIT)
3034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstar
3036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
3037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             /* Error on the CRC reception */
3038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
3040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Read 8bit CRC again in case of 16bit CRC in 8bit Data mode */
3041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines) *
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
3054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 55


3055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
3061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
3071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Rx complete callback */
3080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
3082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
3084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
3089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* DMA Normal Mode */
3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
3103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable ERR interrupt */
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
3106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* CRC handling */
3109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if ((hspi->Init.DataSize == SPI_DATASIZE_8BIT) && (hspi->Init.CRCLength == SPI_CRC_LENGTH_8BI
ARM GAS  /tmp/ccQwr80L.s 			page 56


3112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_QUARTER_FULL, SPI_DEFAULT
3114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                           tickstart) != HAL_OK)
3115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
3117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
3123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_HALF_FULL, SPI_DEFAULT_TI
3125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Error on the CRC reception */
3127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Read CRC to Flush DR and RXNE flag */
3130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         READ_REG(hspi->Instance->DR);
3131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check the end of the transaction */
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check if CRC error occurred */
3150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR))
3151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
3158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
3160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user TxRx complete callback */
ARM GAS  /tmp/ccQwr80L.s 			page 57


3169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
3171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
3173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
3178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Tx half complete callback */
3187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
3189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
3191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
3196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Rx half complete callback */
3205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
3207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
3209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
ARM GAS  /tmp/ccQwr80L.s 			page 58


3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
3227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
3242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
3245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
3246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
3266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
3270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
ARM GAS  /tmp/ccQwr80L.s 			page 59


3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
3286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Tx DMA Request */
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
3289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
3291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
3306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
3308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
3330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
3332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
ARM GAS  /tmp/ccQwr80L.s 			page 60


3340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hdma DMA handle.
3345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
3350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
3353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
3355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable Rx DMA Request */
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
3358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
3361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
3367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
3369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
3373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
3375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
3383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check no error during Abort procedure */
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
3386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset errorCode */
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
3389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
3394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccQwr80L.s 			page 61


3397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user Abort complete callback */
3399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
3403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount > 1U)
3416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
3421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set RX Fifo threshold according the reception data length: 8bit */
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
3427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr++;
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
3432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check end of the reception */
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
3441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 62


3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Regsiter */
3466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check end of the reception */
3471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE and ERR interrupt */
3474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount >= 2U)
3494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
3498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
3500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr++;
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
3505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transmission */
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccQwr80L.s 			page 63


3511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNE interrupt */
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
3558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQwr80L.s 			page 64


3568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Regsiter */
3574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE interrupt */
3577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable TXE interrupt */
3605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable TXE interrupt */
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
3614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
3616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccQwr80L.s 			page 65


3625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(*(__IO uint8_t *)&hspi->Instance->DR);
3631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->CRCSize--;
3633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->CRCSize == 0U)
3635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr++;
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
ARM GAS  /tmp/ccQwr80L.s 			page 66


3682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   READ_REG(hspi->Instance->DR);
3685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
3704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Enable CRC Transmission */
3707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
3714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
3719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return;
3720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
3723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr++;
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
ARM GAS  /tmp/ccQwr80L.s 			page 67


3739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
3763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Enable CRC Transmission */
3770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
3774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Flag SPI flag to check
3782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  State flag state to check
3783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
  26              		.loc 1 3789 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccQwr80L.s 			page 68


  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 0546     		mov	r5, r0
  41 0004 0F46     		mov	r7, r1
  42 0006 1646     		mov	r6, r2
  43 0008 1C46     		mov	r4, r3
  44              	.LVL1:
  45              	.L3:
3790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
  46              		.loc 1 3790 0
  47 000a 2B68     		ldr	r3, [r5]
  48 000c 9B68     		ldr	r3, [r3, #8]
  49 000e 37EA0303 		bics	r3, r7, r3
  50 0012 0CBF     		ite	eq
  51 0014 0123     		moveq	r3, #1
  52 0016 0023     		movne	r3, #0
  53 0018 B342     		cmp	r3, r6
  54 001a 37D0     		beq	.L10
3791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
  55              		.loc 1 3792 0
  56 001c B4F1FF3F 		cmp	r4, #-1
  57 0020 F3D0     		beq	.L3
3793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
  58              		.loc 1 3794 0
  59 0022 FFF7FEFF 		bl	HAL_GetTick
  60              	.LVL2:
  61 0026 069B     		ldr	r3, [sp, #24]
  62 0028 C01A     		subs	r0, r0, r3
  63 002a 8442     		cmp	r4, r0
  64 002c 01D9     		bls	.L4
  65              		.loc 1 3794 0 is_stmt 0 discriminator 1
  66 002e 002C     		cmp	r4, #0
  67 0030 EBD1     		bne	.L3
  68              	.L4:
3795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         on both master and slave sides in order to resynchronize the master
3798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         and slave for their respective CRC calculation */
3799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  69              		.loc 1 3801 0 is_stmt 1
  70 0032 2A68     		ldr	r2, [r5]
  71 0034 5368     		ldr	r3, [r2, #4]
  72 0036 23F0E003 		bic	r3, r3, #224
  73 003a 5360     		str	r3, [r2, #4]
3802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
  74              		.loc 1 3803 0
ARM GAS  /tmp/ccQwr80L.s 			page 69


  75 003c 6B68     		ldr	r3, [r5, #4]
  76 003e B3F5827F 		cmp	r3, #260
  77 0042 0BD0     		beq	.L11
  78              	.L5:
3804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  79              		.loc 1 3811 0
  80 0044 AB6A     		ldr	r3, [r5, #40]
  81 0046 B3F5005F 		cmp	r3, #8192
  82 004a 14D0     		beq	.L12
  83              	.L6:
3812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
  84              		.loc 1 3816 0
  85 004c 0123     		movs	r3, #1
  86 004e 85F85D30 		strb	r3, [r5, #93]
3817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
  87              		.loc 1 3819 0
  88 0052 0023     		movs	r3, #0
  89 0054 85F85C30 		strb	r3, [r5, #92]
3820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
  90              		.loc 1 3821 0
  91 0058 0320     		movs	r0, #3
  92 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  93              	.LVL3:
  94              	.L11:
3803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
  95              		.loc 1 3803 0 discriminator 1
  96 005c AB68     		ldr	r3, [r5, #8]
  97 005e B3F5806F 		cmp	r3, #1024
  98 0062 18BF     		it	ne
  99 0064 B3F5004F 		cmpne	r3, #32768
 100 0068 ECD1     		bne	.L5
3807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 101              		.loc 1 3807 0
 102 006a 2A68     		ldr	r2, [r5]
 103 006c 1368     		ldr	r3, [r2]
 104 006e 23F04003 		bic	r3, r3, #64
 105 0072 1360     		str	r3, [r2]
 106 0074 E6E7     		b	.L5
 107              	.L12:
3813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 108              		.loc 1 3813 0
 109 0076 2A68     		ldr	r2, [r5]
 110 0078 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccQwr80L.s 			page 70


 111 007a 23F40053 		bic	r3, r3, #8192
 112 007e 1360     		str	r3, [r2]
 113 0080 2A68     		ldr	r2, [r5]
 114 0082 1368     		ldr	r3, [r2]
 115 0084 43F40053 		orr	r3, r3, #8192
 116 0088 1360     		str	r3, [r2]
 117 008a DFE7     		b	.L6
 118              	.L10:
3822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 119              		.loc 1 3826 0
 120 008c 0020     		movs	r0, #0
3827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 121              		.loc 1 3827 0
 122 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 123              		.cfi_endproc
 124              	.LFE188:
 126              		.section	.text.SPI_WaitFifoStateUntilTimeout,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv5-d16
 133              	SPI_WaitFifoStateUntilTimeout:
 134              	.LFB189:
3828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle SPI FIFO Communication Timeout.
3831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *              the configuration information for SPI module.
3833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Fifo Fifo to check
3834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  State Fifo state to check
3835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint
3840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 135              		.loc 1 3841 0
 136              		.cfi_startproc
 137              		@ args = 4, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              	.LVL4:
 140 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 24
 143              		.cfi_offset 3, -24
 144              		.cfi_offset 4, -20
 145              		.cfi_offset 5, -16
 146              		.cfi_offset 6, -12
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 0746     		mov	r7, r0
ARM GAS  /tmp/ccQwr80L.s 			page 71


 150 0004 0D46     		mov	r5, r1
 151 0006 1446     		mov	r4, r2
 152 0008 1E46     		mov	r6, r3
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 153              		.loc 1 3842 0
 154 000a 02E0     		b	.L16
 155              	.LVL5:
 156              	.L15:
3843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
3845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Read 8bit CRC to flush Data Register */
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       READ_REG(*((__IO uint8_t *)&hspi->Instance->DR));
3848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 157              		.loc 1 3850 0
 158 000c B6F1FF3F 		cmp	r6, #-1
 159 0010 0BD1     		bne	.L23
 160              	.L16:
3842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while ((hspi->Instance->SR & Fifo) != State)
 161              		.loc 1 3842 0
 162 0012 3A68     		ldr	r2, [r7]
 163 0014 9368     		ldr	r3, [r2, #8]
 164 0016 2B40     		ands	r3, r3, r5
 165 0018 A342     		cmp	r3, r4
 166 001a 3BD0     		beq	.L24
3844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 167              		.loc 1 3844 0
 168 001c B5F5C06F 		cmp	r5, #1536
 169 0020 08BF     		it	eq
 170 0022 002C     		cmpeq	r4, #0
 171 0024 F2D1     		bne	.L15
3847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 172              		.loc 1 3847 0
 173 0026 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 174 0028 F0E7     		b	.L15
 175              	.L23:
3851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 176              		.loc 1 3852 0
 177 002a FFF7FEFF 		bl	HAL_GetTick
 178              	.LVL6:
 179 002e 069B     		ldr	r3, [sp, #24]
 180 0030 C01A     		subs	r0, r0, r3
 181 0032 8642     		cmp	r6, r0
 182 0034 01D9     		bls	.L17
 183              		.loc 1 3852 0 is_stmt 0 discriminator 1
 184 0036 002E     		cmp	r6, #0
 185 0038 EBD1     		bne	.L16
 186              	.L17:
3853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
3854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****            and slave for their respective CRC calculation */
3857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
ARM GAS  /tmp/ccQwr80L.s 			page 72


3859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 187              		.loc 1 3859 0 is_stmt 1
 188 003a 3A68     		ldr	r2, [r7]
 189 003c 5368     		ldr	r3, [r2, #4]
 190 003e 23F0E003 		bic	r3, r3, #224
 191 0042 5360     		str	r3, [r2, #4]
3860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 192              		.loc 1 3861 0
 193 0044 7B68     		ldr	r3, [r7, #4]
 194 0046 B3F5827F 		cmp	r3, #260
 195 004a 0BD0     		beq	.L25
 196              	.L18:
3862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
3863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           /* Disable SPI peripheral */
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
3866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Reset CRC Calculation */
3869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 197              		.loc 1 3869 0
 198 004c BB6A     		ldr	r3, [r7, #40]
 199 004e B3F5005F 		cmp	r3, #8192
 200 0052 14D0     		beq	.L26
 201              	.L19:
3870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
3872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
3873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 202              		.loc 1 3874 0
 203 0054 0123     		movs	r3, #1
 204 0056 87F85D30 		strb	r3, [r7, #93]
3875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Process Unlocked */
3877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 205              		.loc 1 3877 0
 206 005a 0023     		movs	r3, #0
 207 005c 87F85C30 		strb	r3, [r7, #92]
3878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return HAL_TIMEOUT;
 208              		.loc 1 3879 0
 209 0060 0320     		movs	r0, #3
 210 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 211              	.LVL7:
 212              	.L25:
3861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 213              		.loc 1 3861 0 discriminator 1
 214 0064 BB68     		ldr	r3, [r7, #8]
 215 0066 B3F5806F 		cmp	r3, #1024
 216 006a 18BF     		it	ne
 217 006c B3F5004F 		cmpne	r3, #32768
 218 0070 ECD1     		bne	.L18
3865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 219              		.loc 1 3865 0
 220 0072 3A68     		ldr	r2, [r7]
ARM GAS  /tmp/ccQwr80L.s 			page 73


 221 0074 1368     		ldr	r3, [r2]
 222 0076 23F04003 		bic	r3, r3, #64
 223 007a 1360     		str	r3, [r2]
 224 007c E6E7     		b	.L18
 225              	.L26:
3871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 226              		.loc 1 3871 0
 227 007e 3A68     		ldr	r2, [r7]
 228 0080 1368     		ldr	r3, [r2]
 229 0082 23F40053 		bic	r3, r3, #8192
 230 0086 1360     		str	r3, [r2]
 231 0088 3A68     		ldr	r2, [r7]
 232 008a 1368     		ldr	r3, [r2]
 233 008c 43F40053 		orr	r3, r3, #8192
 234 0090 1360     		str	r3, [r2]
 235 0092 DFE7     		b	.L19
 236              	.L24:
3880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
3881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
 237              		.loc 1 3884 0
 238 0094 0020     		movs	r0, #0
3885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 239              		.loc 1 3885 0
 240 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 241              		.cfi_endproc
 242              	.LFE189:
 244              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	SPI_EndRxTxTransaction:
 252              	.LFB191:
3886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable SPI peripheral */
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
3902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
ARM GAS  /tmp/ccQwr80L.s 			page 74


3906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
3912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
3913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) !=
3916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
3919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
3920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
3923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi SPI handle
3927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Timeout Timeout duration
3928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  Tickstart tick start value
3929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval HAL status
3930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 253              		.loc 1 3932 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL8:
 258 0000 70B5     		push	{r4, r5, r6, lr}
 259              	.LCFI2:
 260              		.cfi_def_cfa_offset 16
 261              		.cfi_offset 4, -16
 262              		.cfi_offset 5, -12
 263              		.cfi_offset 6, -8
 264              		.cfi_offset 14, -4
 265 0002 82B0     		sub	sp, sp, #8
 266              	.LCFI3:
 267              		.cfi_def_cfa_offset 24
 268 0004 0446     		mov	r4, r0
 269 0006 0D46     		mov	r5, r1
 270 0008 1646     		mov	r6, r2
3933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the TX fifo is empty */
3934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != H
 271              		.loc 1 3934 0
 272 000a 0092     		str	r2, [sp]
 273 000c 0B46     		mov	r3, r1
 274 000e 0022     		movs	r2, #0
 275              	.LVL9:
 276 0010 4FF4C051 		mov	r1, #6144
 277              	.LVL10:
 278 0014 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 279              	.LVL11:
 280 0018 38B1     		cbz	r0, .L28
ARM GAS  /tmp/ccQwr80L.s 			page 75


3935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 281              		.loc 1 3936 0
 282 001a 236E     		ldr	r3, [r4, #96]
 283 001c 43F02003 		orr	r3, r3, #32
 284 0020 2366     		str	r3, [r4, #96]
3937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 285              		.loc 1 3937 0
 286 0022 0323     		movs	r3, #3
 287              	.L29:
3938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
3942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control if the RX fifo is empty */
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != H
3949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
3952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return HAL_OK;
3955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 288              		.loc 1 3955 0
 289 0024 1846     		mov	r0, r3
 290 0026 02B0     		add	sp, sp, #8
 291              	.LCFI4:
 292              		.cfi_remember_state
 293              		.cfi_def_cfa_offset 16
 294              		@ sp needed
 295 0028 70BD     		pop	{r4, r5, r6, pc}
 296              	.LVL12:
 297              	.L28:
 298              	.LCFI5:
 299              		.cfi_restore_state
3941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 300              		.loc 1 3941 0
 301 002a 0096     		str	r6, [sp]
 302 002c 2B46     		mov	r3, r5
 303 002e 0022     		movs	r2, #0
 304 0030 8021     		movs	r1, #128
 305 0032 2046     		mov	r0, r4
 306 0034 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 307              	.LVL13:
 308 0038 28B1     		cbz	r0, .L30
3943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 309              		.loc 1 3943 0
 310 003a 236E     		ldr	r3, [r4, #96]
 311 003c 43F02003 		orr	r3, r3, #32
 312 0040 2366     		str	r3, [r4, #96]
3944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 313              		.loc 1 3944 0
ARM GAS  /tmp/ccQwr80L.s 			page 76


 314 0042 0323     		movs	r3, #3
 315 0044 EEE7     		b	.L29
 316              	.L30:
3948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 317              		.loc 1 3948 0
 318 0046 0096     		str	r6, [sp]
 319 0048 2B46     		mov	r3, r5
 320 004a 0022     		movs	r2, #0
 321 004c 4FF4C061 		mov	r1, #1536
 322 0050 2046     		mov	r0, r4
 323 0052 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 324              	.LVL14:
 325 0056 0346     		mov	r3, r0
 326 0058 0028     		cmp	r0, #0
 327 005a E3D0     		beq	.L29
3950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 328              		.loc 1 3950 0
 329 005c 236E     		ldr	r3, [r4, #96]
 330 005e 43F02003 		orr	r3, r3, #32
 331 0062 2366     		str	r3, [r4, #96]
3951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 332              		.loc 1 3951 0
 333 0064 0323     		movs	r3, #3
 334 0066 DDE7     		b	.L29
 335              		.cfi_endproc
 336              	.LFE191:
 338              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	SPI_EndRxTransaction:
 346              	.LFB190:
3896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 347              		.loc 1 3896 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL15:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              	.LCFI6:
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 4, -16
 356              		.cfi_offset 5, -12
 357              		.cfi_offset 6, -8
 358              		.cfi_offset 14, -4
 359 0002 82B0     		sub	sp, sp, #8
 360              	.LCFI7:
 361              		.cfi_def_cfa_offset 24
 362 0004 0446     		mov	r4, r0
 363 0006 0D46     		mov	r5, r1
 364 0008 1646     		mov	r6, r2
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 365              		.loc 1 3897 0
 366 000a 4368     		ldr	r3, [r0, #4]
 367 000c B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccQwr80L.s 			page 77


 368 0010 10D0     		beq	.L37
 369              	.LVL16:
 370              	.L33:
3905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 371              		.loc 1 3905 0
 372 0012 0096     		str	r6, [sp]
 373 0014 2B46     		mov	r3, r5
 374 0016 0022     		movs	r2, #0
 375 0018 8021     		movs	r1, #128
 376              	.LVL17:
 377 001a 2046     		mov	r0, r4
 378              	.LVL18:
 379 001c FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 380              	.LVL19:
 381 0020 0346     		mov	r3, r0
 382 0022 A0B1     		cbz	r0, .L34
3907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return HAL_TIMEOUT;
 383              		.loc 1 3907 0
 384 0024 236E     		ldr	r3, [r4, #96]
 385 0026 43F02003 		orr	r3, r3, #32
 386 002a 2366     		str	r3, [r4, #96]
3908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 387              		.loc 1 3908 0
 388 002c 0323     		movs	r3, #3
 389              	.L35:
3922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 390              		.loc 1 3922 0
 391 002e 1846     		mov	r0, r3
 392 0030 02B0     		add	sp, sp, #8
 393              	.LCFI8:
 394              		.cfi_remember_state
 395              		.cfi_def_cfa_offset 16
 396              		@ sp needed
 397 0032 70BD     		pop	{r4, r5, r6, pc}
 398              	.LVL20:
 399              	.L37:
 400              	.LCFI9:
 401              		.cfi_restore_state
3897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 402              		.loc 1 3897 0 discriminator 1
 403 0034 8368     		ldr	r3, [r0, #8]
 404 0036 B3F5806F 		cmp	r3, #1024
 405 003a 18BF     		it	ne
 406 003c B3F5004F 		cmpne	r3, #32768
 407 0040 E7D1     		bne	.L33
3901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 408              		.loc 1 3901 0
 409 0042 0268     		ldr	r2, [r0]
 410              	.LVL21:
 411 0044 1368     		ldr	r3, [r2]
 412 0046 23F04003 		bic	r3, r3, #64
 413 004a 1360     		str	r3, [r2]
 414 004c E1E7     		b	.L33
 415              	.LVL22:
 416              	.L34:
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 417              		.loc 1 3911 0
ARM GAS  /tmp/ccQwr80L.s 			page 78


 418 004e 6268     		ldr	r2, [r4, #4]
 419 0050 B2F5827F 		cmp	r2, #260
 420 0054 EBD1     		bne	.L35
3911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 421              		.loc 1 3911 0 is_stmt 0 discriminator 1
 422 0056 A268     		ldr	r2, [r4, #8]
 423 0058 B2F5806F 		cmp	r2, #1024
 424 005c 18BF     		it	ne
 425 005e B2F5004F 		cmpne	r2, #32768
 426 0062 E4D1     		bne	.L35
3915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 427              		.loc 1 3915 0 is_stmt 1
 428 0064 0096     		str	r6, [sp]
 429 0066 2B46     		mov	r3, r5
 430 0068 0022     		movs	r2, #0
 431 006a 4FF4C061 		mov	r1, #1536
 432 006e 2046     		mov	r0, r4
 433 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 434              	.LVL23:
 435 0074 0346     		mov	r3, r0
 436 0076 0028     		cmp	r0, #0
 437 0078 D9D0     		beq	.L35
3917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       return HAL_TIMEOUT;
 438              		.loc 1 3917 0
 439 007a 236E     		ldr	r3, [r4, #96]
 440 007c 43F02003 		orr	r3, r3, #32
 441 0080 2366     		str	r3, [r4, #96]
3918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 442              		.loc 1 3918 0
 443 0082 0323     		movs	r3, #3
 444 0084 D3E7     		b	.L35
 445              		.cfi_endproc
 446              	.LFE190:
 448              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-d16
 455              	SPI_AbortRx_ISR:
 456              	.LFB195:
3956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
3958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
3961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
3962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
3963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
3965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
3966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout managment*/
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
3969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable ERR interrupt */
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
ARM GAS  /tmp/ccQwr80L.s 			page 79


3972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
3975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
3977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
3979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
3981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
3984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
3987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
3990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
3991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
3993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
3994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
3995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
3997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
3999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user Rx complete callback */
4002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
4004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
4006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       else
4009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
4011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user TxRx complete callback */
4012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
4014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
4016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
4020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
4022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
4023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 80


4029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
4036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
4042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
4044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
4047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check if CRC error occurred */
4054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
4055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
4057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
4058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
4059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
4066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
4069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user Rx complete callback */
4071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
4073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
4075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     else
4078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
4080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
4082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
4084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 81


4086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
4087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
4089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
4093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
4099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
4100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Init tickstart for timeout management*/
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tickstart = HAL_GetTick();
4103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
4106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the end of the transaction */
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
4109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
4111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
4115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
4117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
4121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user error callback */
4123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
4125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
4127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   else
4130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call user Rx complete callback */
4132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
4133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
4134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #else
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
4136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
4137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
4139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
4142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
ARM GAS  /tmp/ccQwr80L.s 			page 82


4143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
4147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 457              		.loc 1 4147 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              	.LVL24:
 462 0000 10B5     		push	{r4, lr}
 463              	.LCFI10:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 4, -8
 466              		.cfi_offset 14, -4
 467 0002 84B0     		sub	sp, sp, #16
 468              	.LCFI11:
 469              		.cfi_def_cfa_offset 24
 470 0004 0446     		mov	r4, r0
4148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count;
4149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
4151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 471              		.loc 1 4151 0
 472 0006 0268     		ldr	r2, [r0]
 473 0008 1368     		ldr	r3, [r2]
 474 000a 23F04003 		bic	r3, r3, #64
 475 000e 1360     		str	r3, [r2]
4152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 476              		.loc 1 4153 0
 477 0010 1D4B     		ldr	r3, .L46
 478 0012 1B68     		ldr	r3, [r3]
 479 0014 1D4A     		ldr	r2, .L46+4
 480 0016 A2FB0323 		umull	r2, r3, r2, r3
 481 001a 5B0A     		lsrs	r3, r3, #9
 482 001c 6422     		movs	r2, #100
 483 001e 02FB03F3 		mul	r3, r2, r3
 484 0022 0393     		str	r3, [sp, #12]
4154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNEIE interrupt */
4156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 485              		.loc 1 4156 0
 486 0024 0268     		ldr	r2, [r0]
 487 0026 5368     		ldr	r3, [r2, #4]
 488 0028 23F04003 		bic	r3, r3, #64
 489 002c 5360     		str	r3, [r2, #4]
 490              	.L41:
4157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check RXNEIE is disabled */
4159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   do
4160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (count == 0U)
 491              		.loc 1 4161 0
 492 002e 039B     		ldr	r3, [sp, #12]
 493 0030 43B1     		cbz	r3, .L45
4162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQwr80L.s 			page 83


4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
4165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count--;
 494              		.loc 1 4166 0
 495 0032 039B     		ldr	r3, [sp, #12]
 496 0034 013B     		subs	r3, r3, #1
 497 0036 0393     		str	r3, [sp, #12]
4167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 498              		.loc 1 4168 0
 499 0038 2368     		ldr	r3, [r4]
 500 003a 5B68     		ldr	r3, [r3, #4]
 501 003c 13F0400F 		tst	r3, #64
 502 0040 F5D1     		bne	.L41
 503 0042 03E0     		b	.L40
 504              	.L45:
4163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
 505              		.loc 1 4163 0
 506 0044 236E     		ldr	r3, [r4, #96]
 507 0046 43F04003 		orr	r3, r3, #64
 508 004a 2366     		str	r3, [r4, #96]
 509              	.L40:
4169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Control the BSY flag */
4171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) 
 510              		.loc 1 4171 0
 511 004c FFF7FEFF 		bl	HAL_GetTick
 512              	.LVL25:
 513 0050 0090     		str	r0, [sp]
 514 0052 6423     		movs	r3, #100
 515 0054 0022     		movs	r2, #0
 516 0056 8021     		movs	r1, #128
 517 0058 2046     		mov	r0, r4
 518 005a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 519              	.LVL26:
 520 005e 08B1     		cbz	r0, .L42
4172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 521              		.loc 1 4173 0
 522 0060 4023     		movs	r3, #64
 523 0062 2366     		str	r3, [r4, #96]
 524              	.L42:
4174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 525              		.loc 1 4177 0
 526 0064 FFF7FEFF 		bl	HAL_GetTick
 527              	.LVL27:
 528 0068 0090     		str	r0, [sp]
 529 006a 6423     		movs	r3, #100
 530 006c 0022     		movs	r2, #0
 531 006e 4FF4C061 		mov	r1, #1536
 532 0072 2046     		mov	r0, r4
 533 0074 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 534              	.LVL28:
ARM GAS  /tmp/ccQwr80L.s 			page 84


 535 0078 08B1     		cbz	r0, .L43
4178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 536              		.loc 1 4179 0
 537 007a 4023     		movs	r3, #64
 538 007c 2366     		str	r3, [r4, #96]
 539              	.L43:
4180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 540              		.loc 1 4182 0
 541 007e 0723     		movs	r3, #7
 542 0080 84F85D30 		strb	r3, [r4, #93]
4183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 543              		.loc 1 4183 0
 544 0084 04B0     		add	sp, sp, #16
 545              	.LCFI12:
 546              		.cfi_def_cfa_offset 8
 547              		@ sp needed
 548 0086 10BD     		pop	{r4, pc}
 549              	.LVL29:
 550              	.L47:
 551              		.align	2
 552              	.L46:
 553 0088 00000000 		.word	SystemCoreClock
 554 008c F1197605 		.word	91625969
 555              		.cfi_endproc
 556              	.LFE195:
 558              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv5-d16
 565              	SPI_AbortTx_ISR:
 566              	.LFB196:
4184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** /**
4186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
4187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
4188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *               the configuration information for SPI module.
4189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   * @retval None
4190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   */
4191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
4192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** {
 567              		.loc 1 4192 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              	.LVL30:
 572 0000 10B5     		push	{r4, lr}
 573              	.LCFI13:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 4, -8
 576              		.cfi_offset 14, -4
 577 0002 84B0     		sub	sp, sp, #16
 578              	.LCFI14:
ARM GAS  /tmp/ccQwr80L.s 			page 85


 579              		.cfi_def_cfa_offset 24
 580 0004 0446     		mov	r4, r0
4193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __IO uint32_t count;
4194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 581              		.loc 1 4195 0
 582 0006 384B     		ldr	r3, .L62
 583 0008 1B68     		ldr	r3, [r3]
 584 000a 384A     		ldr	r2, .L62+4
 585 000c A2FB0323 		umull	r2, r3, r2, r3
 586 0010 5B0A     		lsrs	r3, r3, #9
 587 0012 6422     		movs	r2, #100
 588 0014 02FB03F3 		mul	r3, r2, r3
 589 0018 0393     		str	r3, [sp, #12]
4196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable TXEIE interrupt */
4198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 590              		.loc 1 4198 0
 591 001a 0268     		ldr	r2, [r0]
 592 001c 5368     		ldr	r3, [r2, #4]
 593 001e 23F08003 		bic	r3, r3, #128
 594 0022 5360     		str	r3, [r2, #4]
 595              	.L51:
4199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check TXEIE is disabled */
4201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   do
4202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (count == 0U)
 596              		.loc 1 4203 0
 597 0024 039B     		ldr	r3, [sp, #12]
 598 0026 43B1     		cbz	r3, .L60
4204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
4207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     count--;
 599              		.loc 1 4208 0
 600 0028 039B     		ldr	r3, [sp, #12]
 601 002a 013B     		subs	r3, r3, #1
 602 002c 0393     		str	r3, [sp, #12]
4209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE));
 603              		.loc 1 4210 0
 604 002e 2368     		ldr	r3, [r4]
 605 0030 5B68     		ldr	r3, [r3, #4]
 606 0032 13F0800F 		tst	r3, #128
 607 0036 F5D1     		bne	.L51
 608 0038 03E0     		b	.L50
 609              	.L60:
4205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       break;
 610              		.loc 1 4205 0
 611 003a 236E     		ldr	r3, [r4, #96]
 612 003c 43F04003 		orr	r3, r3, #64
 613 0040 2366     		str	r3, [r4, #96]
 614              	.L50:
4211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
ARM GAS  /tmp/ccQwr80L.s 			page 86


 615              		.loc 1 4212 0
 616 0042 FFF7FEFF 		bl	HAL_GetTick
 617              	.LVL31:
 618 0046 0246     		mov	r2, r0
 619 0048 6421     		movs	r1, #100
 620 004a 2046     		mov	r0, r4
 621 004c FFF7FEFF 		bl	SPI_EndRxTxTransaction
 622              	.LVL32:
 623 0050 08B1     		cbz	r0, .L52
4213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 624              		.loc 1 4214 0
 625 0052 4023     		movs	r3, #64
 626 0054 2366     		str	r3, [r4, #96]
 627              	.L52:
4215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable SPI Peripheral */
4218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 628              		.loc 1 4218 0
 629 0056 2268     		ldr	r2, [r4]
 630 0058 1368     		ldr	r3, [r2]
 631 005a 23F04003 		bic	r3, r3, #64
 632 005e 1360     		str	r3, [r2]
4219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Empty the FRLVL fifo */
4221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, HAL
 633              		.loc 1 4221 0
 634 0060 FFF7FEFF 		bl	HAL_GetTick
 635              	.LVL33:
 636 0064 0090     		str	r0, [sp]
 637 0066 6423     		movs	r3, #100
 638 0068 0022     		movs	r2, #0
 639 006a 4FF4C061 		mov	r1, #1536
 640 006e 2046     		mov	r0, r4
 641 0070 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 642              	.LVL34:
 643 0074 08B1     		cbz	r0, .L53
4222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 644              		.loc 1 4223 0
 645 0076 4023     		movs	r3, #64
 646 0078 2366     		str	r3, [r4, #96]
 647              	.L53:
4224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check case of Full-Duplex Mode and disable directly RXNEIE interrupt */
4227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 648              		.loc 1 4227 0
 649 007a 2368     		ldr	r3, [r4]
 650 007c 5A68     		ldr	r2, [r3, #4]
 651 007e 12F0400F 		tst	r2, #64
 652 0082 2BD0     		beq	.L54
4228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
4229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Disable RXNEIE interrupt */
4230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXNEIE));
 653              		.loc 1 4230 0
ARM GAS  /tmp/ccQwr80L.s 			page 87


 654 0084 5A68     		ldr	r2, [r3, #4]
 655 0086 22F04002 		bic	r2, r2, #64
 656 008a 5A60     		str	r2, [r3, #4]
 657              	.L57:
4231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Check RXNEIE is disabled */
4233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     do
4234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       if (count == 0U)
 658              		.loc 1 4235 0
 659 008c 039B     		ldr	r3, [sp, #12]
 660 008e 43B1     		cbz	r3, .L61
4236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
4238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
4239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
4240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       count--;
 661              		.loc 1 4240 0
 662 0090 039B     		ldr	r3, [sp, #12]
 663 0092 013B     		subs	r3, r3, #1
 664 0094 0393     		str	r3, [sp, #12]
4241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     while (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE));
 665              		.loc 1 4242 0
 666 0096 2368     		ldr	r3, [r4]
 667 0098 5B68     		ldr	r3, [r3, #4]
 668 009a 13F0400F 		tst	r3, #64
 669 009e F5D1     		bne	.L57
 670 00a0 03E0     		b	.L56
 671              	.L61:
4237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 672              		.loc 1 4237 0
 673 00a2 236E     		ldr	r3, [r4, #96]
 674 00a4 43F04003 		orr	r3, r3, #64
 675 00a8 2366     		str	r3, [r4, #96]
 676              	.L56:
4243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Control the BSY flag */
4245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, SPI_DEFAULT_TIMEOUT, HAL_GetTick()
 677              		.loc 1 4245 0
 678 00aa FFF7FEFF 		bl	HAL_GetTick
 679              	.LVL35:
 680 00ae 0090     		str	r0, [sp]
 681 00b0 6423     		movs	r3, #100
 682 00b2 0022     		movs	r2, #0
 683 00b4 8021     		movs	r1, #128
 684 00b6 2046     		mov	r0, r4
 685 00b8 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 686              	.LVL36:
 687 00bc 08B1     		cbz	r0, .L58
4246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 688              		.loc 1 4247 0
 689 00be 4023     		movs	r3, #64
 690 00c0 2366     		str	r3, [r4, #96]
 691              	.L58:
4248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 88


4249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
4250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Empty the FRLVL fifo */
4251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, SPI_DEFAULT_TIMEOUT, H
 692              		.loc 1 4251 0
 693 00c2 FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL37:
 695 00c6 0090     		str	r0, [sp]
 696 00c8 6423     		movs	r3, #100
 697 00ca 0022     		movs	r2, #0
 698 00cc 4FF4C061 		mov	r1, #1536
 699 00d0 2046     		mov	r0, r4
 700 00d2 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 701              	.LVL38:
 702 00d6 08B1     		cbz	r0, .L54
4252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
4253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 703              		.loc 1 4253 0
 704 00d8 4023     		movs	r3, #64
 705 00da 2366     		str	r3, [r4, #96]
 706              	.L54:
4254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
4255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
4256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 707              		.loc 1 4256 0
 708 00dc 0723     		movs	r3, #7
 709 00de 84F85D30 		strb	r3, [r4, #93]
4257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 710              		.loc 1 4257 0
 711 00e2 04B0     		add	sp, sp, #16
 712              	.LCFI15:
 713              		.cfi_def_cfa_offset 8
 714              		@ sp needed
 715 00e4 10BD     		pop	{r4, pc}
 716              	.LVL39:
 717              	.L63:
 718 00e6 00BF     		.align	2
 719              	.L62:
 720 00e8 00000000 		.word	SystemCoreClock
 721 00ec F1197605 		.word	91625969
 722              		.cfi_endproc
 723              	.LFE196:
 725              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 726              		.align	1
 727              		.weak	HAL_SPI_MspInit
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv5-d16
 733              	HAL_SPI_MspInit:
 734              	.LFB143:
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 735              		.loc 1 503 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740              	.LVL40:
ARM GAS  /tmp/ccQwr80L.s 			page 89


 741 0000 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE143:
 745              		.section	.text.HAL_SPI_Init,"ax",%progbits
 746              		.align	1
 747              		.global	HAL_SPI_Init
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv5-d16
 753              	HAL_SPI_Init:
 754              	.LFB141:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 755              		.loc 1 314 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              	.LVL41:
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 760              		.loc 1 318 0
 761 0000 0028     		cmp	r0, #0
 762 0002 58D0     		beq	.L72
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t frxth;
 763              		.loc 1 314 0
 764 0004 10B5     		push	{r4, lr}
 765              	.LCFI16:
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 4, -8
 768              		.cfi_offset 14, -4
 769 0006 0446     		mov	r4, r0
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 770              		.loc 1 346 0
 771 0008 0023     		movs	r3, #0
 772 000a 8362     		str	r3, [r0, #40]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 773              		.loc 1 349 0
 774 000c 90F85D30 		ldrb	r3, [r0, #93]	@ zero_extendqisi2
 775 0010 002B     		cmp	r3, #0
 776 0012 45D0     		beq	.L78
 777              	.LVL42:
 778              	.L67:
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 779              		.loc 1 378 0
 780 0014 0223     		movs	r3, #2
 781 0016 84F85D30 		strb	r3, [r4, #93]
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 782              		.loc 1 381 0
 783 001a 2268     		ldr	r2, [r4]
 784 001c 1368     		ldr	r3, [r2]
 785 001e 23F04003 		bic	r3, r3, #64
 786 0022 1360     		str	r3, [r2]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 787              		.loc 1 384 0
 788 0024 E368     		ldr	r3, [r4, #12]
 789 0026 B3F5E06F 		cmp	r3, #1792
 790 002a 3ED9     		bls	.L73
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 90


 791              		.loc 1 386 0
 792 002c 0021     		movs	r1, #0
 793              	.L68:
 794              	.LVL43:
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 795              		.loc 1 394 0
 796 002e B3F5706F 		cmp	r3, #3840
 797 0032 18BF     		it	ne
 798 0034 B3F5E06F 		cmpne	r3, #1792
 799 0038 01D0     		beq	.L69
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 800              		.loc 1 397 0
 801 003a 0022     		movs	r2, #0
 802 003c A262     		str	r2, [r4, #40]
 803              	.L69:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 804              		.loc 1 401 0
 805 003e 226B     		ldr	r2, [r4, #48]
 806 0040 22B9     		cbnz	r2, .L70
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 807              		.loc 1 404 0
 808 0042 B3F5E06F 		cmp	r3, #1792
 809 0046 33D9     		bls	.L71
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 810              		.loc 1 406 0
 811 0048 0223     		movs	r3, #2
 812 004a 2363     		str	r3, [r4, #48]
 813              	.L70:
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 814              		.loc 1 417 0
 815 004c 2268     		ldr	r2, [r4]
 816 004e 6368     		ldr	r3, [r4, #4]
 817 0050 A068     		ldr	r0, [r4, #8]
 818 0052 0343     		orrs	r3, r3, r0
 819 0054 2069     		ldr	r0, [r4, #16]
 820 0056 0343     		orrs	r3, r3, r0
 821 0058 6069     		ldr	r0, [r4, #20]
 822 005a 0343     		orrs	r3, r3, r0
 823 005c A069     		ldr	r0, [r4, #24]
 824 005e 00F40070 		and	r0, r0, #512
 825 0062 0343     		orrs	r3, r3, r0
 826 0064 E069     		ldr	r0, [r4, #28]
 827 0066 0343     		orrs	r3, r3, r0
 828 0068 206A     		ldr	r0, [r4, #32]
 829 006a 0343     		orrs	r3, r3, r0
 830 006c A06A     		ldr	r0, [r4, #40]
 831 006e 0343     		orrs	r3, r3, r0
 832 0070 1360     		str	r3, [r2]
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****                                   hspi->Init.NSSPMode | hspi->Init.DataSize) | frxth);
 833              		.loc 1 429 0
 834 0072 2268     		ldr	r2, [r4]
 835 0074 638B     		ldrh	r3, [r4, #26]
 836 0076 03F00403 		and	r3, r3, #4
 837 007a 606A     		ldr	r0, [r4, #36]
 838 007c 0343     		orrs	r3, r3, r0
 839 007e 606B     		ldr	r0, [r4, #52]
 840 0080 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccQwr80L.s 			page 91


 841 0082 E068     		ldr	r0, [r4, #12]
 842 0084 0343     		orrs	r3, r3, r0
 843 0086 0B43     		orrs	r3, r3, r1
 844 0088 5360     		str	r3, [r2, #4]
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 845              		.loc 1 443 0
 846 008a 2268     		ldr	r2, [r4]
 847 008c D369     		ldr	r3, [r2, #28]
 848 008e 23F40063 		bic	r3, r3, #2048
 849 0092 D361     		str	r3, [r2, #28]
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 850              		.loc 1 446 0
 851 0094 0020     		movs	r0, #0
 852 0096 2066     		str	r0, [r4, #96]
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 853              		.loc 1 447 0
 854 0098 0123     		movs	r3, #1
 855 009a 84F85D30 		strb	r3, [r4, #93]
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 856              		.loc 1 449 0
 857 009e 10BD     		pop	{r4, pc}
 858              	.LVL44:
 859              	.L78:
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 860              		.loc 1 352 0
 861 00a0 80F85C30 		strb	r3, [r0, #92]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 862              		.loc 1 374 0
 863 00a4 FFF7FEFF 		bl	HAL_SPI_MspInit
 864              	.LVL45:
 865 00a8 B4E7     		b	.L67
 866              	.L73:
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 867              		.loc 1 390 0
 868 00aa 4FF48051 		mov	r1, #4096
 869 00ae BEE7     		b	.L68
 870              	.LVL46:
 871              	.L71:
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 872              		.loc 1 410 0
 873 00b0 0123     		movs	r3, #1
 874 00b2 2363     		str	r3, [r4, #48]
 875 00b4 CAE7     		b	.L70
 876              	.LVL47:
 877              	.L72:
 878              	.LCFI17:
 879              		.cfi_def_cfa_offset 0
 880              		.cfi_restore 4
 881              		.cfi_restore 14
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 882              		.loc 1 320 0
 883 00b6 0120     		movs	r0, #1
 884              	.LVL48:
 885 00b8 7047     		bx	lr
 886              		.cfi_endproc
 887              	.LFE141:
 889              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
ARM GAS  /tmp/ccQwr80L.s 			page 92


 890              		.align	1
 891              		.weak	HAL_SPI_MspDeInit
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv5-d16
 897              	HAL_SPI_MspDeInit:
 898              	.LFB144:
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 899              		.loc 1 519 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904              	.LVL49:
 905 0000 7047     		bx	lr
 906              		.cfi_endproc
 907              	.LFE144:
 909              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 910              		.align	1
 911              		.global	HAL_SPI_DeInit
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu fpv5-d16
 917              	HAL_SPI_DeInit:
 918              	.LFB142:
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 919              		.loc 1 459 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL50:
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 924              		.loc 1 461 0
 925 0000 90B1     		cbz	r0, .L82
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Check the SPI handle allocation */
 926              		.loc 1 459 0
 927 0002 10B5     		push	{r4, lr}
 928              	.LCFI18:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 4, -8
 931              		.cfi_offset 14, -4
 932 0004 0446     		mov	r4, r0
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 933              		.loc 1 469 0
 934 0006 0223     		movs	r3, #2
 935 0008 80F85D30 		strb	r3, [r0, #93]
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 936              		.loc 1 472 0
 937 000c 0268     		ldr	r2, [r0]
 938 000e 1368     		ldr	r3, [r2]
 939 0010 23F04003 		bic	r3, r3, #64
 940 0014 1360     		str	r3, [r2]
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 941              		.loc 1 484 0
 942 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
ARM GAS  /tmp/ccQwr80L.s 			page 93


 943              	.LVL51:
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 944              		.loc 1 487 0
 945 001a 0020     		movs	r0, #0
 946 001c 2066     		str	r0, [r4, #96]
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 947              		.loc 1 488 0
 948 001e 84F85D00 		strb	r0, [r4, #93]
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 949              		.loc 1 491 0
 950 0022 84F85C00 		strb	r0, [r4, #92]
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 951              		.loc 1 493 0
 952 0026 10BD     		pop	{r4, pc}
 953              	.LVL52:
 954              	.L82:
 955              	.LCFI19:
 956              		.cfi_def_cfa_offset 0
 957              		.cfi_restore 4
 958              		.cfi_restore 14
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 959              		.loc 1 463 0
 960 0028 0120     		movs	r0, #1
 961              	.LVL53:
 962 002a 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE142:
 966              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 967              		.align	1
 968              		.global	HAL_SPI_Transmit
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv5-d16
 974              	HAL_SPI_Transmit:
 975              	.LFB145:
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 976              		.loc 1 790 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 8
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              	.LVL54:
 981 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 982              	.LCFI20:
 983              		.cfi_def_cfa_offset 24
 984              		.cfi_offset 4, -24
 985              		.cfi_offset 5, -20
 986              		.cfi_offset 6, -16
 987              		.cfi_offset 7, -12
 988              		.cfi_offset 8, -8
 989              		.cfi_offset 14, -4
 990 0004 82B0     		sub	sp, sp, #8
 991              	.LCFI21:
 992              		.cfi_def_cfa_offset 32
 993              	.LVL55:
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 994              		.loc 1 799 0
ARM GAS  /tmp/ccQwr80L.s 			page 94


 995 0006 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 996 000a 012C     		cmp	r4, #1
 997 000c 03D1     		bne	.L121
 998 000e 0220     		movs	r0, #2
 999              	.LVL56:
 1000              	.L88:
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1001              		.loc 1 961 0
 1002 0010 02B0     		add	sp, sp, #8
 1003              	.LCFI22:
 1004              		.cfi_remember_state
 1005              		.cfi_def_cfa_offset 24
 1006              		@ sp needed
 1007 0012 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1008              	.LVL57:
 1009              	.L121:
 1010              	.LCFI23:
 1011              		.cfi_restore_state
 1012 0016 1D46     		mov	r5, r3
 1013 0018 1746     		mov	r7, r2
 1014 001a 8846     		mov	r8, r1
 1015 001c 0446     		mov	r4, r0
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1016              		.loc 1 799 0 discriminator 2
 1017 001e 0123     		movs	r3, #1
 1018              	.LVL58:
 1019 0020 80F85C30 		strb	r3, [r0, #92]
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 1020              		.loc 1 802 0 discriminator 2
 1021 0024 FFF7FEFF 		bl	HAL_GetTick
 1022              	.LVL59:
 1023 0028 0646     		mov	r6, r0
 1024              	.LVL60:
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1025              		.loc 1 805 0 discriminator 2
 1026 002a 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1027 002e DBB2     		uxtb	r3, r3
 1028 0030 012B     		cmp	r3, #1
 1029 0032 07D0     		beq	.L122
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1030              		.loc 1 807 0
 1031 0034 0220     		movs	r0, #2
 1032              	.LVL61:
 1033              	.L89:
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Unlocked */
 1034              		.loc 1 957 0
 1035 0036 0123     		movs	r3, #1
 1036 0038 84F85D30 		strb	r3, [r4, #93]
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1037              		.loc 1 959 0
 1038 003c 0023     		movs	r3, #0
 1039 003e 84F85C30 		strb	r3, [r4, #92]
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1040              		.loc 1 960 0
 1041 0042 E5E7     		b	.L88
 1042              	.LVL62:
 1043              	.L122:
ARM GAS  /tmp/ccQwr80L.s 			page 95


 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1044              		.loc 1 811 0
 1045 0044 002F     		cmp	r7, #0
 1046 0046 18BF     		it	ne
 1047 0048 B8F1000F 		cmpne	r8, #0
 1048 004c 00F0BD80 		beq	.L114
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1049              		.loc 1 818 0
 1050 0050 0323     		movs	r3, #3
 1051 0052 84F85D30 		strb	r3, [r4, #93]
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 1052              		.loc 1 819 0
 1053 0056 0023     		movs	r3, #0
 1054 0058 2366     		str	r3, [r4, #96]
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1055              		.loc 1 820 0
 1056 005a C4F83880 		str	r8, [r4, #56]
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1057              		.loc 1 821 0
 1058 005e A787     		strh	r7, [r4, #60]	@ movhi
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1059              		.loc 1 822 0
 1060 0060 E787     		strh	r7, [r4, #62]	@ movhi
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1061              		.loc 1 825 0
 1062 0062 2364     		str	r3, [r4, #64]
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1063              		.loc 1 826 0
 1064 0064 A4F84430 		strh	r3, [r4, #68]	@ movhi
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1065              		.loc 1 827 0
 1066 0068 A4F84630 		strh	r3, [r4, #70]	@ movhi
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1067              		.loc 1 828 0
 1068 006c 2365     		str	r3, [r4, #80]
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1069              		.loc 1 829 0
 1070 006e E364     		str	r3, [r4, #76]
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1071              		.loc 1 832 0
 1072 0070 A368     		ldr	r3, [r4, #8]
 1073 0072 B3F5004F 		cmp	r3, #32768
 1074 0076 1DD0     		beq	.L123
 1075              	.L90:
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1076              		.loc 1 846 0
 1077 0078 2368     		ldr	r3, [r4]
 1078 007a 1A68     		ldr	r2, [r3]
 1079 007c 12F0400F 		tst	r2, #64
 1080 0080 03D1     		bne	.L91
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1081              		.loc 1 849 0
 1082 0082 1A68     		ldr	r2, [r3]
 1083 0084 42F04002 		orr	r2, r2, #64
 1084 0088 1A60     		str	r2, [r3]
 1085              	.L91:
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 96


 1086              		.loc 1 853 0
 1087 008a E368     		ldr	r3, [r4, #12]
 1088 008c B3F5E06F 		cmp	r3, #1792
 1089 0090 35D9     		bls	.L92
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1090              		.loc 1 855 0
 1091 0092 6368     		ldr	r3, [r4, #4]
 1092 0094 0BB1     		cbz	r3, .L93
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1093              		.loc 1 855 0 is_stmt 0 discriminator 1
 1094 0096 012F     		cmp	r7, #1
 1095 0098 1CD1     		bne	.L95
 1096              	.L93:
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1097              		.loc 1 857 0 is_stmt 1
 1098 009a 2368     		ldr	r3, [r4]
 1099 009c A26B     		ldr	r2, [r4, #56]
 1100 009e 1288     		ldrh	r2, [r2]
 1101 00a0 DA60     		str	r2, [r3, #12]
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1102              		.loc 1 858 0
 1103 00a2 A36B     		ldr	r3, [r4, #56]
 1104 00a4 0233     		adds	r3, r3, #2
 1105 00a6 A363     		str	r3, [r4, #56]
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 1106              		.loc 1 859 0
 1107 00a8 E38F     		ldrh	r3, [r4, #62]
 1108 00aa 9BB2     		uxth	r3, r3
 1109 00ac 013B     		subs	r3, r3, #1
 1110 00ae 9BB2     		uxth	r3, r3
 1111 00b0 E387     		strh	r3, [r4, #62]	@ movhi
 1112 00b2 0FE0     		b	.L95
 1113              	.L123:
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1114              		.loc 1 834 0
 1115 00b4 2268     		ldr	r2, [r4]
 1116 00b6 1368     		ldr	r3, [r2]
 1117 00b8 43F48043 		orr	r3, r3, #16384
 1118 00bc 1360     		str	r3, [r2]
 1119 00be DBE7     		b	.L90
 1120              	.LVL63:
 1121              	.L96:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1122              		.loc 1 874 0
 1123 00c0 FFF7FEFF 		bl	HAL_GetTick
 1124              	.LVL64:
 1125 00c4 801B     		subs	r0, r0, r6
 1126 00c6 A842     		cmp	r0, r5
 1127 00c8 02D3     		bcc	.L98
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1128              		.loc 1 874 0 is_stmt 0 discriminator 1
 1129 00ca B5F1FF3F 		cmp	r5, #-1
 1130 00ce 7ED1     		bne	.L115
 1131              	.L98:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1132              		.loc 1 874 0 discriminator 3
 1133 00d0 002D     		cmp	r5, #0
ARM GAS  /tmp/ccQwr80L.s 			page 97


 1134 00d2 7ED0     		beq	.L116
 1135              	.L95:
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1136              		.loc 1 862 0 is_stmt 1
 1137 00d4 E38F     		ldrh	r3, [r4, #62]
 1138 00d6 9BB2     		uxth	r3, r3
 1139 00d8 002B     		cmp	r3, #0
 1140 00da 61D0     		beq	.L100
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1141              		.loc 1 865 0
 1142 00dc 2368     		ldr	r3, [r4]
 1143 00de 9A68     		ldr	r2, [r3, #8]
 1144 00e0 12F0020F 		tst	r2, #2
 1145 00e4 ECD0     		beq	.L96
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1146              		.loc 1 867 0
 1147 00e6 A26B     		ldr	r2, [r4, #56]
 1148 00e8 1288     		ldrh	r2, [r2]
 1149 00ea DA60     		str	r2, [r3, #12]
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1150              		.loc 1 868 0
 1151 00ec A36B     		ldr	r3, [r4, #56]
 1152 00ee 0233     		adds	r3, r3, #2
 1153 00f0 A363     		str	r3, [r4, #56]
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1154              		.loc 1 869 0
 1155 00f2 E28F     		ldrh	r2, [r4, #62]
 1156 00f4 92B2     		uxth	r2, r2
 1157 00f6 013A     		subs	r2, r2, #1
 1158 00f8 92B2     		uxth	r2, r2
 1159 00fa E287     		strh	r2, [r4, #62]	@ movhi
 1160 00fc EAE7     		b	.L95
 1161              	.LVL65:
 1162              	.L92:
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1163              		.loc 1 885 0
 1164 00fe 6368     		ldr	r3, [r4, #4]
 1165 0100 0BB1     		cbz	r3, .L101
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1166              		.loc 1 885 0 is_stmt 0 discriminator 1
 1167 0102 012F     		cmp	r7, #1
 1168 0104 28D1     		bne	.L104
 1169              	.L101:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1170              		.loc 1 887 0 is_stmt 1
 1171 0106 E38F     		ldrh	r3, [r4, #62]
 1172 0108 9BB2     		uxth	r3, r3
 1173 010a 012B     		cmp	r3, #1
 1174 010c 0CD9     		bls	.L103
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1175              		.loc 1 890 0
 1176 010e 2368     		ldr	r3, [r4]
 1177 0110 A26B     		ldr	r2, [r4, #56]
 1178 0112 1288     		ldrh	r2, [r2]
 1179 0114 DA60     		str	r2, [r3, #12]
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1180              		.loc 1 891 0
ARM GAS  /tmp/ccQwr80L.s 			page 98


 1181 0116 A36B     		ldr	r3, [r4, #56]
 1182 0118 0233     		adds	r3, r3, #2
 1183 011a A363     		str	r3, [r4, #56]
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1184              		.loc 1 892 0
 1185 011c E38F     		ldrh	r3, [r4, #62]
 1186 011e 9BB2     		uxth	r3, r3
 1187 0120 023B     		subs	r3, r3, #2
 1188 0122 9BB2     		uxth	r3, r3
 1189 0124 E387     		strh	r3, [r4, #62]	@ movhi
 1190 0126 17E0     		b	.L104
 1191              	.L103:
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr ++;
 1192              		.loc 1 896 0
 1193 0128 2368     		ldr	r3, [r4]
 1194 012a A26B     		ldr	r2, [r4, #56]
 1195 012c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1196 012e 1A73     		strb	r2, [r3, #12]
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1197              		.loc 1 897 0
 1198 0130 A36B     		ldr	r3, [r4, #56]
 1199 0132 0133     		adds	r3, r3, #1
 1200 0134 A363     		str	r3, [r4, #56]
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1201              		.loc 1 898 0
 1202 0136 E38F     		ldrh	r3, [r4, #62]
 1203 0138 9BB2     		uxth	r3, r3
 1204 013a 013B     		subs	r3, r3, #1
 1205 013c 9BB2     		uxth	r3, r3
 1206 013e E387     		strh	r3, [r4, #62]	@ movhi
 1207 0140 0AE0     		b	.L104
 1208              	.LVL66:
 1209              	.L124:
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1210              		.loc 1 909 0
 1211 0142 A36B     		ldr	r3, [r4, #56]
 1212 0144 1B88     		ldrh	r3, [r3]
 1213 0146 D360     		str	r3, [r2, #12]
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1214              		.loc 1 910 0
 1215 0148 A36B     		ldr	r3, [r4, #56]
 1216 014a 0233     		adds	r3, r3, #2
 1217 014c A363     		str	r3, [r4, #56]
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1218              		.loc 1 911 0
 1219 014e E38F     		ldrh	r3, [r4, #62]
 1220 0150 9BB2     		uxth	r3, r3
 1221 0152 023B     		subs	r3, r3, #2
 1222 0154 9BB2     		uxth	r3, r3
 1223 0156 E387     		strh	r3, [r4, #62]	@ movhi
 1224              	.L104:
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1225              		.loc 1 901 0
 1226 0158 E38F     		ldrh	r3, [r4, #62]
 1227 015a 9BB2     		uxth	r3, r3
 1228 015c 03B3     		cbz	r3, .L100
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
ARM GAS  /tmp/ccQwr80L.s 			page 99


 1229              		.loc 1 904 0
 1230 015e 2268     		ldr	r2, [r4]
 1231 0160 9368     		ldr	r3, [r2, #8]
 1232 0162 13F0020F 		tst	r3, #2
 1233 0166 0FD0     		beq	.L105
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1234              		.loc 1 906 0
 1235 0168 E38F     		ldrh	r3, [r4, #62]
 1236 016a 9BB2     		uxth	r3, r3
 1237 016c 012B     		cmp	r3, #1
 1238 016e E8D8     		bhi	.L124
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1239              		.loc 1 915 0
 1240 0170 A36B     		ldr	r3, [r4, #56]
 1241 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1242 0174 1373     		strb	r3, [r2, #12]
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1243              		.loc 1 916 0
 1244 0176 A36B     		ldr	r3, [r4, #56]
 1245 0178 0133     		adds	r3, r3, #1
 1246 017a A363     		str	r3, [r4, #56]
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1247              		.loc 1 917 0
 1248 017c E38F     		ldrh	r3, [r4, #62]
 1249 017e 9BB2     		uxth	r3, r3
 1250 0180 013B     		subs	r3, r3, #1
 1251 0182 9BB2     		uxth	r3, r3
 1252 0184 E387     		strh	r3, [r4, #62]	@ movhi
 1253 0186 E7E7     		b	.L104
 1254              	.L105:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1255              		.loc 1 923 0
 1256 0188 FFF7FEFF 		bl	HAL_GetTick
 1257              	.LVL67:
 1258 018c 801B     		subs	r0, r0, r6
 1259 018e 8542     		cmp	r5, r0
 1260 0190 02D8     		bhi	.L108
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1261              		.loc 1 923 0 is_stmt 0 discriminator 1
 1262 0192 B5F1FF3F 		cmp	r5, #-1
 1263 0196 1ED1     		bne	.L117
 1264              	.L108:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1265              		.loc 1 923 0 discriminator 3
 1266 0198 002D     		cmp	r5, #0
 1267 019a DDD1     		bne	.L104
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1268              		.loc 1 925 0 is_stmt 1
 1269 019c 0320     		movs	r0, #3
 1270 019e 4AE7     		b	.L89
 1271              	.L100:
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1272              		.loc 1 940 0
 1273 01a0 3246     		mov	r2, r6
 1274 01a2 2946     		mov	r1, r5
 1275 01a4 2046     		mov	r0, r4
 1276 01a6 FFF7FEFF 		bl	SPI_EndRxTxTransaction
ARM GAS  /tmp/ccQwr80L.s 			page 100


 1277              	.LVL68:
 1278 01aa 08B1     		cbz	r0, .L110
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1279              		.loc 1 942 0
 1280 01ac 2023     		movs	r3, #32
 1281 01ae 2366     		str	r3, [r4, #96]
 1282              	.L110:
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1283              		.loc 1 946 0
 1284 01b0 A368     		ldr	r3, [r4, #8]
 1285 01b2 33B9     		cbnz	r3, .L111
 1286              	.LBB2:
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1287              		.loc 1 948 0
 1288 01b4 0193     		str	r3, [sp, #4]
 1289 01b6 2368     		ldr	r3, [r4]
 1290 01b8 DA68     		ldr	r2, [r3, #12]
 1291 01ba 0192     		str	r2, [sp, #4]
 1292 01bc 9B68     		ldr	r3, [r3, #8]
 1293 01be 0193     		str	r3, [sp, #4]
 1294 01c0 019B     		ldr	r3, [sp, #4]
 1295              	.L111:
 1296              	.LBE2:
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1297              		.loc 1 951 0
 1298 01c2 236E     		ldr	r3, [r4, #96]
 1299 01c4 4BB9     		cbnz	r3, .L119
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 1300              		.loc 1 792 0
 1301 01c6 0020     		movs	r0, #0
 1302 01c8 35E7     		b	.L89
 1303              	.LVL69:
 1304              	.L114:
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1305              		.loc 1 813 0
 1306 01ca 0120     		movs	r0, #1
 1307              	.LVL70:
 1308 01cc 33E7     		b	.L89
 1309              	.L115:
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1310              		.loc 1 876 0
 1311 01ce 0320     		movs	r0, #3
 1312 01d0 31E7     		b	.L89
 1313              	.L116:
 1314 01d2 0320     		movs	r0, #3
 1315 01d4 2FE7     		b	.L89
 1316              	.L117:
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 1317              		.loc 1 925 0
 1318 01d6 0320     		movs	r0, #3
 1319 01d8 2DE7     		b	.L89
 1320              	.L119:
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1321              		.loc 1 953 0
 1322 01da 0120     		movs	r0, #1
 1323 01dc 2BE7     		b	.L89
 1324              		.cfi_endproc
ARM GAS  /tmp/ccQwr80L.s 			page 101


 1325              	.LFE145:
 1327              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1328              		.align	1
 1329              		.global	HAL_SPI_TransmitReceive
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1333              		.fpu fpv5-d16
 1335              	HAL_SPI_TransmitReceive:
 1336              	.LFB147:
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
 1337              		.loc 1 1199 0
 1338              		.cfi_startproc
 1339              		@ args = 4, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              	.LVL71:
 1342 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1343              	.LCFI24:
 1344              		.cfi_def_cfa_offset 24
 1345              		.cfi_offset 4, -24
 1346              		.cfi_offset 5, -20
 1347              		.cfi_offset 6, -16
 1348              		.cfi_offset 7, -12
 1349              		.cfi_offset 8, -8
 1350              		.cfi_offset 14, -4
 1351              	.LVL72:
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1352              		.loc 1 1218 0
 1353 0004 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 1354 0008 012C     		cmp	r4, #1
 1355 000a 03D1     		bne	.L163
 1356 000c 0223     		movs	r3, #2
 1357              	.LVL73:
 1358              	.L126:
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1359              		.loc 1 1485 0
 1360 000e 1846     		mov	r0, r3
 1361 0010 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1362              	.LVL74:
 1363              	.L163:
 1364 0014 1D46     		mov	r5, r3
 1365 0016 1746     		mov	r7, r2
 1366 0018 0E46     		mov	r6, r1
 1367 001a 0446     		mov	r4, r0
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1368              		.loc 1 1218 0 discriminator 2
 1369 001c 0123     		movs	r3, #1
 1370              	.LVL75:
 1371 001e 80F85C30 		strb	r3, [r0, #92]
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1372              		.loc 1 1221 0 discriminator 2
 1373 0022 FFF7FEFF 		bl	HAL_GetTick
 1374              	.LVL76:
 1375 0026 8046     		mov	r8, r0
 1376              	.LVL77:
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1377              		.loc 1 1224 0 discriminator 2
ARM GAS  /tmp/ccQwr80L.s 			page 102


 1378 0028 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1379 002c DBB2     		uxtb	r3, r3
 1380              	.LVL78:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   initial_TxXferCount = Size;
 1381              		.loc 1 1225 0 discriminator 2
 1382 002e 6268     		ldr	r2, [r4, #4]
 1383              	.LVL79:
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1384              		.loc 1 1233 0 discriminator 2
 1385 0030 012B     		cmp	r3, #1
 1386 0032 12D0     		beq	.L127
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 1387              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1388 0034 B2F5827F 		cmp	r2, #260
 1389 0038 07D0     		beq	.L164
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1390              		.loc 1 1236 0 is_stmt 1
 1391 003a 0223     		movs	r3, #2
 1392              	.LVL80:
 1393              	.L128:
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1394              		.loc 1 1482 0
 1395 003c 0122     		movs	r2, #1
 1396 003e 84F85D20 		strb	r2, [r4, #93]
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1397              		.loc 1 1483 0
 1398 0042 0022     		movs	r2, #0
 1399 0044 84F85C20 		strb	r2, [r4, #92]
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1400              		.loc 1 1484 0
 1401 0048 E1E7     		b	.L126
 1402              	.LVL81:
 1403              	.L164:
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1404              		.loc 1 1234 0
 1405 004a A268     		ldr	r2, [r4, #8]
 1406              	.LVL82:
 1407 004c 002A     		cmp	r2, #0
 1408 004e 40F03881 		bne	.L154
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1409              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1410 0052 042B     		cmp	r3, #4
 1411 0054 01D0     		beq	.L127
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1412              		.loc 1 1236 0 is_stmt 1
 1413 0056 0223     		movs	r3, #2
 1414              	.LVL83:
 1415 0058 F0E7     		b	.L128
 1416              	.LVL84:
 1417              	.L127:
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1418              		.loc 1 1240 0
 1419 005a 002F     		cmp	r7, #0
 1420 005c 18BF     		it	ne
 1421 005e 002E     		cmpne	r6, #0
 1422 0060 00F03181 		beq	.L156
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 103


 1423              		.loc 1 1240 0 is_stmt 0 discriminator 1
 1424 0064 002D     		cmp	r5, #0
 1425 0066 00F03081 		beq	.L157
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1426              		.loc 1 1247 0 is_stmt 1
 1427 006a 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1428              	.LVL85:
 1429 006e DBB2     		uxtb	r3, r3
 1430 0070 042B     		cmp	r3, #4
 1431 0072 02D0     		beq	.L129
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1432              		.loc 1 1249 0
 1433 0074 0523     		movs	r3, #5
 1434 0076 84F85D30 		strb	r3, [r4, #93]
 1435              	.L129:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1436              		.loc 1 1253 0
 1437 007a 0023     		movs	r3, #0
 1438 007c 2366     		str	r3, [r4, #96]
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1439              		.loc 1 1254 0
 1440 007e 2764     		str	r7, [r4, #64]
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1441              		.loc 1 1255 0
 1442 0080 A4F84650 		strh	r5, [r4, #70]	@ movhi
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 1443              		.loc 1 1256 0
 1444 0084 A4F84450 		strh	r5, [r4, #68]	@ movhi
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1445              		.loc 1 1257 0
 1446 0088 A663     		str	r6, [r4, #56]
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1447              		.loc 1 1258 0
 1448 008a E587     		strh	r5, [r4, #62]	@ movhi
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1449              		.loc 1 1259 0
 1450 008c A587     		strh	r5, [r4, #60]	@ movhi
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1451              		.loc 1 1262 0
 1452 008e E364     		str	r3, [r4, #76]
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1453              		.loc 1 1263 0
 1454 0090 2365     		str	r3, [r4, #80]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1455              		.loc 1 1274 0
 1456 0092 E368     		ldr	r3, [r4, #12]
 1457 0094 B3F5E06F 		cmp	r3, #1792
 1458 0098 01D8     		bhi	.L130
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1459              		.loc 1 1274 0 is_stmt 0 discriminator 1
 1460 009a 012D     		cmp	r5, #1
 1461 009c 23D9     		bls	.L131
 1462              	.L130:
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1463              		.loc 1 1277 0 is_stmt 1
 1464 009e 2268     		ldr	r2, [r4]
 1465 00a0 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccQwr80L.s 			page 104


 1466 00a2 23F48053 		bic	r3, r3, #4096
 1467 00a6 5360     		str	r3, [r2, #4]
 1468              	.LVL86:
 1469              	.L132:
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1470              		.loc 1 1286 0
 1471 00a8 2368     		ldr	r3, [r4]
 1472 00aa 1A68     		ldr	r2, [r3]
 1473 00ac 12F0400F 		tst	r2, #64
 1474 00b0 03D1     		bne	.L133
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1475              		.loc 1 1289 0
 1476 00b2 1A68     		ldr	r2, [r3]
 1477 00b4 42F04002 		orr	r2, r2, #64
 1478 00b8 1A60     		str	r2, [r3]
 1479              	.L133:
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1480              		.loc 1 1293 0
 1481 00ba E368     		ldr	r3, [r4, #12]
 1482 00bc B3F5E06F 		cmp	r3, #1792
 1483 00c0 5AD9     		bls	.L134
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1484              		.loc 1 1295 0
 1485 00c2 6368     		ldr	r3, [r4, #4]
 1486 00c4 0BB1     		cbz	r3, .L135
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1487              		.loc 1 1295 0 is_stmt 0 discriminator 1
 1488 00c6 012D     		cmp	r5, #1
 1489 00c8 0BD1     		bne	.L136
 1490              	.L135:
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1491              		.loc 1 1297 0 is_stmt 1
 1492 00ca 2368     		ldr	r3, [r4]
 1493 00cc A26B     		ldr	r2, [r4, #56]
 1494 00ce 1288     		ldrh	r2, [r2]
 1495 00d0 DA60     		str	r2, [r3, #12]
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount--;
 1496              		.loc 1 1298 0
 1497 00d2 A36B     		ldr	r3, [r4, #56]
 1498 00d4 0233     		adds	r3, r3, #2
 1499 00d6 A363     		str	r3, [r4, #56]
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 1500              		.loc 1 1299 0
 1501 00d8 E38F     		ldrh	r3, [r4, #62]
 1502 00da 9BB2     		uxth	r3, r3
 1503 00dc 013B     		subs	r3, r3, #1
 1504 00de 9BB2     		uxth	r3, r3
 1505 00e0 E387     		strh	r3, [r4, #62]	@ movhi
 1506              	.L136:
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1507              		.loc 1 1333 0
 1508 00e2 0125     		movs	r5, #1
 1509              	.LVL87:
 1510 00e4 27E0     		b	.L137
 1511              	.LVL88:
 1512              	.L131:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
ARM GAS  /tmp/ccQwr80L.s 			page 105


 1513              		.loc 1 1282 0
 1514 00e6 2268     		ldr	r2, [r4]
 1515 00e8 5368     		ldr	r3, [r2, #4]
 1516 00ea 43F48053 		orr	r3, r3, #4096
 1517 00ee 5360     		str	r3, [r2, #4]
 1518              	.LVL89:
 1519 00f0 DAE7     		b	.L132
 1520              	.LVL90:
 1521              	.L138:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1522              		.loc 1 1327 0
 1523 00f2 2368     		ldr	r3, [r4]
 1524 00f4 9A68     		ldr	r2, [r3, #8]
 1525 00f6 12F0010F 		tst	r2, #1
 1526 00fa 11D0     		beq	.L139
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1527              		.loc 1 1327 0 is_stmt 0 discriminator 1
 1528 00fc B4F84620 		ldrh	r2, [r4, #70]
 1529 0100 92B2     		uxth	r2, r2
 1530 0102 6AB1     		cbz	r2, .L139
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1531              		.loc 1 1329 0 is_stmt 1
 1532 0104 226C     		ldr	r2, [r4, #64]
 1533 0106 DB68     		ldr	r3, [r3, #12]
 1534 0108 1380     		strh	r3, [r2]	@ movhi
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 1535              		.loc 1 1330 0
 1536 010a 236C     		ldr	r3, [r4, #64]
 1537 010c 0233     		adds	r3, r3, #2
 1538 010e 2364     		str	r3, [r4, #64]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
 1539              		.loc 1 1331 0
 1540 0110 B4F84630 		ldrh	r3, [r4, #70]
 1541 0114 9BB2     		uxth	r3, r3
 1542 0116 013B     		subs	r3, r3, #1
 1543 0118 9BB2     		uxth	r3, r3
 1544 011a A4F84630 		strh	r3, [r4, #70]	@ movhi
 1545              	.LVL91:
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1546              		.loc 1 1333 0
 1547 011e 0125     		movs	r5, #1
 1548              	.LVL92:
 1549              	.L139:
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1550              		.loc 1 1335 0
 1551 0120 FFF7FEFF 		bl	HAL_GetTick
 1552              	.LVL93:
 1553 0124 A0EB0800 		sub	r0, r0, r8
 1554 0128 069B     		ldr	r3, [sp, #24]
 1555 012a 9842     		cmp	r0, r3
 1556 012c 03D3     		bcc	.L137
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1557              		.loc 1 1335 0 is_stmt 0 discriminator 1
 1558 012e B3F1FF3F 		cmp	r3, #-1
 1559 0132 40F0CC80 		bne	.L158
 1560              	.LVL94:
 1561              	.L137:
ARM GAS  /tmp/ccQwr80L.s 			page 106


1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1562              		.loc 1 1301 0 is_stmt 1
 1563 0136 E38F     		ldrh	r3, [r4, #62]
 1564 0138 9BB2     		uxth	r3, r3
 1565 013a 2BB9     		cbnz	r3, .L140
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1566              		.loc 1 1301 0 is_stmt 0 discriminator 1
 1567 013c B4F84630 		ldrh	r3, [r4, #70]
 1568 0140 9BB2     		uxth	r3, r3
 1569 0142 002B     		cmp	r3, #0
 1570 0144 00F0B080 		beq	.L141
 1571              	.L140:
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1572              		.loc 1 1304 0 is_stmt 1
 1573 0148 2368     		ldr	r3, [r4]
 1574 014a 9A68     		ldr	r2, [r3, #8]
 1575 014c 12F0020F 		tst	r2, #2
 1576 0150 CFD0     		beq	.L138
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1577              		.loc 1 1304 0 is_stmt 0 discriminator 1
 1578 0152 E28F     		ldrh	r2, [r4, #62]
 1579 0154 92B2     		uxth	r2, r2
 1580 0156 002A     		cmp	r2, #0
 1581 0158 CBD0     		beq	.L138
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1582              		.loc 1 1304 0 discriminator 2
 1583 015a 002D     		cmp	r5, #0
 1584 015c C9D0     		beq	.L138
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1585              		.loc 1 1306 0 is_stmt 1
 1586 015e A26B     		ldr	r2, [r4, #56]
 1587 0160 1288     		ldrh	r2, [r2]
 1588 0162 DA60     		str	r2, [r3, #12]
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1589              		.loc 1 1307 0
 1590 0164 A36B     		ldr	r3, [r4, #56]
 1591 0166 0233     		adds	r3, r3, #2
 1592 0168 A363     		str	r3, [r4, #56]
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
 1593              		.loc 1 1308 0
 1594 016a E38F     		ldrh	r3, [r4, #62]
 1595 016c 9BB2     		uxth	r3, r3
 1596 016e 013B     		subs	r3, r3, #1
 1597 0170 9BB2     		uxth	r3, r3
 1598 0172 E387     		strh	r3, [r4, #62]	@ movhi
 1599              	.LVL95:
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1600              		.loc 1 1310 0
 1601 0174 0025     		movs	r5, #0
 1602 0176 BCE7     		b	.L138
 1603              	.LVL96:
 1604              	.L134:
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1605              		.loc 1 1345 0
 1606 0178 6368     		ldr	r3, [r4, #4]
 1607 017a 0BB1     		cbz	r3, .L142
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQwr80L.s 			page 107


 1608              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1609 017c 012D     		cmp	r5, #1
 1610 017e 0FD1     		bne	.L143
 1611              	.L142:
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1612              		.loc 1 1347 0 is_stmt 1
 1613 0180 E38F     		ldrh	r3, [r4, #62]
 1614 0182 9BB2     		uxth	r3, r3
 1615 0184 012B     		cmp	r3, #1
 1616 0186 0DD9     		bls	.L144
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1617              		.loc 1 1349 0
 1618 0188 2368     		ldr	r3, [r4]
 1619 018a A26B     		ldr	r2, [r4, #56]
 1620 018c 1288     		ldrh	r2, [r2]
 1621 018e DA60     		str	r2, [r3, #12]
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount -= 2U;
 1622              		.loc 1 1350 0
 1623 0190 A36B     		ldr	r3, [r4, #56]
 1624 0192 0233     		adds	r3, r3, #2
 1625 0194 A363     		str	r3, [r4, #56]
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1626              		.loc 1 1351 0
 1627 0196 E38F     		ldrh	r3, [r4, #62]
 1628 0198 9BB2     		uxth	r3, r3
 1629 019a 023B     		subs	r3, r3, #2
 1630 019c 9BB2     		uxth	r3, r3
 1631 019e E387     		strh	r3, [r4, #62]	@ movhi
 1632              	.L143:
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1633              		.loc 1 1415 0
 1634 01a0 0125     		movs	r5, #1
 1635              	.LVL97:
 1636 01a2 4CE0     		b	.L150
 1637              	.LVL98:
 1638              	.L144:
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1639              		.loc 1 1355 0
 1640 01a4 2368     		ldr	r3, [r4]
 1641 01a6 A26B     		ldr	r2, [r4, #56]
 1642 01a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1643 01aa 1A73     		strb	r2, [r3, #12]
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount--;
 1644              		.loc 1 1356 0
 1645 01ac A36B     		ldr	r3, [r4, #56]
 1646 01ae 0133     		adds	r3, r3, #1
 1647 01b0 A363     		str	r3, [r4, #56]
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1648              		.loc 1 1357 0
 1649 01b2 E38F     		ldrh	r3, [r4, #62]
 1650 01b4 9BB2     		uxth	r3, r3
 1651 01b6 013B     		subs	r3, r3, #1
 1652 01b8 9BB2     		uxth	r3, r3
 1653 01ba E387     		strh	r3, [r4, #62]	@ movhi
 1654 01bc F0E7     		b	.L143
 1655              	.LVL99:
 1656              	.L166:
ARM GAS  /tmp/ccQwr80L.s 			page 108


1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1657              		.loc 1 1365 0
 1658 01be E28F     		ldrh	r2, [r4, #62]
 1659 01c0 92B2     		uxth	r2, r2
 1660 01c2 012A     		cmp	r2, #1
 1661 01c4 0CD9     		bls	.L146
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr += sizeof(uint16_t);
 1662              		.loc 1 1367 0
 1663 01c6 A26B     		ldr	r2, [r4, #56]
 1664 01c8 1288     		ldrh	r2, [r2]
 1665 01ca DA60     		str	r2, [r3, #12]
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount -= 2U;
 1666              		.loc 1 1368 0
 1667 01cc A36B     		ldr	r3, [r4, #56]
 1668 01ce 0233     		adds	r3, r3, #2
 1669 01d0 A363     		str	r3, [r4, #56]
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1670              		.loc 1 1369 0
 1671 01d2 E38F     		ldrh	r3, [r4, #62]
 1672 01d4 9BB2     		uxth	r3, r3
 1673 01d6 023B     		subs	r3, r3, #2
 1674 01d8 9BB2     		uxth	r3, r3
 1675 01da E387     		strh	r3, [r4, #62]	@ movhi
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1676              		.loc 1 1378 0
 1677 01dc 0025     		movs	r5, #0
 1678              	.LVL100:
 1679 01de 40E0     		b	.L145
 1680              	.LVL101:
 1681              	.L146:
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pTxBuffPtr++;
 1682              		.loc 1 1373 0
 1683 01e0 A26B     		ldr	r2, [r4, #56]
 1684 01e2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1685 01e4 1A73     		strb	r2, [r3, #12]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->TxXferCount--;
 1686              		.loc 1 1374 0
 1687 01e6 A36B     		ldr	r3, [r4, #56]
 1688 01e8 0133     		adds	r3, r3, #1
 1689 01ea A363     		str	r3, [r4, #56]
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1690              		.loc 1 1375 0
 1691 01ec E38F     		ldrh	r3, [r4, #62]
 1692 01ee 9BB2     		uxth	r3, r3
 1693 01f0 013B     		subs	r3, r3, #1
 1694 01f2 9BB2     		uxth	r3, r3
 1695 01f4 E387     		strh	r3, [r4, #62]	@ movhi
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1696              		.loc 1 1378 0
 1697 01f6 0025     		movs	r5, #0
 1698              	.LVL102:
 1699 01f8 33E0     		b	.L145
 1700              	.LVL103:
 1701              	.L167:
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 1702              		.loc 1 1405 0
 1703 01fa 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccQwr80L.s 			page 109


 1704 01fc 5368     		ldr	r3, [r2, #4]
 1705 01fe 43F48053 		orr	r3, r3, #4096
 1706 0202 5360     		str	r3, [r2, #4]
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1707              		.loc 1 1415 0
 1708 0204 0125     		movs	r5, #1
 1709              	.LVL104:
 1710 0206 0DE0     		b	.L147
 1711              	.LVL105:
 1712              	.L148:
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr++;
 1713              		.loc 1 1410 0
 1714 0208 226C     		ldr	r2, [r4, #64]
 1715 020a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1716 020c 1370     		strb	r3, [r2]
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount--;
 1717              		.loc 1 1411 0
 1718 020e 236C     		ldr	r3, [r4, #64]
 1719 0210 0133     		adds	r3, r3, #1
 1720 0212 2364     		str	r3, [r4, #64]
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         }
 1721              		.loc 1 1412 0
 1722 0214 B4F84630 		ldrh	r3, [r4, #70]
 1723 0218 9BB2     		uxth	r3, r3
 1724 021a 013B     		subs	r3, r3, #1
 1725 021c 9BB2     		uxth	r3, r3
 1726 021e A4F84630 		strh	r3, [r4, #70]	@ movhi
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1727              		.loc 1 1415 0
 1728 0222 0125     		movs	r5, #1
 1729              	.LVL106:
 1730              	.L147:
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1731              		.loc 1 1417 0
 1732 0224 FFF7FEFF 		bl	HAL_GetTick
 1733              	.LVL107:
 1734 0228 A0EB0800 		sub	r0, r0, r8
 1735 022c 069B     		ldr	r3, [sp, #24]
 1736 022e 8342     		cmp	r3, r0
 1737 0230 02D8     		bhi	.L149
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1738              		.loc 1 1417 0 is_stmt 0 discriminator 1
 1739 0232 B3F1FF3F 		cmp	r3, #-1
 1740 0236 4CD1     		bne	.L160
 1741              	.L149:
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1742              		.loc 1 1417 0 discriminator 3
 1743 0238 069B     		ldr	r3, [sp, #24]
 1744 023a 002B     		cmp	r3, #0
 1745 023c 4BD0     		beq	.L165
 1746              	.LVL108:
 1747              	.L150:
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1748              		.loc 1 1360 0 is_stmt 1
 1749 023e E38F     		ldrh	r3, [r4, #62]
 1750 0240 9BB2     		uxth	r3, r3
 1751 0242 23B9     		cbnz	r3, .L151
ARM GAS  /tmp/ccQwr80L.s 			page 110


1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 1752              		.loc 1 1360 0 is_stmt 0 discriminator 1
 1753 0244 B4F84630 		ldrh	r3, [r4, #70]
 1754 0248 9BB2     		uxth	r3, r3
 1755 024a 002B     		cmp	r3, #0
 1756 024c 2CD0     		beq	.L141
 1757              	.L151:
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1758              		.loc 1 1363 0 is_stmt 1
 1759 024e 2368     		ldr	r3, [r4]
 1760 0250 9A68     		ldr	r2, [r3, #8]
 1761 0252 12F0020F 		tst	r2, #2
 1762 0256 04D0     		beq	.L145
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1763              		.loc 1 1363 0 is_stmt 0 discriminator 1
 1764 0258 E28F     		ldrh	r2, [r4, #62]
 1765 025a 92B2     		uxth	r2, r2
 1766 025c 0AB1     		cbz	r2, .L145
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1767              		.loc 1 1363 0 discriminator 2
 1768 025e 002D     		cmp	r5, #0
 1769 0260 ADD1     		bne	.L166
 1770              	.LVL109:
 1771              	.L145:
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1772              		.loc 1 1395 0 is_stmt 1
 1773 0262 2368     		ldr	r3, [r4]
 1774 0264 9A68     		ldr	r2, [r3, #8]
 1775 0266 12F0010F 		tst	r2, #1
 1776 026a DBD0     		beq	.L147
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 1777              		.loc 1 1395 0 is_stmt 0 discriminator 1
 1778 026c B4F84620 		ldrh	r2, [r4, #70]
 1779 0270 92B2     		uxth	r2, r2
 1780 0272 002A     		cmp	r2, #0
 1781 0274 D6D0     		beq	.L147
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 1782              		.loc 1 1397 0 is_stmt 1
 1783 0276 B4F84620 		ldrh	r2, [r4, #70]
 1784 027a 92B2     		uxth	r2, r2
 1785 027c 012A     		cmp	r2, #1
 1786 027e C3D9     		bls	.L148
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->pRxBuffPtr += sizeof(uint16_t);
 1787              		.loc 1 1399 0
 1788 0280 226C     		ldr	r2, [r4, #64]
 1789 0282 DB68     		ldr	r3, [r3, #12]
 1790 0284 1380     		strh	r3, [r2]	@ movhi
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           hspi->RxXferCount -= 2U;
 1791              		.loc 1 1400 0
 1792 0286 236C     		ldr	r3, [r4, #64]
 1793 0288 0233     		adds	r3, r3, #2
 1794 028a 2364     		str	r3, [r4, #64]
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (hspi->RxXferCount <= 1U)
 1795              		.loc 1 1401 0
 1796 028c B4F84630 		ldrh	r3, [r4, #70]
 1797 0290 9BB2     		uxth	r3, r3
 1798 0292 023B     		subs	r3, r3, #2
ARM GAS  /tmp/ccQwr80L.s 			page 111


 1799 0294 9BB2     		uxth	r3, r3
 1800 0296 A4F84630 		strh	r3, [r4, #70]	@ movhi
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 1801              		.loc 1 1402 0
 1802 029a B4F84630 		ldrh	r3, [r4, #70]
 1803 029e 9BB2     		uxth	r3, r3
 1804 02a0 012B     		cmp	r3, #1
 1805 02a2 AAD9     		bls	.L167
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 1806              		.loc 1 1415 0
 1807 02a4 0125     		movs	r5, #1
 1808              	.LVL110:
 1809 02a6 BDE7     		b	.L147
 1810              	.LVL111:
 1811              	.L141:
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1812              		.loc 1 1475 0
 1813 02a8 4246     		mov	r2, r8
 1814 02aa 0699     		ldr	r1, [sp, #24]
 1815 02ac 2046     		mov	r0, r4
 1816 02ae FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1817              	.LVL112:
 1818 02b2 0346     		mov	r3, r0
 1819 02b4 0028     		cmp	r0, #0
 1820 02b6 3FF4C1AE 		beq	.L128
 1821              	.LVL113:
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1822              		.loc 1 1478 0
 1823 02ba 2023     		movs	r3, #32
 1824 02bc 2366     		str	r3, [r4, #96]
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1825              		.loc 1 1477 0
 1826 02be 0123     		movs	r3, #1
 1827 02c0 BCE6     		b	.L128
 1828              	.LVL114:
 1829              	.L154:
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1830              		.loc 1 1236 0
 1831 02c2 0223     		movs	r3, #2
 1832              	.LVL115:
 1833 02c4 BAE6     		b	.L128
 1834              	.LVL116:
 1835              	.L156:
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1836              		.loc 1 1242 0
 1837 02c6 0123     		movs	r3, #1
 1838              	.LVL117:
 1839 02c8 B8E6     		b	.L128
 1840              	.LVL118:
 1841              	.L157:
 1842 02ca 0123     		movs	r3, #1
 1843              	.LVL119:
 1844 02cc B6E6     		b	.L128
 1845              	.LVL120:
 1846              	.L158:
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1847              		.loc 1 1337 0
ARM GAS  /tmp/ccQwr80L.s 			page 112


 1848 02ce 0323     		movs	r3, #3
 1849 02d0 B4E6     		b	.L128
 1850              	.L160:
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         goto error;
 1851              		.loc 1 1419 0
 1852 02d2 0323     		movs	r3, #3
 1853 02d4 B2E6     		b	.L128
 1854              	.L165:
 1855 02d6 0323     		movs	r3, #3
 1856 02d8 B0E6     		b	.L128
 1857              		.cfi_endproc
 1858              	.LFE147:
 1860              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1861              		.align	1
 1862              		.global	HAL_SPI_Receive
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu fpv5-d16
 1868              	HAL_SPI_Receive:
 1869              	.LFB146:
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 1870              		.loc 1 973 0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              	.LVL121:
 1875 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1876              	.LCFI25:
 1877              		.cfi_def_cfa_offset 24
 1878              		.cfi_offset 4, -24
 1879              		.cfi_offset 5, -20
 1880              		.cfi_offset 6, -16
 1881              		.cfi_offset 7, -12
 1882              		.cfi_offset 8, -8
 1883              		.cfi_offset 14, -4
 1884 0004 82B0     		sub	sp, sp, #8
 1885              	.LCFI26:
 1886              		.cfi_def_cfa_offset 32
 1887 0006 0446     		mov	r4, r0
 1888 0008 0F46     		mov	r7, r1
 1889 000a 9046     		mov	r8, r2
 1890 000c 1D46     		mov	r5, r3
 1891              	.LVL122:
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1892              		.loc 1 977 0
 1893 000e 4368     		ldr	r3, [r0, #4]
 1894              	.LVL123:
 1895 0010 B3F5827F 		cmp	r3, #260
 1896 0014 07D0     		beq	.L197
 1897              	.L169:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1898              		.loc 1 985 0
 1899 0016 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1900 001a 012B     		cmp	r3, #1
 1901 001c 0FD1     		bne	.L198
 1902 001e 0220     		movs	r0, #2
ARM GAS  /tmp/ccQwr80L.s 			page 113


 1903              	.LVL124:
 1904              	.L170:
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1905              		.loc 1 1185 0
 1906 0020 02B0     		add	sp, sp, #8
 1907              	.LCFI27:
 1908              		.cfi_remember_state
 1909              		.cfi_def_cfa_offset 24
 1910              		@ sp needed
 1911 0022 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1912              	.LVL125:
 1913              	.L197:
 1914              	.LCFI28:
 1915              		.cfi_restore_state
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1916              		.loc 1 977 0 discriminator 1
 1917 0026 8368     		ldr	r3, [r0, #8]
 1918 0028 002B     		cmp	r3, #0
 1919 002a F4D1     		bne	.L169
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 1920              		.loc 1 979 0
 1921 002c 0423     		movs	r3, #4
 1922 002e 80F85D30 		strb	r3, [r0, #93]
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1923              		.loc 1 981 0
 1924 0032 0095     		str	r5, [sp]
 1925 0034 1346     		mov	r3, r2
 1926 0036 0A46     		mov	r2, r1
 1927              	.LVL126:
 1928 0038 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1929              	.LVL127:
 1930 003c F0E7     		b	.L170
 1931              	.LVL128:
 1932              	.L198:
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1933              		.loc 1 985 0 discriminator 2
 1934 003e 0123     		movs	r3, #1
 1935 0040 84F85C30 		strb	r3, [r4, #92]
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1936              		.loc 1 988 0 discriminator 2
 1937 0044 FFF7FEFF 		bl	HAL_GetTick
 1938              	.LVL129:
 1939 0048 0646     		mov	r6, r0
 1940              	.LVL130:
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1941              		.loc 1 990 0 discriminator 2
 1942 004a 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 1943 004e DBB2     		uxtb	r3, r3
 1944 0050 012B     		cmp	r3, #1
 1945 0052 07D0     		beq	.L199
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 1946              		.loc 1 992 0
 1947 0054 0220     		movs	r0, #2
 1948              	.LVL131:
 1949              	.L171:
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1950              		.loc 1 1182 0
ARM GAS  /tmp/ccQwr80L.s 			page 114


 1951 0056 0123     		movs	r3, #1
 1952 0058 84F85D30 		strb	r3, [r4, #93]
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 1953              		.loc 1 1183 0
 1954 005c 0023     		movs	r3, #0
 1955 005e 84F85C30 		strb	r3, [r4, #92]
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 1956              		.loc 1 1184 0
 1957 0062 DDE7     		b	.L170
 1958              	.LVL132:
 1959              	.L199:
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1960              		.loc 1 996 0
 1961 0064 B8F1000F 		cmp	r8, #0
 1962 0068 18BF     		it	ne
 1963 006a 002F     		cmpne	r7, #0
 1964 006c 00F08480 		beq	.L190
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1965              		.loc 1 1003 0
 1966 0070 0423     		movs	r3, #4
 1967 0072 84F85D30 		strb	r3, [r4, #93]
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 1968              		.loc 1 1004 0
 1969 0076 0023     		movs	r3, #0
 1970 0078 2366     		str	r3, [r4, #96]
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1971              		.loc 1 1005 0
 1972 007a 2764     		str	r7, [r4, #64]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1973              		.loc 1 1006 0
 1974 007c A4F84480 		strh	r8, [r4, #68]	@ movhi
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1975              		.loc 1 1007 0
 1976 0080 A4F84680 		strh	r8, [r4, #70]	@ movhi
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 1977              		.loc 1 1010 0
 1978 0084 A363     		str	r3, [r4, #56]
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 1979              		.loc 1 1011 0
 1980 0086 A387     		strh	r3, [r4, #60]	@ movhi
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1981              		.loc 1 1012 0
 1982 0088 E387     		strh	r3, [r4, #62]	@ movhi
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1983              		.loc 1 1013 0
 1984 008a E364     		str	r3, [r4, #76]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 1985              		.loc 1 1014 0
 1986 008c 2365     		str	r3, [r4, #80]
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1987              		.loc 1 1027 0
 1988 008e E368     		ldr	r3, [r4, #12]
 1989 0090 B3F5E06F 		cmp	r3, #1792
 1990 0094 16D9     		bls	.L172
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 1991              		.loc 1 1030 0
 1992 0096 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccQwr80L.s 			page 115


 1993 0098 5368     		ldr	r3, [r2, #4]
 1994 009a 23F48053 		bic	r3, r3, #4096
 1995 009e 5360     		str	r3, [r2, #4]
 1996              	.L173:
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 1997              		.loc 1 1039 0
 1998 00a0 A368     		ldr	r3, [r4, #8]
 1999 00a2 B3F5004F 		cmp	r3, #32768
 2000 00a6 13D0     		beq	.L200
 2001              	.L174:
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2002              		.loc 1 1045 0
 2003 00a8 2368     		ldr	r3, [r4]
 2004 00aa 1A68     		ldr	r2, [r3]
 2005 00ac 12F0400F 		tst	r2, #64
 2006 00b0 03D1     		bne	.L175
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2007              		.loc 1 1048 0
 2008 00b2 1A68     		ldr	r2, [r3]
 2009 00b4 42F04002 		orr	r2, r2, #64
 2010 00b8 1A60     		str	r2, [r3]
 2011              	.L175:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2012              		.loc 1 1052 0
 2013 00ba E368     		ldr	r3, [r4, #12]
 2014 00bc B3F5E06F 		cmp	r3, #1792
 2015 00c0 16D9     		bls	.L176
 2016 00c2 36E0     		b	.L177
 2017              	.L172:
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2018              		.loc 1 1035 0
 2019 00c4 2268     		ldr	r2, [r4]
 2020 00c6 5368     		ldr	r3, [r2, #4]
 2021 00c8 43F48053 		orr	r3, r3, #4096
 2022 00cc 5360     		str	r3, [r2, #4]
 2023 00ce E7E7     		b	.L173
 2024              	.L200:
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2025              		.loc 1 1041 0
 2026 00d0 2268     		ldr	r2, [r4]
 2027 00d2 1368     		ldr	r3, [r2]
 2028 00d4 23F48043 		bic	r3, r3, #16384
 2029 00d8 1360     		str	r3, [r2]
 2030 00da E5E7     		b	.L174
 2031              	.LVL133:
 2032              	.L178:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2033              		.loc 1 1068 0
 2034 00dc FFF7FEFF 		bl	HAL_GetTick
 2035              	.LVL134:
 2036 00e0 801B     		subs	r0, r0, r6
 2037 00e2 8542     		cmp	r5, r0
 2038 00e4 02D8     		bhi	.L180
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2039              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2040 00e6 B5F1FF3F 		cmp	r5, #-1
 2041 00ea 47D1     		bne	.L191
ARM GAS  /tmp/ccQwr80L.s 			page 116


 2042              	.L180:
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2043              		.loc 1 1068 0 discriminator 3
 2044 00ec 002D     		cmp	r5, #0
 2045 00ee 47D0     		beq	.L192
 2046              	.L176:
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2047              		.loc 1 1055 0 is_stmt 1
 2048 00f0 B4F84630 		ldrh	r3, [r4, #70]
 2049 00f4 9BB2     		uxth	r3, r3
 2050 00f6 002B     		cmp	r3, #0
 2051 00f8 32D0     		beq	.L182
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 2052              		.loc 1 1058 0
 2053 00fa 2368     		ldr	r3, [r4]
 2054 00fc 9A68     		ldr	r2, [r3, #8]
 2055 00fe 12F0010F 		tst	r2, #1
 2056 0102 EBD0     		beq	.L178
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 2057              		.loc 1 1061 0
 2058 0104 226C     		ldr	r2, [r4, #64]
 2059 0106 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2060 0108 1370     		strb	r3, [r2]
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 2061              		.loc 1 1062 0
 2062 010a 236C     		ldr	r3, [r4, #64]
 2063 010c 0133     		adds	r3, r3, #1
 2064 010e 2364     		str	r3, [r4, #64]
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 2065              		.loc 1 1063 0
 2066 0110 B4F84630 		ldrh	r3, [r4, #70]
 2067 0114 9BB2     		uxth	r3, r3
 2068 0116 013B     		subs	r3, r3, #1
 2069 0118 9BB2     		uxth	r3, r3
 2070 011a A4F84630 		strh	r3, [r4, #70]	@ movhi
 2071 011e E7E7     		b	.L176
 2072              	.L183:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2073              		.loc 1 1091 0
 2074 0120 FFF7FEFF 		bl	HAL_GetTick
 2075              	.LVL135:
 2076 0124 801B     		subs	r0, r0, r6
 2077 0126 8542     		cmp	r5, r0
 2078 0128 02D8     		bhi	.L185
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2079              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2080 012a B5F1FF3F 		cmp	r5, #-1
 2081 012e 29D1     		bne	.L193
 2082              	.L185:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 2083              		.loc 1 1091 0 discriminator 3
 2084 0130 55B3     		cbz	r5, .L194
 2085              	.L177:
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2086              		.loc 1 1079 0 is_stmt 1
 2087 0132 B4F84630 		ldrh	r3, [r4, #70]
 2088 0136 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccQwr80L.s 			page 117


 2089 0138 93B1     		cbz	r3, .L182
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 2090              		.loc 1 1082 0
 2091 013a 2368     		ldr	r3, [r4]
 2092 013c 9A68     		ldr	r2, [r3, #8]
 2093 013e 12F0010F 		tst	r2, #1
 2094 0142 EDD0     		beq	.L183
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 2095              		.loc 1 1084 0
 2096 0144 226C     		ldr	r2, [r4, #64]
 2097 0146 DB68     		ldr	r3, [r3, #12]
 2098 0148 1380     		strh	r3, [r2]	@ movhi
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount--;
 2099              		.loc 1 1085 0
 2100 014a 236C     		ldr	r3, [r4, #64]
 2101 014c 0233     		adds	r3, r3, #2
 2102 014e 2364     		str	r3, [r4, #64]
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 2103              		.loc 1 1086 0
 2104 0150 B4F84630 		ldrh	r3, [r4, #70]
 2105 0154 9BB2     		uxth	r3, r3
 2106 0156 013B     		subs	r3, r3, #1
 2107 0158 9BB2     		uxth	r3, r3
 2108 015a A4F84630 		strh	r3, [r4, #70]	@ movhi
 2109 015e E8E7     		b	.L177
 2110              	.L182:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2111              		.loc 1 1162 0
 2112 0160 3246     		mov	r2, r6
 2113 0162 2946     		mov	r1, r5
 2114 0164 2046     		mov	r0, r4
 2115 0166 FFF7FEFF 		bl	SPI_EndRxTransaction
 2116              	.LVL136:
 2117 016a 08B1     		cbz	r0, .L187
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2118              		.loc 1 1164 0
 2119 016c 2023     		movs	r3, #32
 2120 016e 2366     		str	r3, [r4, #96]
 2121              	.L187:
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2122              		.loc 1 1176 0
 2123 0170 236E     		ldr	r3, [r4, #96]
 2124 0172 5BB9     		cbnz	r3, .L195
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2125              		.loc 1 975 0
 2126 0174 0020     		movs	r0, #0
 2127 0176 6EE7     		b	.L171
 2128              	.LVL137:
 2129              	.L190:
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2130              		.loc 1 998 0
 2131 0178 0120     		movs	r0, #1
 2132              	.LVL138:
 2133 017a 6CE7     		b	.L171
 2134              	.L191:
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 2135              		.loc 1 1070 0
ARM GAS  /tmp/ccQwr80L.s 			page 118


 2136 017c 0320     		movs	r0, #3
 2137 017e 6AE7     		b	.L171
 2138              	.L192:
 2139 0180 0320     		movs	r0, #3
 2140 0182 68E7     		b	.L171
 2141              	.L193:
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           goto error;
 2142              		.loc 1 1093 0
 2143 0184 0320     		movs	r0, #3
 2144 0186 66E7     		b	.L171
 2145              	.L194:
 2146 0188 0320     		movs	r0, #3
 2147 018a 64E7     		b	.L171
 2148              	.L195:
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2149              		.loc 1 1178 0
 2150 018c 0120     		movs	r0, #1
 2151 018e 62E7     		b	.L171
 2152              		.cfi_endproc
 2153              	.LFE146:
 2155              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 2156              		.align	1
 2157              		.global	HAL_SPI_Transmit_IT
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2161              		.fpu fpv5-d16
 2163              	HAL_SPI_Transmit_IT:
 2164              	.LFB148:
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2165              		.loc 1 1496 0
 2166              		.cfi_startproc
 2167              		@ args = 0, pretend = 0, frame = 0
 2168              		@ frame_needed = 0, uses_anonymous_args = 0
 2169              		@ link register save eliminated.
 2170              	.LVL139:
 2171 0000 0346     		mov	r3, r0
 2172              	.LVL140:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2173              		.loc 1 1503 0
 2174 0002 90F85C00 		ldrb	r0, [r0, #92]	@ zero_extendqisi2
 2175              	.LVL141:
 2176 0006 0128     		cmp	r0, #1
 2177 0008 45D0     		beq	.L207
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2178              		.loc 1 1503 0 is_stmt 0 discriminator 2
 2179 000a 0120     		movs	r0, #1
 2180 000c 83F85C00 		strb	r0, [r3, #92]
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2181              		.loc 1 1505 0 is_stmt 1 discriminator 2
 2182 0010 002A     		cmp	r2, #0
 2183 0012 18BF     		it	ne
 2184 0014 0029     		cmpne	r1, #0
 2185 0016 37D0     		beq	.L208
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2186              		.loc 1 1511 0
 2187 0018 93F85D00 		ldrb	r0, [r3, #93]	@ zero_extendqisi2
ARM GAS  /tmp/ccQwr80L.s 			page 119


 2188 001c C0B2     		uxtb	r0, r0
 2189 001e 0128     		cmp	r0, #1
 2190 0020 01D0     		beq	.L211
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2191              		.loc 1 1513 0
 2192 0022 0220     		movs	r0, #2
 2193 0024 31E0     		b	.L203
 2194              	.L211:
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2195              		.loc 1 1518 0
 2196 0026 0320     		movs	r0, #3
 2197 0028 83F85D00 		strb	r0, [r3, #93]
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2198              		.loc 1 1519 0
 2199 002c 0020     		movs	r0, #0
 2200 002e 1866     		str	r0, [r3, #96]
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2201              		.loc 1 1520 0
 2202 0030 9963     		str	r1, [r3, #56]
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2203              		.loc 1 1521 0
 2204 0032 9A87     		strh	r2, [r3, #60]	@ movhi
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2205              		.loc 1 1522 0
 2206 0034 DA87     		strh	r2, [r3, #62]	@ movhi
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2207              		.loc 1 1525 0
 2208 0036 1864     		str	r0, [r3, #64]
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2209              		.loc 1 1526 0
 2210 0038 A3F84400 		strh	r0, [r3, #68]	@ movhi
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2211              		.loc 1 1527 0
 2212 003c A3F84600 		strh	r0, [r3, #70]	@ movhi
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2213              		.loc 1 1528 0
 2214 0040 D864     		str	r0, [r3, #76]
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2215              		.loc 1 1531 0
 2216 0042 DA68     		ldr	r2, [r3, #12]
 2217              	.LVL142:
 2218 0044 B2F5E06F 		cmp	r2, #1792
 2219 0048 15D9     		bls	.L204
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2220              		.loc 1 1533 0
 2221 004a 144A     		ldr	r2, .L213
 2222 004c 1A65     		str	r2, [r3, #80]
 2223              	.L205:
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2224              		.loc 1 1541 0
 2225 004e 9A68     		ldr	r2, [r3, #8]
 2226 0050 B2F5004F 		cmp	r2, #32768
 2227 0054 12D0     		beq	.L212
 2228              	.LVL143:
 2229              	.L206:
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2230              		.loc 1 1555 0
ARM GAS  /tmp/ccQwr80L.s 			page 120


 2231 0056 1968     		ldr	r1, [r3]
 2232 0058 4A68     		ldr	r2, [r1, #4]
 2233 005a 42F0A002 		orr	r2, r2, #160
 2234 005e 4A60     		str	r2, [r1, #4]
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2235              		.loc 1 1559 0
 2236 0060 1A68     		ldr	r2, [r3]
 2237 0062 1168     		ldr	r1, [r2]
 2238 0064 11F0400F 		tst	r1, #64
 2239 0068 13D1     		bne	.L210
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2240              		.loc 1 1562 0
 2241 006a 1168     		ldr	r1, [r2]
 2242 006c 41F04001 		orr	r1, r1, #64
 2243 0070 1160     		str	r1, [r2]
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2244              		.loc 1 1497 0
 2245 0072 0020     		movs	r0, #0
 2246 0074 09E0     		b	.L203
 2247              	.LVL144:
 2248              	.L204:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2249              		.loc 1 1537 0
 2250 0076 0A4A     		ldr	r2, .L213+4
 2251 0078 1A65     		str	r2, [r3, #80]
 2252 007a E8E7     		b	.L205
 2253              	.L212:
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2254              		.loc 1 1543 0
 2255 007c 1968     		ldr	r1, [r3]
 2256              	.LVL145:
 2257 007e 0A68     		ldr	r2, [r1]
 2258 0080 42F48042 		orr	r2, r2, #16384
 2259 0084 0A60     		str	r2, [r1]
 2260              	.LVL146:
 2261 0086 E6E7     		b	.L206
 2262              	.LVL147:
 2263              	.L208:
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2264              		.loc 1 1507 0
 2265 0088 0120     		movs	r0, #1
 2266              	.LVL148:
 2267              	.L203:
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2268              		.loc 1 1566 0
 2269 008a 0022     		movs	r2, #0
 2270 008c 83F85C20 		strb	r2, [r3, #92]
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2271              		.loc 1 1567 0
 2272 0090 7047     		bx	lr
 2273              	.LVL149:
 2274              	.L210:
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2275              		.loc 1 1497 0
 2276 0092 0020     		movs	r0, #0
 2277 0094 F9E7     		b	.L203
 2278              	.LVL150:
ARM GAS  /tmp/ccQwr80L.s 			page 121


 2279              	.L207:
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2280              		.loc 1 1503 0
 2281 0096 0220     		movs	r0, #2
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2282              		.loc 1 1568 0
 2283 0098 7047     		bx	lr
 2284              	.L214:
 2285 009a 00BF     		.align	2
 2286              	.L213:
 2287 009c 00000000 		.word	SPI_TxISR_16BIT
 2288 00a0 00000000 		.word	SPI_TxISR_8BIT
 2289              		.cfi_endproc
 2290              	.LFE148:
 2292              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2293              		.align	1
 2294              		.global	HAL_SPI_TransmitReceive_IT
 2295              		.syntax unified
 2296              		.thumb
 2297              		.thumb_func
 2298              		.fpu fpv5-d16
 2300              	HAL_SPI_TransmitReceive_IT:
 2301              	.LFB150:
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
 2302              		.loc 1 1684 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 0, uses_anonymous_args = 0
 2306              		@ link register save eliminated.
 2307              	.LVL151:
 2308 0000 30B4     		push	{r4, r5}
 2309              	.LCFI29:
 2310              		.cfi_def_cfa_offset 8
 2311              		.cfi_offset 4, -8
 2312              		.cfi_offset 5, -4
 2313              	.LVL152:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2314              		.loc 1 1693 0
 2315 0002 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 2316 0006 012C     		cmp	r4, #1
 2317 0008 67D0     		beq	.L225
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2318              		.loc 1 1693 0 is_stmt 0 discriminator 2
 2319 000a 0124     		movs	r4, #1
 2320 000c 80F85C40 		strb	r4, [r0, #92]
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2321              		.loc 1 1696 0 is_stmt 1 discriminator 2
 2322 0010 90F85D40 		ldrb	r4, [r0, #93]	@ zero_extendqisi2
 2323 0014 E4B2     		uxtb	r4, r4
 2324              	.LVL153:
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2325              		.loc 1 1697 0 discriminator 2
 2326 0016 4568     		ldr	r5, [r0, #4]
 2327              	.LVL154:
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2328              		.loc 1 1699 0 discriminator 2
 2329 0018 012C     		cmp	r4, #1
ARM GAS  /tmp/ccQwr80L.s 			page 122


 2330 001a 10D0     		beq	.L217
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2331              		.loc 1 1699 0 is_stmt 0 discriminator 1
 2332 001c B5F5827F 		cmp	r5, #260
 2333 0020 06D0     		beq	.L233
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2334              		.loc 1 1702 0 is_stmt 1
 2335 0022 0223     		movs	r3, #2
 2336              	.LVL155:
 2337              	.L218:
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2338              		.loc 1 1780 0
 2339 0024 0022     		movs	r2, #0
 2340 0026 80F85C20 		strb	r2, [r0, #92]
 2341              	.LVL156:
 2342              	.L216:
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2343              		.loc 1 1782 0
 2344 002a 1846     		mov	r0, r3
 2345              	.LVL157:
 2346 002c 30BC     		pop	{r4, r5}
 2347              	.LCFI30:
 2348              		.cfi_remember_state
 2349              		.cfi_restore 5
 2350              		.cfi_restore 4
 2351              		.cfi_def_cfa_offset 0
 2352 002e 7047     		bx	lr
 2353              	.LVL158:
 2354              	.L233:
 2355              	.LCFI31:
 2356              		.cfi_restore_state
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2357              		.loc 1 1700 0
 2358 0030 8568     		ldr	r5, [r0, #8]
 2359              	.LVL159:
 2360 0032 002D     		cmp	r5, #0
 2361 0034 49D1     		bne	.L227
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2362              		.loc 1 1700 0 is_stmt 0 discriminator 1
 2363 0036 042C     		cmp	r4, #4
 2364 0038 01D0     		beq	.L217
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2365              		.loc 1 1702 0 is_stmt 1
 2366 003a 0223     		movs	r3, #2
 2367              	.LVL160:
 2368 003c F2E7     		b	.L218
 2369              	.LVL161:
 2370              	.L217:
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2371              		.loc 1 1706 0
 2372 003e 002A     		cmp	r2, #0
 2373 0040 18BF     		it	ne
 2374 0042 0029     		cmpne	r1, #0
 2375 0044 43D0     		beq	.L229
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2376              		.loc 1 1706 0 is_stmt 0 discriminator 1
 2377 0046 002B     		cmp	r3, #0
ARM GAS  /tmp/ccQwr80L.s 			page 123


 2378 0048 43D0     		beq	.L230
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2379              		.loc 1 1713 0 is_stmt 1
 2380 004a 90F85D40 		ldrb	r4, [r0, #93]	@ zero_extendqisi2
 2381              	.LVL162:
 2382 004e E4B2     		uxtb	r4, r4
 2383 0050 042C     		cmp	r4, #4
 2384 0052 02D0     		beq	.L219
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2385              		.loc 1 1715 0
 2386 0054 0524     		movs	r4, #5
 2387 0056 80F85D40 		strb	r4, [r0, #93]
 2388              	.L219:
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2389              		.loc 1 1719 0
 2390 005a 0024     		movs	r4, #0
 2391 005c 0466     		str	r4, [r0, #96]
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2392              		.loc 1 1720 0
 2393 005e 8163     		str	r1, [r0, #56]
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2394              		.loc 1 1721 0
 2395 0060 8387     		strh	r3, [r0, #60]	@ movhi
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2396              		.loc 1 1722 0
 2397 0062 C387     		strh	r3, [r0, #62]	@ movhi
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2398              		.loc 1 1723 0
 2399 0064 0264     		str	r2, [r0, #64]
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2400              		.loc 1 1724 0
 2401 0066 A0F84430 		strh	r3, [r0, #68]	@ movhi
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2402              		.loc 1 1725 0
 2403 006a A0F84630 		strh	r3, [r0, #70]	@ movhi
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2404              		.loc 1 1728 0
 2405 006e C268     		ldr	r2, [r0, #12]
 2406              	.LVL163:
 2407 0070 B2F5E06F 		cmp	r2, #1792
 2408 0074 1ED9     		bls	.L220
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2409              		.loc 1 1730 0
 2410 0076 1A4A     		ldr	r2, .L234
 2411 0078 C264     		str	r2, [r0, #76]
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2412              		.loc 1 1731 0
 2413 007a 1A4A     		ldr	r2, .L234+4
 2414 007c 0265     		str	r2, [r0, #80]
 2415              	.L221:
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2416              		.loc 1 1757 0
 2417 007e C268     		ldr	r2, [r0, #12]
 2418 0080 B2F5E06F 		cmp	r2, #1792
 2419 0084 01D8     		bhi	.L222
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2420              		.loc 1 1757 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccQwr80L.s 			page 124


 2421 0086 012B     		cmp	r3, #1
 2422 0088 19D9     		bls	.L223
 2423              	.L222:
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2424              		.loc 1 1760 0 is_stmt 1
 2425 008a 0268     		ldr	r2, [r0]
 2426 008c 5368     		ldr	r3, [r2, #4]
 2427              	.LVL164:
 2428 008e 23F48053 		bic	r3, r3, #4096
 2429 0092 5360     		str	r3, [r2, #4]
 2430              	.LVL165:
 2431              	.L224:
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2432              		.loc 1 1769 0
 2433 0094 0268     		ldr	r2, [r0]
 2434 0096 5368     		ldr	r3, [r2, #4]
 2435 0098 43F0E003 		orr	r3, r3, #224
 2436 009c 5360     		str	r3, [r2, #4]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2437              		.loc 1 1772 0
 2438 009e 0368     		ldr	r3, [r0]
 2439 00a0 1A68     		ldr	r2, [r3]
 2440 00a2 12F0400F 		tst	r2, #64
 2441 00a6 16D1     		bne	.L231
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2442              		.loc 1 1775 0
 2443 00a8 1A68     		ldr	r2, [r3]
 2444 00aa 42F04002 		orr	r2, r2, #64
 2445 00ae 1A60     		str	r2, [r3]
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2446              		.loc 1 1687 0
 2447 00b0 0023     		movs	r3, #0
 2448 00b2 B7E7     		b	.L218
 2449              	.LVL166:
 2450              	.L220:
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
 2451              		.loc 1 1735 0
 2452 00b4 0C4A     		ldr	r2, .L234+8
 2453 00b6 C264     		str	r2, [r0, #76]
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2454              		.loc 1 1736 0
 2455 00b8 0C4A     		ldr	r2, .L234+12
 2456 00ba 0265     		str	r2, [r0, #80]
 2457 00bc DFE7     		b	.L221
 2458              	.L223:
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2459              		.loc 1 1765 0
 2460 00be 0268     		ldr	r2, [r0]
 2461 00c0 5368     		ldr	r3, [r2, #4]
 2462              	.LVL167:
 2463 00c2 43F48053 		orr	r3, r3, #4096
 2464 00c6 5360     		str	r3, [r2, #4]
 2465              	.LVL168:
 2466 00c8 E4E7     		b	.L224
 2467              	.LVL169:
 2468              	.L227:
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccQwr80L.s 			page 125


 2469              		.loc 1 1702 0
 2470 00ca 0223     		movs	r3, #2
 2471              	.LVL170:
 2472 00cc AAE7     		b	.L218
 2473              	.LVL171:
 2474              	.L229:
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2475              		.loc 1 1708 0
 2476 00ce 0123     		movs	r3, #1
 2477              	.LVL172:
 2478 00d0 A8E7     		b	.L218
 2479              	.LVL173:
 2480              	.L230:
 2481 00d2 0123     		movs	r3, #1
 2482              	.LVL174:
 2483 00d4 A6E7     		b	.L218
 2484              	.LVL175:
 2485              	.L231:
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2486              		.loc 1 1687 0
 2487 00d6 0023     		movs	r3, #0
 2488 00d8 A4E7     		b	.L218
 2489              	.LVL176:
 2490              	.L225:
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2491              		.loc 1 1693 0
 2492 00da 0223     		movs	r3, #2
 2493              	.LVL177:
 2494 00dc A5E7     		b	.L216
 2495              	.L235:
 2496 00de 00BF     		.align	2
 2497              	.L234:
 2498 00e0 00000000 		.word	SPI_2linesRxISR_16BIT
 2499 00e4 00000000 		.word	SPI_2linesTxISR_16BIT
 2500 00e8 00000000 		.word	SPI_2linesRxISR_8BIT
 2501 00ec 00000000 		.word	SPI_2linesTxISR_8BIT
 2502              		.cfi_endproc
 2503              	.LFE150:
 2505              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2506              		.align	1
 2507              		.global	HAL_SPI_Receive_IT
 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2511              		.fpu fpv5-d16
 2513              	HAL_SPI_Receive_IT:
 2514              	.LFB149:
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2515              		.loc 1 1579 0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 0
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
 2519              	.LVL178:
 2520 0000 10B5     		push	{r4, lr}
 2521              	.LCFI32:
 2522              		.cfi_def_cfa_offset 8
 2523              		.cfi_offset 4, -8
ARM GAS  /tmp/ccQwr80L.s 			page 126


 2524              		.cfi_offset 14, -4
 2525 0002 0446     		mov	r4, r0
 2526              	.LVL179:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2527              		.loc 1 1582 0
 2528 0004 8068     		ldr	r0, [r0, #8]
 2529              	.LVL180:
 2530 0006 18B9     		cbnz	r0, .L237
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2531              		.loc 1 1582 0 is_stmt 0 discriminator 1
 2532 0008 6368     		ldr	r3, [r4, #4]
 2533 000a B3F5827F 		cmp	r3, #260
 2534 000e 10D0     		beq	.L248
 2535              	.L237:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2536              		.loc 1 1590 0 is_stmt 1
 2537 0010 94F85C00 		ldrb	r0, [r4, #92]	@ zero_extendqisi2
 2538 0014 0128     		cmp	r0, #1
 2539 0016 58D0     		beq	.L243
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2540              		.loc 1 1590 0 is_stmt 0 discriminator 2
 2541 0018 0123     		movs	r3, #1
 2542 001a 84F85C30 		strb	r3, [r4, #92]
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2543              		.loc 1 1592 0 is_stmt 1 discriminator 2
 2544 001e 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2545 0022 C0B2     		uxtb	r0, r0
 2546 0024 9842     		cmp	r0, r3
 2547 0026 0DD0     		beq	.L249
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2548              		.loc 1 1594 0
 2549 0028 0220     		movs	r0, #2
 2550              	.LVL181:
 2551              	.L239:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2552              		.loc 1 1670 0
 2553 002a 0023     		movs	r3, #0
 2554 002c 84F85C30 		strb	r3, [r4, #92]
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 2555              		.loc 1 1671 0
 2556 0030 10BD     		pop	{r4, pc}
 2557              	.LVL182:
 2558              	.L248:
 2559 0032 1346     		mov	r3, r2
 2560 0034 2046     		mov	r0, r4
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 2561              		.loc 1 1584 0
 2562 0036 0422     		movs	r2, #4
 2563              	.LVL183:
 2564 0038 84F85D20 		strb	r2, [r4, #93]
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2565              		.loc 1 1586 0
 2566 003c 0A46     		mov	r2, r1
 2567 003e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2568              	.LVL184:
 2569 0042 10BD     		pop	{r4, pc}
 2570              	.LVL185:
ARM GAS  /tmp/ccQwr80L.s 			page 127


 2571              	.L249:
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2572              		.loc 1 1598 0
 2573 0044 002A     		cmp	r2, #0
 2574 0046 18BF     		it	ne
 2575 0048 0029     		cmpne	r1, #0
 2576 004a 3AD0     		beq	.L245
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2577              		.loc 1 1605 0
 2578 004c 0423     		movs	r3, #4
 2579 004e 84F85D30 		strb	r3, [r4, #93]
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2580              		.loc 1 1606 0
 2581 0052 0023     		movs	r3, #0
 2582 0054 2366     		str	r3, [r4, #96]
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2583              		.loc 1 1607 0
 2584 0056 2164     		str	r1, [r4, #64]
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2585              		.loc 1 1608 0
 2586 0058 A4F84420 		strh	r2, [r4, #68]	@ movhi
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2587              		.loc 1 1609 0
 2588 005c A4F84620 		strh	r2, [r4, #70]	@ movhi
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2589              		.loc 1 1612 0
 2590 0060 A363     		str	r3, [r4, #56]
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2591              		.loc 1 1613 0
 2592 0062 A387     		strh	r3, [r4, #60]	@ movhi
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2593              		.loc 1 1614 0
 2594 0064 E387     		strh	r3, [r4, #62]	@ movhi
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2595              		.loc 1 1615 0
 2596 0066 2365     		str	r3, [r4, #80]
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2597              		.loc 1 1618 0
 2598 0068 E368     		ldr	r3, [r4, #12]
 2599 006a B3F5E06F 		cmp	r3, #1792
 2600 006e 1AD9     		bls	.L240
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2601              		.loc 1 1621 0
 2602 0070 2268     		ldr	r2, [r4]
 2603              	.LVL186:
 2604 0072 5368     		ldr	r3, [r2, #4]
 2605 0074 23F48053 		bic	r3, r3, #4096
 2606 0078 5360     		str	r3, [r2, #4]
 2607              	.LVL187:
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2608              		.loc 1 1622 0
 2609 007a 154B     		ldr	r3, .L251
 2610 007c E364     		str	r3, [r4, #76]
 2611              	.L241:
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2612              		.loc 1 1632 0
 2613 007e A368     		ldr	r3, [r4, #8]
ARM GAS  /tmp/ccQwr80L.s 			page 128


 2614 0080 B3F5004F 		cmp	r3, #32768
 2615 0084 17D0     		beq	.L250
 2616              	.L242:
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2617              		.loc 1 1655 0
 2618 0086 2268     		ldr	r2, [r4]
 2619 0088 5368     		ldr	r3, [r2, #4]
 2620 008a 43F06003 		orr	r3, r3, #96
 2621 008e 5360     		str	r3, [r2, #4]
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2622              		.loc 1 1662 0
 2623 0090 2368     		ldr	r3, [r4]
 2624 0092 1A68     		ldr	r2, [r3]
 2625 0094 12F0400F 		tst	r2, #64
 2626 0098 15D1     		bne	.L246
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2627              		.loc 1 1665 0
 2628 009a 1A68     		ldr	r2, [r3]
 2629 009c 42F04002 		orr	r2, r2, #64
 2630 00a0 1A60     		str	r2, [r3]
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2631              		.loc 1 1580 0
 2632 00a2 0020     		movs	r0, #0
 2633 00a4 C1E7     		b	.L239
 2634              	.LVL188:
 2635              	.L240:
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2636              		.loc 1 1627 0
 2637 00a6 2268     		ldr	r2, [r4]
 2638              	.LVL189:
 2639 00a8 5368     		ldr	r3, [r2, #4]
 2640 00aa 43F48053 		orr	r3, r3, #4096
 2641 00ae 5360     		str	r3, [r2, #4]
 2642              	.LVL190:
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2643              		.loc 1 1628 0
 2644 00b0 084B     		ldr	r3, .L251+4
 2645 00b2 E364     		str	r3, [r4, #76]
 2646 00b4 E3E7     		b	.L241
 2647              	.L250:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2648              		.loc 1 1634 0
 2649 00b6 2268     		ldr	r2, [r4]
 2650 00b8 1368     		ldr	r3, [r2]
 2651 00ba 23F48043 		bic	r3, r3, #16384
 2652 00be 1360     		str	r3, [r2]
 2653 00c0 E1E7     		b	.L242
 2654              	.LVL191:
 2655              	.L245:
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2656              		.loc 1 1600 0
 2657 00c2 0120     		movs	r0, #1
 2658 00c4 B1E7     		b	.L239
 2659              	.LVL192:
 2660              	.L246:
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2661              		.loc 1 1580 0
ARM GAS  /tmp/ccQwr80L.s 			page 129


 2662 00c6 0020     		movs	r0, #0
 2663 00c8 AFE7     		b	.L239
 2664              	.LVL193:
 2665              	.L243:
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2666              		.loc 1 1590 0
 2667 00ca 0220     		movs	r0, #2
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2668              		.loc 1 1672 0
 2669 00cc 10BD     		pop	{r4, pc}
 2670              	.LVL194:
 2671              	.L252:
 2672 00ce 00BF     		.align	2
 2673              	.L251:
 2674 00d0 00000000 		.word	SPI_RxISR_16BIT
 2675 00d4 00000000 		.word	SPI_RxISR_8BIT
 2676              		.cfi_endproc
 2677              	.LFE149:
 2679              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2680              		.align	1
 2681              		.global	HAL_SPI_Transmit_DMA
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2685              		.fpu fpv5-d16
 2687              	HAL_SPI_Transmit_DMA:
 2688              	.LFB151:
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2689              		.loc 1 1793 0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 0
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 2693              	.LVL195:
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2694              		.loc 1 1803 0
 2695 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 2696 0004 012B     		cmp	r3, #1
 2697 0006 00F08880 		beq	.L261
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 2698              		.loc 1 1793 0 discriminator 2
 2699 000a 10B5     		push	{r4, lr}
 2700              	.LCFI33:
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 4, -8
 2703              		.cfi_offset 14, -4
 2704 000c 0446     		mov	r4, r0
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2705              		.loc 1 1803 0 discriminator 2
 2706 000e 0123     		movs	r3, #1
 2707 0010 80F85C30 		strb	r3, [r0, #92]
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2708              		.loc 1 1805 0 discriminator 2
 2709 0014 90F85D30 		ldrb	r3, [r0, #93]	@ zero_extendqisi2
 2710 0018 DBB2     		uxtb	r3, r3
 2711 001a 012B     		cmp	r3, #1
 2712 001c 05D0     		beq	.L268
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
ARM GAS  /tmp/ccQwr80L.s 			page 130


 2713              		.loc 1 1807 0
 2714 001e 0223     		movs	r3, #2
 2715              	.LVL196:
 2716              	.L255:
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2717              		.loc 1 1900 0
 2718 0020 0022     		movs	r2, #0
 2719 0022 84F85C20 		strb	r2, [r4, #92]
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2720              		.loc 1 1902 0
 2721 0026 1846     		mov	r0, r3
 2722 0028 10BD     		pop	{r4, pc}
 2723              	.LVL197:
 2724              	.L268:
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2725              		.loc 1 1811 0
 2726 002a 002A     		cmp	r2, #0
 2727 002c 18BF     		it	ne
 2728 002e 0029     		cmpne	r1, #0
 2729 0030 71D0     		beq	.L263
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2730              		.loc 1 1818 0
 2731 0032 0323     		movs	r3, #3
 2732 0034 80F85D30 		strb	r3, [r0, #93]
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pData;
 2733              		.loc 1 1819 0
 2734 0038 0023     		movs	r3, #0
 2735 003a 0366     		str	r3, [r0, #96]
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2736              		.loc 1 1820 0
 2737 003c 8163     		str	r1, [r0, #56]
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2738              		.loc 1 1821 0
 2739 003e 8287     		strh	r2, [r0, #60]	@ movhi
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2740              		.loc 1 1822 0
 2741 0040 C287     		strh	r2, [r0, #62]	@ movhi
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2742              		.loc 1 1825 0
 2743 0042 0364     		str	r3, [r0, #64]
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2744              		.loc 1 1826 0
 2745 0044 0365     		str	r3, [r0, #80]
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2746              		.loc 1 1827 0
 2747 0046 C364     		str	r3, [r0, #76]
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2748              		.loc 1 1828 0
 2749 0048 A0F84430 		strh	r3, [r0, #68]	@ movhi
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2750              		.loc 1 1829 0
 2751 004c A0F84630 		strh	r3, [r0, #70]	@ movhi
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2752              		.loc 1 1832 0
 2753 0050 8368     		ldr	r3, [r0, #8]
 2754 0052 B3F5004F 		cmp	r3, #32768
 2755 0056 2BD0     		beq	.L269
ARM GAS  /tmp/ccQwr80L.s 			page 131


 2756              	.LVL198:
 2757              	.L256:
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2758              		.loc 1 1846 0
 2759 0058 636D     		ldr	r3, [r4, #84]
 2760 005a 314A     		ldr	r2, .L271
 2761 005c 1A64     		str	r2, [r3, #64]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2762              		.loc 1 1849 0
 2763 005e 636D     		ldr	r3, [r4, #84]
 2764 0060 304A     		ldr	r2, .L271+4
 2765 0062 DA63     		str	r2, [r3, #60]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2766              		.loc 1 1852 0
 2767 0064 636D     		ldr	r3, [r4, #84]
 2768 0066 304A     		ldr	r2, .L271+8
 2769 0068 DA64     		str	r2, [r3, #76]
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2770              		.loc 1 1855 0
 2771 006a 636D     		ldr	r3, [r4, #84]
 2772 006c 0022     		movs	r2, #0
 2773 006e 1A65     		str	r2, [r3, #80]
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Packing mode is enabled only if the DMA setting is HALWORD */
 2774              		.loc 1 1857 0
 2775 0070 2268     		ldr	r2, [r4]
 2776 0072 5368     		ldr	r3, [r2, #4]
 2777 0074 23F48043 		bic	r3, r3, #16384
 2778 0078 5360     		str	r3, [r2, #4]
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2779              		.loc 1 1859 0
 2780 007a E368     		ldr	r3, [r4, #12]
 2781 007c B3F5E06F 		cmp	r3, #1792
 2782 0080 04D8     		bhi	.L257
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2783              		.loc 1 1859 0 is_stmt 0 discriminator 1
 2784 0082 636D     		ldr	r3, [r4, #84]
 2785 0084 9B69     		ldr	r3, [r3, #24]
 2786 0086 B3F5005F 		cmp	r3, #8192
 2787 008a 17D0     		beq	.L270
 2788              	.L257:
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2789              		.loc 1 1875 0 is_stmt 1
 2790 008c 2268     		ldr	r2, [r4]
 2791 008e E38F     		ldrh	r3, [r4, #62]
 2792 0090 9BB2     		uxth	r3, r3
 2793 0092 0C32     		adds	r2, r2, #12
 2794 0094 A16B     		ldr	r1, [r4, #56]
 2795              	.LVL199:
 2796 0096 606D     		ldr	r0, [r4, #84]
 2797              	.LVL200:
 2798 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2799              	.LVL201:
 2800 009c 0346     		mov	r3, r0
 2801 009e 30B3     		cbz	r0, .L259
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 2802              		.loc 1 1878 0
 2803 00a0 236E     		ldr	r3, [r4, #96]
ARM GAS  /tmp/ccQwr80L.s 			page 132


 2804 00a2 43F01003 		orr	r3, r3, #16
 2805 00a6 2366     		str	r3, [r4, #96]
 2806              	.LVL202:
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2807              		.loc 1 1881 0
 2808 00a8 0123     		movs	r3, #1
 2809 00aa 84F85D30 		strb	r3, [r4, #93]
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2810              		.loc 1 1882 0
 2811 00ae B7E7     		b	.L255
 2812              	.LVL203:
 2813              	.L269:
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2814              		.loc 1 1834 0
 2815 00b0 0268     		ldr	r2, [r0]
 2816              	.LVL204:
 2817 00b2 1368     		ldr	r3, [r2]
 2818 00b4 43F48043 		orr	r3, r3, #16384
 2819 00b8 1360     		str	r3, [r2]
 2820              	.LVL205:
 2821 00ba CDE7     		b	.L256
 2822              	.L270:
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 2823              		.loc 1 1862 0
 2824 00bc E38F     		ldrh	r3, [r4, #62]
 2825 00be 13F0010F 		tst	r3, #1
 2826 00c2 09D1     		bne	.L258
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U);
 2827              		.loc 1 1864 0
 2828 00c4 2268     		ldr	r2, [r4]
 2829 00c6 5368     		ldr	r3, [r2, #4]
 2830 00c8 23F48043 		bic	r3, r3, #16384
 2831 00cc 5360     		str	r3, [r2, #4]
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 2832              		.loc 1 1865 0
 2833 00ce E38F     		ldrh	r3, [r4, #62]
 2834 00d0 C3F34E03 		ubfx	r3, r3, #1, #15
 2835 00d4 E387     		strh	r3, [r4, #62]	@ movhi
 2836 00d6 D9E7     		b	.L257
 2837              	.L258:
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 2838              		.loc 1 1869 0
 2839 00d8 2268     		ldr	r2, [r4]
 2840 00da 5368     		ldr	r3, [r2, #4]
 2841 00dc 43F48043 		orr	r3, r3, #16384
 2842 00e0 5360     		str	r3, [r2, #4]
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 2843              		.loc 1 1870 0
 2844 00e2 E38F     		ldrh	r3, [r4, #62]
 2845 00e4 C3F34E03 		ubfx	r3, r3, #1, #15
 2846 00e8 0133     		adds	r3, r3, #1
 2847 00ea E387     		strh	r3, [r4, #62]	@ movhi
 2848 00ec CEE7     		b	.L257
 2849              	.LVL206:
 2850              	.L259:
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2851              		.loc 1 1886 0
ARM GAS  /tmp/ccQwr80L.s 			page 133


 2852 00ee 2268     		ldr	r2, [r4]
 2853 00f0 1168     		ldr	r1, [r2]
 2854 00f2 11F0400F 		tst	r1, #64
 2855 00f6 03D1     		bne	.L260
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2856              		.loc 1 1889 0
 2857 00f8 1168     		ldr	r1, [r2]
 2858 00fa 41F04001 		orr	r1, r1, #64
 2859 00fe 1160     		str	r1, [r2]
 2860              	.L260:
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2861              		.loc 1 1893 0
 2862 0100 2168     		ldr	r1, [r4]
 2863 0102 4A68     		ldr	r2, [r1, #4]
 2864 0104 42F02002 		orr	r2, r2, #32
 2865 0108 4A60     		str	r2, [r1, #4]
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2866              		.loc 1 1896 0
 2867 010a 2168     		ldr	r1, [r4]
 2868 010c 4A68     		ldr	r2, [r1, #4]
 2869 010e 42F00202 		orr	r2, r2, #2
 2870 0112 4A60     		str	r2, [r1, #4]
 2871 0114 84E7     		b	.L255
 2872              	.LVL207:
 2873              	.L263:
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2874              		.loc 1 1813 0
 2875 0116 0123     		movs	r3, #1
 2876 0118 82E7     		b	.L255
 2877              	.L261:
 2878              	.LCFI34:
 2879              		.cfi_def_cfa_offset 0
 2880              		.cfi_restore 4
 2881              		.cfi_restore 14
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2882              		.loc 1 1803 0
 2883 011a 0223     		movs	r3, #2
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2884              		.loc 1 1902 0
 2885 011c 1846     		mov	r0, r3
 2886              	.LVL208:
 2887 011e 7047     		bx	lr
 2888              	.L272:
 2889              		.align	2
 2890              	.L271:
 2891 0120 00000000 		.word	SPI_DMAHalfTransmitCplt
 2892 0124 00000000 		.word	SPI_DMATransmitCplt
 2893 0128 00000000 		.word	SPI_DMAError
 2894              		.cfi_endproc
 2895              	.LFE151:
 2897              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2898              		.align	1
 2899              		.global	HAL_SPI_TransmitReceive_DMA
 2900              		.syntax unified
 2901              		.thumb
 2902              		.thumb_func
 2903              		.fpu fpv5-d16
ARM GAS  /tmp/ccQwr80L.s 			page 134


 2905              	HAL_SPI_TransmitReceive_DMA:
 2906              	.LFB153:
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t             tmp_mode;
 2907              		.loc 1 2058 0
 2908              		.cfi_startproc
 2909              		@ args = 0, pretend = 0, frame = 0
 2910              		@ frame_needed = 0, uses_anonymous_args = 0
 2911              	.LVL209:
 2912 0000 38B5     		push	{r3, r4, r5, lr}
 2913              	.LCFI35:
 2914              		.cfi_def_cfa_offset 16
 2915              		.cfi_offset 3, -16
 2916              		.cfi_offset 4, -12
 2917              		.cfi_offset 5, -8
 2918              		.cfi_offset 14, -4
 2919              	.LVL210:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2920              		.loc 1 2071 0
 2921 0002 90F85C40 		ldrb	r4, [r0, #92]	@ zero_extendqisi2
 2922 0006 012C     		cmp	r4, #1
 2923 0008 00F0F580 		beq	.L288
 2924 000c 0446     		mov	r4, r0
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2925              		.loc 1 2071 0 is_stmt 0 discriminator 2
 2926 000e 0120     		movs	r0, #1
 2927              	.LVL211:
 2928 0010 84F85C00 		strb	r0, [r4, #92]
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2929              		.loc 1 2074 0 is_stmt 1 discriminator 2
 2930 0014 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2931 0018 C0B2     		uxtb	r0, r0
 2932              	.LVL212:
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2933              		.loc 1 2075 0 discriminator 2
 2934 001a 6568     		ldr	r5, [r4, #4]
 2935              	.LVL213:
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2936              		.loc 1 2077 0 discriminator 2
 2937 001c 0128     		cmp	r0, #1
 2938 001e 10D0     		beq	.L275
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_st
 2939              		.loc 1 2077 0 is_stmt 0 discriminator 1
 2940 0020 B5F5827F 		cmp	r5, #260
 2941 0024 05D0     		beq	.L295
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2942              		.loc 1 2080 0 is_stmt 1
 2943 0026 0223     		movs	r3, #2
 2944              	.LVL214:
 2945              	.L276:
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 2946              		.loc 1 2229 0
 2947 0028 0022     		movs	r2, #0
 2948 002a 84F85C20 		strb	r2, [r4, #92]
 2949              	.LVL215:
 2950              	.L274:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 2951              		.loc 1 2231 0
ARM GAS  /tmp/ccQwr80L.s 			page 135


 2952 002e 1846     		mov	r0, r3
 2953 0030 38BD     		pop	{r3, r4, r5, pc}
 2954              	.LVL216:
 2955              	.L295:
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2956              		.loc 1 2078 0
 2957 0032 A568     		ldr	r5, [r4, #8]
 2958              	.LVL217:
 2959 0034 002D     		cmp	r5, #0
 2960 0036 40F0D880 		bne	.L290
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2961              		.loc 1 2078 0 is_stmt 0 discriminator 1
 2962 003a 0428     		cmp	r0, #4
 2963 003c 01D0     		beq	.L275
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 2964              		.loc 1 2080 0 is_stmt 1
 2965 003e 0223     		movs	r3, #2
 2966              	.LVL218:
 2967 0040 F2E7     		b	.L276
 2968              	.LVL219:
 2969              	.L275:
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2970              		.loc 1 2084 0
 2971 0042 002A     		cmp	r2, #0
 2972 0044 18BF     		it	ne
 2973 0046 0029     		cmpne	r1, #0
 2974 0048 00F0D180 		beq	.L292
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2975              		.loc 1 2084 0 is_stmt 0 discriminator 1
 2976 004c 002B     		cmp	r3, #0
 2977 004e 00F0D080 		beq	.L293
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 2978              		.loc 1 2091 0 is_stmt 1
 2979 0052 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 2980              	.LVL220:
 2981 0056 C0B2     		uxtb	r0, r0
 2982 0058 0428     		cmp	r0, #4
 2983 005a 02D0     		beq	.L277
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 2984              		.loc 1 2093 0
 2985 005c 0520     		movs	r0, #5
 2986 005e 84F85D00 		strb	r0, [r4, #93]
 2987              	.L277:
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 2988              		.loc 1 2097 0
 2989 0062 0020     		movs	r0, #0
 2990 0064 2066     		str	r0, [r4, #96]
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2991              		.loc 1 2098 0
 2992 0066 A163     		str	r1, [r4, #56]
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2993              		.loc 1 2099 0
 2994 0068 A387     		strh	r3, [r4, #60]	@ movhi
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2995              		.loc 1 2100 0
 2996 006a E387     		strh	r3, [r4, #62]	@ movhi
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
ARM GAS  /tmp/ccQwr80L.s 			page 136


 2997              		.loc 1 2101 0
 2998 006c 2264     		str	r2, [r4, #64]
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2999              		.loc 1 2102 0
 3000 006e A4F84430 		strh	r3, [r4, #68]	@ movhi
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3001              		.loc 1 2103 0
 3002 0072 A4F84630 		strh	r3, [r4, #70]	@ movhi
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3003              		.loc 1 2106 0
 3004 0076 E064     		str	r0, [r4, #76]
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3005              		.loc 1 2107 0
 3006 0078 2065     		str	r0, [r4, #80]
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3007              		.loc 1 2118 0
 3008 007a 2268     		ldr	r2, [r4]
 3009              	.LVL221:
 3010 007c 5368     		ldr	r3, [r2, #4]
 3011              	.LVL222:
 3012 007e 23F4C043 		bic	r3, r3, #24576
 3013 0082 5360     		str	r3, [r2, #4]
 3014              	.LVL223:
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3015              		.loc 1 2121 0
 3016 0084 E368     		ldr	r3, [r4, #12]
 3017 0086 B3F5E06F 		cmp	r3, #1792
 3018 008a 28D9     		bls	.L278
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3019              		.loc 1 2124 0
 3020 008c 2268     		ldr	r2, [r4]
 3021 008e 5368     		ldr	r3, [r2, #4]
 3022 0090 23F48053 		bic	r3, r3, #4096
 3023 0094 5360     		str	r3, [r2, #4]
 3024              	.L279:
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3025              		.loc 1 2164 0
 3026 0096 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3027 009a DBB2     		uxtb	r3, r3
 3028 009c 042B     		cmp	r3, #4
 3029 009e 69D0     		beq	.L296
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3030              		.loc 1 2173 0
 3031 00a0 A36D     		ldr	r3, [r4, #88]
 3032 00a2 564A     		ldr	r2, .L298
 3033 00a4 1A64     		str	r2, [r3, #64]
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3034              		.loc 1 2174 0
 3035 00a6 A36D     		ldr	r3, [r4, #88]
 3036 00a8 554A     		ldr	r2, .L298+4
 3037 00aa DA63     		str	r2, [r3, #60]
 3038              	.L284:
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3039              		.loc 1 2178 0
 3040 00ac A36D     		ldr	r3, [r4, #88]
 3041 00ae 554A     		ldr	r2, .L298+8
 3042 00b0 DA64     		str	r2, [r3, #76]
ARM GAS  /tmp/ccQwr80L.s 			page 137


2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3043              		.loc 1 2181 0
 3044 00b2 A36D     		ldr	r3, [r4, #88]
 3045 00b4 0022     		movs	r2, #0
 3046 00b6 1A65     		str	r2, [r3, #80]
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3047              		.loc 1 2184 0
 3048 00b8 2168     		ldr	r1, [r4]
 3049              	.LVL224:
 3050 00ba B4F84630 		ldrh	r3, [r4, #70]
 3051 00be 9BB2     		uxth	r3, r3
 3052 00c0 226C     		ldr	r2, [r4, #64]
 3053 00c2 0C31     		adds	r1, r1, #12
 3054 00c4 A06D     		ldr	r0, [r4, #88]
 3055 00c6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3056              	.LVL225:
 3057 00ca 0028     		cmp	r0, #0
 3058 00cc 59D0     		beq	.L285
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3059              		.loc 1 2187 0
 3060 00ce 236E     		ldr	r3, [r4, #96]
 3061 00d0 43F01003 		orr	r3, r3, #16
 3062 00d4 2366     		str	r3, [r4, #96]
 3063              	.LVL226:
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3064              		.loc 1 2190 0
 3065 00d6 0123     		movs	r3, #1
 3066 00d8 84F85D30 		strb	r3, [r4, #93]
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3067              		.loc 1 2191 0
 3068 00dc A4E7     		b	.L276
 3069              	.LVL227:
 3070              	.L278:
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3071              		.loc 1 2129 0
 3072 00de 2268     		ldr	r2, [r4]
 3073 00e0 5368     		ldr	r3, [r2, #4]
 3074 00e2 43F48053 		orr	r3, r3, #4096
 3075 00e6 5360     		str	r3, [r2, #4]
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3076              		.loc 1 2131 0
 3077 00e8 636D     		ldr	r3, [r4, #84]
 3078 00ea 9B69     		ldr	r3, [r3, #24]
 3079 00ec B3F5005F 		cmp	r3, #8192
 3080 00f0 1AD0     		beq	.L297
 3081              	.L280:
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3082              		.loc 1 2145 0
 3083 00f2 A36D     		ldr	r3, [r4, #88]
 3084 00f4 9B69     		ldr	r3, [r3, #24]
 3085 00f6 B3F5005F 		cmp	r3, #8192
 3086 00fa CCD1     		bne	.L279
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3087              		.loc 1 2148 0
 3088 00fc 2268     		ldr	r2, [r4]
 3089 00fe 5368     		ldr	r3, [r2, #4]
 3090 0100 23F48053 		bic	r3, r3, #4096
ARM GAS  /tmp/ccQwr80L.s 			page 138


 3091 0104 5360     		str	r3, [r2, #4]
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3092              		.loc 1 2150 0
 3093 0106 B4F84630 		ldrh	r3, [r4, #70]
 3094 010a 13F0010F 		tst	r3, #1
 3095 010e 24D1     		bne	.L282
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3096              		.loc 1 2152 0
 3097 0110 2268     		ldr	r2, [r4]
 3098 0112 5368     		ldr	r3, [r2, #4]
 3099 0114 23F40053 		bic	r3, r3, #8192
 3100 0118 5360     		str	r3, [r2, #4]
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3101              		.loc 1 2153 0
 3102 011a B4F84630 		ldrh	r3, [r4, #70]
 3103 011e C3F34E03 		ubfx	r3, r3, #1, #15
 3104 0122 A4F84630 		strh	r3, [r4, #70]	@ movhi
 3105 0126 B6E7     		b	.L279
 3106              	.L297:
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3107              		.loc 1 2133 0
 3108 0128 A38F     		ldrh	r3, [r4, #60]
 3109 012a 13F0010F 		tst	r3, #1
 3110 012e 09D1     		bne	.L281
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = hspi->TxXferCount >> 1U;
 3111              		.loc 1 2135 0
 3112 0130 2268     		ldr	r2, [r4]
 3113 0132 5368     		ldr	r3, [r2, #4]
 3114 0134 23F48043 		bic	r3, r3, #16384
 3115 0138 5360     		str	r3, [r2, #4]
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3116              		.loc 1 2136 0
 3117 013a E38F     		ldrh	r3, [r4, #62]
 3118 013c C3F34E03 		ubfx	r3, r3, #1, #15
 3119 0140 E387     		strh	r3, [r4, #62]	@ movhi
 3120 0142 D6E7     		b	.L280
 3121              	.L281:
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->TxXferCount = (hspi->TxXferCount >> 1U) + 1U;
 3122              		.loc 1 2140 0
 3123 0144 2268     		ldr	r2, [r4]
 3124 0146 5368     		ldr	r3, [r2, #4]
 3125 0148 43F48043 		orr	r3, r3, #16384
 3126 014c 5360     		str	r3, [r2, #4]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3127              		.loc 1 2141 0
 3128 014e E38F     		ldrh	r3, [r4, #62]
 3129 0150 C3F34E03 		ubfx	r3, r3, #1, #15
 3130 0154 0133     		adds	r3, r3, #1
 3131 0156 E387     		strh	r3, [r4, #62]	@ movhi
 3132 0158 CBE7     		b	.L280
 3133              	.L282:
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3134              		.loc 1 2157 0
 3135 015a 2268     		ldr	r2, [r4]
 3136 015c 5368     		ldr	r3, [r2, #4]
 3137 015e 43F40053 		orr	r3, r3, #8192
 3138 0162 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccQwr80L.s 			page 139


2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3139              		.loc 1 2158 0
 3140 0164 B4F84630 		ldrh	r3, [r4, #70]
 3141 0168 C3F34E03 		ubfx	r3, r3, #1, #15
 3142 016c 0133     		adds	r3, r3, #1
 3143 016e A4F84630 		strh	r3, [r4, #70]	@ movhi
 3144 0172 90E7     		b	.L279
 3145              	.L296:
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3146              		.loc 1 2167 0
 3147 0174 A36D     		ldr	r3, [r4, #88]
 3148 0176 244A     		ldr	r2, .L298+12
 3149 0178 1A64     		str	r2, [r3, #64]
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3150              		.loc 1 2168 0
 3151 017a A36D     		ldr	r3, [r4, #88]
 3152 017c 234A     		ldr	r2, .L298+16
 3153 017e DA63     		str	r2, [r3, #60]
 3154 0180 94E7     		b	.L284
 3155              	.LVL228:
 3156              	.L285:
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3157              		.loc 1 2195 0
 3158 0182 2268     		ldr	r2, [r4]
 3159 0184 5368     		ldr	r3, [r2, #4]
 3160 0186 43F00103 		orr	r3, r3, #1
 3161 018a 5360     		str	r3, [r2, #4]
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3162              		.loc 1 2199 0
 3163 018c 626D     		ldr	r2, [r4, #84]
 3164 018e 0023     		movs	r3, #0
 3165 0190 1364     		str	r3, [r2, #64]
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3166              		.loc 1 2200 0
 3167 0192 626D     		ldr	r2, [r4, #84]
 3168 0194 D363     		str	r3, [r2, #60]
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3169              		.loc 1 2201 0
 3170 0196 626D     		ldr	r2, [r4, #84]
 3171 0198 D364     		str	r3, [r2, #76]
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3172              		.loc 1 2202 0
 3173 019a 626D     		ldr	r2, [r4, #84]
 3174 019c 1365     		str	r3, [r2, #80]
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3175              		.loc 1 2205 0
 3176 019e 2268     		ldr	r2, [r4]
 3177 01a0 E38F     		ldrh	r3, [r4, #62]
 3178 01a2 9BB2     		uxth	r3, r3
 3179 01a4 0C32     		adds	r2, r2, #12
 3180 01a6 A16B     		ldr	r1, [r4, #56]
 3181 01a8 606D     		ldr	r0, [r4, #84]
 3182 01aa FFF7FEFF 		bl	HAL_DMA_Start_IT
 3183              	.LVL229:
 3184 01ae 0346     		mov	r3, r0
 3185 01b0 38B1     		cbz	r0, .L286
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
ARM GAS  /tmp/ccQwr80L.s 			page 140


 3186              		.loc 1 2208 0
 3187 01b2 236E     		ldr	r3, [r4, #96]
 3188 01b4 43F01003 		orr	r3, r3, #16
 3189 01b8 2366     		str	r3, [r4, #96]
 3190              	.LVL230:
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3191              		.loc 1 2211 0
 3192 01ba 0123     		movs	r3, #1
 3193 01bc 84F85D30 		strb	r3, [r4, #93]
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3194              		.loc 1 2212 0
 3195 01c0 32E7     		b	.L276
 3196              	.LVL231:
 3197              	.L286:
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3198              		.loc 1 2216 0
 3199 01c2 2268     		ldr	r2, [r4]
 3200 01c4 1168     		ldr	r1, [r2]
 3201 01c6 11F0400F 		tst	r1, #64
 3202 01ca 03D1     		bne	.L287
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3203              		.loc 1 2219 0
 3204 01cc 1168     		ldr	r1, [r2]
 3205 01ce 41F04001 		orr	r1, r1, #64
 3206 01d2 1160     		str	r1, [r2]
 3207              	.L287:
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3208              		.loc 1 2222 0
 3209 01d4 2168     		ldr	r1, [r4]
 3210 01d6 4A68     		ldr	r2, [r1, #4]
 3211 01d8 42F02002 		orr	r2, r2, #32
 3212 01dc 4A60     		str	r2, [r1, #4]
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3213              		.loc 1 2225 0
 3214 01de 2168     		ldr	r1, [r4]
 3215 01e0 4A68     		ldr	r2, [r1, #4]
 3216 01e2 42F00202 		orr	r2, r2, #2
 3217 01e6 4A60     		str	r2, [r1, #4]
 3218 01e8 1EE7     		b	.L276
 3219              	.LVL232:
 3220              	.L290:
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3221              		.loc 1 2080 0
 3222 01ea 0223     		movs	r3, #2
 3223              	.LVL233:
 3224 01ec 1CE7     		b	.L276
 3225              	.LVL234:
 3226              	.L292:
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3227              		.loc 1 2086 0
 3228 01ee 0123     		movs	r3, #1
 3229              	.LVL235:
 3230 01f0 1AE7     		b	.L276
 3231              	.LVL236:
 3232              	.L293:
 3233 01f2 0123     		movs	r3, #1
 3234              	.LVL237:
ARM GAS  /tmp/ccQwr80L.s 			page 141


 3235 01f4 18E7     		b	.L276
 3236              	.LVL238:
 3237              	.L288:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3238              		.loc 1 2071 0
 3239 01f6 0223     		movs	r3, #2
 3240              	.LVL239:
 3241 01f8 19E7     		b	.L274
 3242              	.L299:
 3243 01fa 00BF     		.align	2
 3244              	.L298:
 3245 01fc 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3246 0200 00000000 		.word	SPI_DMATransmitReceiveCplt
 3247 0204 00000000 		.word	SPI_DMAError
 3248 0208 00000000 		.word	SPI_DMAHalfReceiveCplt
 3249 020c 00000000 		.word	SPI_DMAReceiveCplt
 3250              		.cfi_endproc
 3251              	.LFE153:
 3253              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 3254              		.align	1
 3255              		.global	HAL_SPI_Receive_DMA
 3256              		.syntax unified
 3257              		.thumb
 3258              		.thumb_func
 3259              		.fpu fpv5-d16
 3261              	HAL_SPI_Receive_DMA:
 3262              	.LFB152:
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3263              		.loc 1 1915 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              	.LVL240:
 3268 0000 38B5     		push	{r3, r4, r5, lr}
 3269              	.LCFI36:
 3270              		.cfi_def_cfa_offset 16
 3271              		.cfi_offset 3, -16
 3272              		.cfi_offset 4, -12
 3273              		.cfi_offset 5, -8
 3274              		.cfi_offset 14, -4
 3275 0002 0446     		mov	r4, r0
 3276              	.LVL241:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3277              		.loc 1 1921 0
 3278 0004 8568     		ldr	r5, [r0, #8]
 3279 0006 1DB9     		cbnz	r5, .L301
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3280              		.loc 1 1921 0 is_stmt 0 discriminator 1
 3281 0008 4368     		ldr	r3, [r0, #4]
 3282 000a B3F5827F 		cmp	r3, #260
 3283 000e 12D0     		beq	.L314
 3284              	.L301:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3285              		.loc 1 1933 0 is_stmt 1
 3286 0010 94F85C00 		ldrb	r0, [r4, #92]	@ zero_extendqisi2
 3287              	.LVL242:
 3288 0014 0128     		cmp	r0, #1
ARM GAS  /tmp/ccQwr80L.s 			page 142


 3289 0016 00F0A480 		beq	.L310
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3290              		.loc 1 1933 0 is_stmt 0 discriminator 2
 3291 001a 0123     		movs	r3, #1
 3292 001c 84F85C30 		strb	r3, [r4, #92]
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3293              		.loc 1 1935 0 is_stmt 1 discriminator 2
 3294 0020 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 3295 0024 C0B2     		uxtb	r0, r0
 3296 0026 9842     		cmp	r0, r3
 3297 0028 0ED0     		beq	.L315
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3298              		.loc 1 1937 0
 3299 002a 0223     		movs	r3, #2
 3300              	.LVL243:
 3301              	.L303:
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3302              		.loc 1 2042 0
 3303 002c 0022     		movs	r2, #0
 3304 002e 84F85C20 		strb	r2, [r4, #92]
 3305              	.LVL244:
 3306              	.L302:
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3307              		.loc 1 2044 0
 3308 0032 1846     		mov	r0, r3
 3309 0034 38BD     		pop	{r3, r4, r5, pc}
 3310              	.LVL245:
 3311              	.L314:
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3312              		.loc 1 1923 0
 3313 0036 0423     		movs	r3, #4
 3314 0038 80F85D30 		strb	r3, [r0, #93]
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3315              		.loc 1 1929 0
 3316 003c 1346     		mov	r3, r2
 3317 003e 0A46     		mov	r2, r1
 3318              	.LVL246:
 3319 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 3320              	.LVL247:
 3321 0044 0346     		mov	r3, r0
 3322 0046 F4E7     		b	.L302
 3323              	.LVL248:
 3324              	.L315:
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3325              		.loc 1 1941 0
 3326 0048 002A     		cmp	r2, #0
 3327 004a 18BF     		it	ne
 3328 004c 0029     		cmpne	r1, #0
 3329 004e 00F08680 		beq	.L312
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3330              		.loc 1 1948 0
 3331 0052 0423     		movs	r3, #4
 3332 0054 84F85D30 		strb	r3, [r4, #93]
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 3333              		.loc 1 1949 0
 3334 0058 0023     		movs	r3, #0
 3335 005a 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccQwr80L.s 			page 143


1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3336              		.loc 1 1950 0
 3337 005c 2164     		str	r1, [r4, #64]
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3338              		.loc 1 1951 0
 3339 005e A4F84420 		strh	r2, [r4, #68]	@ movhi
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3340              		.loc 1 1952 0
 3341 0062 A4F84620 		strh	r2, [r4, #70]	@ movhi
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3342              		.loc 1 1955 0
 3343 0066 E364     		str	r3, [r4, #76]
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 3344              		.loc 1 1956 0
 3345 0068 2365     		str	r3, [r4, #80]
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3346              		.loc 1 1957 0
 3347 006a A387     		strh	r3, [r4, #60]	@ movhi
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3348              		.loc 1 1958 0
 3349 006c E387     		strh	r3, [r4, #62]	@ movhi
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3350              		.loc 1 1961 0
 3351 006e B5F5004F 		cmp	r5, #32768
 3352 0072 2DD0     		beq	.L316
 3353              	.LVL249:
 3354              	.L304:
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 3355              		.loc 1 1975 0
 3356 0074 2268     		ldr	r2, [r4]
 3357 0076 5368     		ldr	r3, [r2, #4]
 3358 0078 23F40053 		bic	r3, r3, #8192
 3359 007c 5360     		str	r3, [r2, #4]
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3360              		.loc 1 1976 0
 3361 007e E368     		ldr	r3, [r4, #12]
 3362 0080 B3F5E06F 		cmp	r3, #1792
 3363 0084 2AD9     		bls	.L305
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3364              		.loc 1 1979 0
 3365 0086 2268     		ldr	r2, [r4]
 3366 0088 5368     		ldr	r3, [r2, #4]
 3367 008a 23F48053 		bic	r3, r3, #4096
 3368 008e 5360     		str	r3, [r2, #4]
 3369              	.L306:
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3370              		.loc 1 2005 0
 3371 0090 A36D     		ldr	r3, [r4, #88]
 3372 0092 354A     		ldr	r2, .L317
 3373 0094 1A64     		str	r2, [r3, #64]
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3374              		.loc 1 2008 0
 3375 0096 A36D     		ldr	r3, [r4, #88]
 3376 0098 344A     		ldr	r2, .L317+4
 3377 009a DA63     		str	r2, [r3, #60]
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3378              		.loc 1 2011 0
ARM GAS  /tmp/ccQwr80L.s 			page 144


 3379 009c A36D     		ldr	r3, [r4, #88]
 3380 009e 344A     		ldr	r2, .L317+8
 3381 00a0 DA64     		str	r2, [r3, #76]
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3382              		.loc 1 2014 0
 3383 00a2 A36D     		ldr	r3, [r4, #88]
 3384 00a4 0022     		movs	r2, #0
 3385 00a6 1A65     		str	r2, [r3, #80]
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3386              		.loc 1 2017 0
 3387 00a8 2168     		ldr	r1, [r4]
 3388              	.LVL250:
 3389 00aa B4F84630 		ldrh	r3, [r4, #70]
 3390 00ae 9BB2     		uxth	r3, r3
 3391 00b0 226C     		ldr	r2, [r4, #64]
 3392 00b2 0C31     		adds	r1, r1, #12
 3393 00b4 A06D     		ldr	r0, [r4, #88]
 3394 00b6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3395              	.LVL251:
 3396 00ba 0346     		mov	r3, r0
 3397 00bc 0028     		cmp	r0, #0
 3398 00be 3AD0     		beq	.L308
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3399              		.loc 1 2020 0
 3400 00c0 236E     		ldr	r3, [r4, #96]
 3401 00c2 43F01003 		orr	r3, r3, #16
 3402 00c6 2366     		str	r3, [r4, #96]
 3403              	.LVL252:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3404              		.loc 1 2023 0
 3405 00c8 0123     		movs	r3, #1
 3406 00ca 84F85D30 		strb	r3, [r4, #93]
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3407              		.loc 1 2024 0
 3408 00ce ADE7     		b	.L303
 3409              	.LVL253:
 3410              	.L316:
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3411              		.loc 1 1963 0
 3412 00d0 2268     		ldr	r2, [r4]
 3413              	.LVL254:
 3414 00d2 1368     		ldr	r3, [r2]
 3415 00d4 23F48043 		bic	r3, r3, #16384
 3416 00d8 1360     		str	r3, [r2]
 3417              	.LVL255:
 3418 00da CBE7     		b	.L304
 3419              	.L305:
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3420              		.loc 1 1984 0
 3421 00dc 2268     		ldr	r2, [r4]
 3422 00de 5368     		ldr	r3, [r2, #4]
 3423 00e0 43F48053 		orr	r3, r3, #4096
 3424 00e4 5360     		str	r3, [r2, #4]
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3425              		.loc 1 1986 0
 3426 00e6 A36D     		ldr	r3, [r4, #88]
 3427 00e8 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp/ccQwr80L.s 			page 145


 3428 00ea B3F5005F 		cmp	r3, #8192
 3429 00ee CFD1     		bne	.L306
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3430              		.loc 1 1989 0
 3431 00f0 2268     		ldr	r2, [r4]
 3432 00f2 5368     		ldr	r3, [r2, #4]
 3433 00f4 23F48053 		bic	r3, r3, #4096
 3434 00f8 5360     		str	r3, [r2, #4]
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3435              		.loc 1 1991 0
 3436 00fa B4F84630 		ldrh	r3, [r4, #70]
 3437 00fe 13F0010F 		tst	r3, #1
 3438 0102 0BD1     		bne	.L307
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = hspi->RxXferCount >> 1U;
 3439              		.loc 1 1993 0
 3440 0104 2268     		ldr	r2, [r4]
 3441 0106 5368     		ldr	r3, [r2, #4]
 3442 0108 23F40053 		bic	r3, r3, #8192
 3443 010c 5360     		str	r3, [r2, #4]
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3444              		.loc 1 1994 0
 3445 010e B4F84630 		ldrh	r3, [r4, #70]
 3446 0112 C3F34E03 		ubfx	r3, r3, #1, #15
 3447 0116 A4F84630 		strh	r3, [r4, #70]	@ movhi
 3448 011a B9E7     		b	.L306
 3449              	.L307:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->RxXferCount = (hspi->RxXferCount >> 1U) + 1U;
 3450              		.loc 1 1998 0
 3451 011c 2268     		ldr	r2, [r4]
 3452 011e 5368     		ldr	r3, [r2, #4]
 3453 0120 43F40053 		orr	r3, r3, #8192
 3454 0124 5360     		str	r3, [r2, #4]
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3455              		.loc 1 1999 0
 3456 0126 B4F84630 		ldrh	r3, [r4, #70]
 3457 012a C3F34E03 		ubfx	r3, r3, #1, #15
 3458 012e 0133     		adds	r3, r3, #1
 3459 0130 A4F84630 		strh	r3, [r4, #70]	@ movhi
 3460 0134 ACE7     		b	.L306
 3461              	.LVL256:
 3462              	.L308:
2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3463              		.loc 1 2028 0
 3464 0136 2268     		ldr	r2, [r4]
 3465 0138 1168     		ldr	r1, [r2]
 3466 013a 11F0400F 		tst	r1, #64
 3467 013e 03D1     		bne	.L309
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3468              		.loc 1 2031 0
 3469 0140 1168     		ldr	r1, [r2]
 3470 0142 41F04001 		orr	r1, r1, #64
 3471 0146 1160     		str	r1, [r2]
 3472              	.L309:
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3473              		.loc 1 2035 0
 3474 0148 2168     		ldr	r1, [r4]
 3475 014a 4A68     		ldr	r2, [r1, #4]
ARM GAS  /tmp/ccQwr80L.s 			page 146


 3476 014c 42F02002 		orr	r2, r2, #32
 3477 0150 4A60     		str	r2, [r1, #4]
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3478              		.loc 1 2038 0
 3479 0152 2168     		ldr	r1, [r4]
 3480 0154 4A68     		ldr	r2, [r1, #4]
 3481 0156 42F00102 		orr	r2, r2, #1
 3482 015a 4A60     		str	r2, [r1, #4]
 3483 015c 66E7     		b	.L303
 3484              	.LVL257:
 3485              	.L312:
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     goto error;
 3486              		.loc 1 1943 0
 3487 015e 0123     		movs	r3, #1
 3488 0160 64E7     		b	.L303
 3489              	.L310:
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3490              		.loc 1 1933 0
 3491 0162 0223     		movs	r3, #2
 3492 0164 65E7     		b	.L302
 3493              	.L318:
 3494 0166 00BF     		.align	2
 3495              	.L317:
 3496 0168 00000000 		.word	SPI_DMAHalfReceiveCplt
 3497 016c 00000000 		.word	SPI_DMAReceiveCplt
 3498 0170 00000000 		.word	SPI_DMAError
 3499              		.cfi_endproc
 3500              	.LFE152:
 3502              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3503              		.align	1
 3504              		.global	HAL_SPI_Abort
 3505              		.syntax unified
 3506              		.thumb
 3507              		.thumb_func
 3508              		.fpu fpv5-d16
 3510              	HAL_SPI_Abort:
 3511              	.LFB154:
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 3512              		.loc 1 2247 0
 3513              		.cfi_startproc
 3514              		@ args = 0, pretend = 0, frame = 16
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
 3516              	.LVL258:
 3517 0000 10B5     		push	{r4, lr}
 3518              	.LCFI37:
 3519              		.cfi_def_cfa_offset 8
 3520              		.cfi_offset 4, -8
 3521              		.cfi_offset 14, -4
 3522 0002 86B0     		sub	sp, sp, #24
 3523              	.LCFI38:
 3524              		.cfi_def_cfa_offset 32
 3525 0004 0446     		mov	r4, r0
 3526              	.LVL259:
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
 3527              		.loc 1 2253 0
 3528 0006 5E4B     		ldr	r3, .L340
 3529 0008 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccQwr80L.s 			page 147


 3530 000a 5E4A     		ldr	r2, .L340+4
 3531 000c A2FB0323 		umull	r2, r3, r2, r3
 3532 0010 5B0A     		lsrs	r3, r3, #9
 3533 0012 6422     		movs	r2, #100
 3534 0014 02FB03F3 		mul	r3, r2, r3
 3535 0018 0493     		str	r3, [sp, #16]
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3536              		.loc 1 2254 0
 3537 001a 049B     		ldr	r3, [sp, #16]
 3538 001c 0593     		str	r3, [sp, #20]
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3539              		.loc 1 2257 0
 3540 001e 0268     		ldr	r2, [r0]
 3541 0020 5368     		ldr	r3, [r2, #4]
 3542 0022 23F02003 		bic	r3, r3, #32
 3543 0026 5360     		str	r3, [r2, #4]
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3544              		.loc 1 2260 0
 3545 0028 0268     		ldr	r2, [r0]
 3546 002a 5368     		ldr	r3, [r2, #4]
 3547 002c 13F0800F 		tst	r3, #128
 3548 0030 12D0     		beq	.L320
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3549              		.loc 1 2262 0
 3550 0032 554B     		ldr	r3, .L340+8
 3551 0034 0365     		str	r3, [r0, #80]
 3552              	.L323:
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3553              		.loc 1 2266 0
 3554 0036 059B     		ldr	r3, [sp, #20]
 3555 0038 43B1     		cbz	r3, .L338
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3556              		.loc 1 2271 0
 3557 003a 059B     		ldr	r3, [sp, #20]
 3558 003c 013B     		subs	r3, r3, #1
 3559 003e 0593     		str	r3, [sp, #20]
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 3560              		.loc 1 2273 0
 3561 0040 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3562 0044 DBB2     		uxtb	r3, r3
 3563 0046 072B     		cmp	r3, #7
 3564 0048 F5D1     		bne	.L323
 3565 004a 03E0     		b	.L322
 3566              	.L338:
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 3567              		.loc 1 2268 0
 3568 004c 236E     		ldr	r3, [r4, #96]
 3569 004e 43F04003 		orr	r3, r3, #64
 3570 0052 2366     		str	r3, [r4, #96]
 3571              	.L322:
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3572              		.loc 1 2275 0
 3573 0054 049B     		ldr	r3, [sp, #16]
 3574 0056 0593     		str	r3, [sp, #20]
 3575              	.L320:
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3576              		.loc 1 2278 0
ARM GAS  /tmp/ccQwr80L.s 			page 148


 3577 0058 5368     		ldr	r3, [r2, #4]
 3578 005a 13F0400F 		tst	r3, #64
 3579 005e 12D0     		beq	.L324
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 3580              		.loc 1 2280 0
 3581 0060 4A4B     		ldr	r3, .L340+12
 3582 0062 E364     		str	r3, [r4, #76]
 3583              	.L327:
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3584              		.loc 1 2284 0
 3585 0064 059B     		ldr	r3, [sp, #20]
 3586 0066 43B1     		cbz	r3, .L339
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3587              		.loc 1 2289 0
 3588 0068 059B     		ldr	r3, [sp, #20]
 3589 006a 013B     		subs	r3, r3, #1
 3590 006c 0593     		str	r3, [sp, #20]
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 3591              		.loc 1 2291 0
 3592 006e 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 3593 0072 DBB2     		uxtb	r3, r3
 3594 0074 072B     		cmp	r3, #7
 3595 0076 F5D1     		bne	.L327
 3596 0078 03E0     		b	.L326
 3597              	.L339:
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 3598              		.loc 1 2286 0
 3599 007a 236E     		ldr	r3, [r4, #96]
 3600 007c 43F04003 		orr	r3, r3, #64
 3601 0080 2366     		str	r3, [r4, #96]
 3602              	.L326:
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3603              		.loc 1 2293 0
 3604 0082 049B     		ldr	r3, [sp, #16]
 3605 0084 0593     		str	r3, [sp, #20]
 3606              	.L324:
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3607              		.loc 1 2297 0
 3608 0086 5368     		ldr	r3, [r2, #4]
 3609 0088 13F0020F 		tst	r3, #2
 3610 008c 2AD0     		beq	.L328
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3611              		.loc 1 2300 0
 3612 008e 636D     		ldr	r3, [r4, #84]
 3613 0090 43B3     		cbz	r3, .L328
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3614              		.loc 1 2304 0
 3615 0092 0022     		movs	r2, #0
 3616 0094 1A65     		str	r2, [r3, #80]
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3617              		.loc 1 2307 0
 3618 0096 606D     		ldr	r0, [r4, #84]
 3619              	.LVL260:
 3620 0098 FFF7FEFF 		bl	HAL_DMA_Abort
 3621              	.LVL261:
 3622 009c 08B1     		cbz	r0, .L329
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
ARM GAS  /tmp/ccQwr80L.s 			page 149


 3623              		.loc 1 2309 0
 3624 009e 4023     		movs	r3, #64
 3625 00a0 2366     		str	r3, [r4, #96]
 3626              	.L329:
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3627              		.loc 1 2313 0
 3628 00a2 2268     		ldr	r2, [r4]
 3629 00a4 5368     		ldr	r3, [r2, #4]
 3630 00a6 23F00203 		bic	r3, r3, #2
 3631 00aa 5360     		str	r3, [r2, #4]
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3632              		.loc 1 2315 0
 3633 00ac FFF7FEFF 		bl	HAL_GetTick
 3634              	.LVL262:
 3635 00b0 0246     		mov	r2, r0
 3636 00b2 6421     		movs	r1, #100
 3637 00b4 2046     		mov	r0, r4
 3638 00b6 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 3639              	.LVL263:
 3640 00ba 08B1     		cbz	r0, .L330
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3641              		.loc 1 2317 0
 3642 00bc 4023     		movs	r3, #64
 3643 00be 2366     		str	r3, [r4, #96]
 3644              	.L330:
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3645              		.loc 1 2321 0
 3646 00c0 2268     		ldr	r2, [r4]
 3647 00c2 1368     		ldr	r3, [r2]
 3648 00c4 23F04003 		bic	r3, r3, #64
 3649 00c8 1360     		str	r3, [r2]
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3650              		.loc 1 2324 0
 3651 00ca FFF7FEFF 		bl	HAL_GetTick
 3652              	.LVL264:
 3653 00ce 0090     		str	r0, [sp]
 3654 00d0 6423     		movs	r3, #100
 3655 00d2 0022     		movs	r2, #0
 3656 00d4 4FF4C061 		mov	r1, #1536
 3657 00d8 2046     		mov	r0, r4
 3658 00da FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3659              	.LVL265:
 3660 00de 08B1     		cbz	r0, .L328
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3661              		.loc 1 2326 0
 3662 00e0 4023     		movs	r3, #64
 3663 00e2 2366     		str	r3, [r4, #96]
 3664              	.L328:
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3665              		.loc 1 2332 0
 3666 00e4 2368     		ldr	r3, [r4]
 3667 00e6 5B68     		ldr	r3, [r3, #4]
 3668 00e8 13F0010F 		tst	r3, #1
 3669 00ec 2CD0     		beq	.L331
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3670              		.loc 1 2335 0
 3671 00ee A36D     		ldr	r3, [r4, #88]
ARM GAS  /tmp/ccQwr80L.s 			page 150


 3672 00f0 53B3     		cbz	r3, .L331
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3673              		.loc 1 2339 0
 3674 00f2 0022     		movs	r2, #0
 3675 00f4 1A65     		str	r2, [r3, #80]
2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3676              		.loc 1 2342 0
 3677 00f6 A06D     		ldr	r0, [r4, #88]
 3678 00f8 FFF7FEFF 		bl	HAL_DMA_Abort
 3679              	.LVL266:
 3680 00fc 08B1     		cbz	r0, .L332
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3681              		.loc 1 2344 0
 3682 00fe 4023     		movs	r3, #64
 3683 0100 2366     		str	r3, [r4, #96]
 3684              	.L332:
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3685              		.loc 1 2348 0
 3686 0102 2268     		ldr	r2, [r4]
 3687 0104 1368     		ldr	r3, [r2]
 3688 0106 23F04003 		bic	r3, r3, #64
 3689 010a 1360     		str	r3, [r2]
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3690              		.loc 1 2351 0
 3691 010c FFF7FEFF 		bl	HAL_GetTick
 3692              	.LVL267:
 3693 0110 0090     		str	r0, [sp]
 3694 0112 6423     		movs	r3, #100
 3695 0114 0022     		movs	r2, #0
 3696 0116 8021     		movs	r1, #128
 3697 0118 2046     		mov	r0, r4
 3698 011a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 3699              	.LVL268:
 3700 011e 08B1     		cbz	r0, .L333
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3701              		.loc 1 2353 0
 3702 0120 4023     		movs	r3, #64
 3703 0122 2366     		str	r3, [r4, #96]
 3704              	.L333:
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 3705              		.loc 1 2357 0
 3706 0124 FFF7FEFF 		bl	HAL_GetTick
 3707              	.LVL269:
 3708 0128 0090     		str	r0, [sp]
 3709 012a 6423     		movs	r3, #100
 3710 012c 0022     		movs	r2, #0
 3711 012e 4FF4C061 		mov	r1, #1536
 3712 0132 2046     		mov	r0, r4
 3713 0134 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 3714              	.LVL270:
 3715 0138 08B1     		cbz	r0, .L334
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 3716              		.loc 1 2359 0
 3717 013a 4023     		movs	r3, #64
 3718 013c 2366     		str	r3, [r4, #96]
 3719              	.L334:
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
ARM GAS  /tmp/ccQwr80L.s 			page 151


 3720              		.loc 1 2363 0
 3721 013e 2268     		ldr	r2, [r4]
 3722 0140 5368     		ldr	r3, [r2, #4]
 3723 0142 23F00103 		bic	r3, r3, #1
 3724 0146 5360     		str	r3, [r2, #4]
 3725              	.L331:
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3726              		.loc 1 2367 0
 3727 0148 0023     		movs	r3, #0
 3728 014a A4F84630 		strh	r3, [r4, #70]	@ movhi
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3729              		.loc 1 2368 0
 3730 014e E387     		strh	r3, [r4, #62]	@ movhi
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3731              		.loc 1 2371 0
 3732 0150 236E     		ldr	r3, [r4, #96]
 3733 0152 402B     		cmp	r3, #64
 3734 0154 12D0     		beq	.L336
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3735              		.loc 1 2379 0
 3736 0156 0020     		movs	r0, #0
 3737 0158 2066     		str	r0, [r4, #96]
 3738              	.L335:
 3739              	.LVL271:
 3740              	.LBB3:
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 3741              		.loc 1 2383 0
 3742 015a 0022     		movs	r2, #0
 3743 015c 0292     		str	r2, [sp, #8]
 3744 015e 2368     		ldr	r3, [r4]
 3745 0160 D968     		ldr	r1, [r3, #12]
 3746 0162 0291     		str	r1, [sp, #8]
 3747 0164 9968     		ldr	r1, [r3, #8]
 3748 0166 0291     		str	r1, [sp, #8]
 3749 0168 0299     		ldr	r1, [sp, #8]
 3750              	.LBE3:
 3751              	.LBB4:
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3752              		.loc 1 2384 0
 3753 016a 0392     		str	r2, [sp, #12]
 3754 016c 9B68     		ldr	r3, [r3, #8]
 3755 016e 0393     		str	r3, [sp, #12]
 3756 0170 039B     		ldr	r3, [sp, #12]
 3757              	.LBE4:
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3758              		.loc 1 2387 0
 3759 0172 0123     		movs	r3, #1
 3760 0174 84F85D30 		strb	r3, [r4, #93]
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3761              		.loc 1 2390 0
 3762 0178 06B0     		add	sp, sp, #24
 3763              	.LCFI39:
 3764              		.cfi_remember_state
 3765              		.cfi_def_cfa_offset 8
 3766              		@ sp needed
 3767 017a 10BD     		pop	{r4, pc}
 3768              	.LVL272:
ARM GAS  /tmp/ccQwr80L.s 			page 152


 3769              	.L336:
 3770              	.LCFI40:
 3771              		.cfi_restore_state
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 3772              		.loc 1 2374 0
 3773 017c 0120     		movs	r0, #1
 3774 017e ECE7     		b	.L335
 3775              	.L341:
 3776              		.align	2
 3777              	.L340:
 3778 0180 00000000 		.word	SystemCoreClock
 3779 0184 F1197605 		.word	91625969
 3780 0188 00000000 		.word	SPI_AbortTx_ISR
 3781 018c 00000000 		.word	SPI_AbortRx_ISR
 3782              		.cfi_endproc
 3783              	.LFE154:
 3785              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3786              		.align	1
 3787              		.global	HAL_SPI_DMAPause
 3788              		.syntax unified
 3789              		.thumb
 3790              		.thumb_func
 3791              		.fpu fpv5-d16
 3793              	HAL_SPI_DMAPause:
 3794              	.LFB156:
2570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 3795              		.loc 1 2570 0
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 0
 3798              		@ frame_needed = 0, uses_anonymous_args = 0
 3799              		@ link register save eliminated.
 3800              	.LVL273:
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3801              		.loc 1 2572 0
 3802 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3803 0004 012B     		cmp	r3, #1
 3804 0006 0CD0     		beq	.L344
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3805              		.loc 1 2572 0 is_stmt 0 discriminator 2
 3806 0008 0123     		movs	r3, #1
 3807 000a 80F85C30 		strb	r3, [r0, #92]
2575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3808              		.loc 1 2575 0 is_stmt 1 discriminator 2
 3809 000e 0268     		ldr	r2, [r0]
 3810 0010 5368     		ldr	r3, [r2, #4]
 3811 0012 23F00303 		bic	r3, r3, #3
 3812 0016 5360     		str	r3, [r2, #4]
2578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3813              		.loc 1 2578 0 discriminator 2
 3814 0018 0023     		movs	r3, #0
 3815 001a 80F85C30 		strb	r3, [r0, #92]
2580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3816              		.loc 1 2580 0 discriminator 2
 3817 001e 1846     		mov	r0, r3
 3818              	.LVL274:
 3819 0020 7047     		bx	lr
 3820              	.LVL275:
ARM GAS  /tmp/ccQwr80L.s 			page 153


 3821              	.L344:
2572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3822              		.loc 1 2572 0
 3823 0022 0220     		movs	r0, #2
 3824              	.LVL276:
2581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3825              		.loc 1 2581 0
 3826 0024 7047     		bx	lr
 3827              		.cfi_endproc
 3828              	.LFE156:
 3830              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3831              		.align	1
 3832              		.global	HAL_SPI_DMAResume
 3833              		.syntax unified
 3834              		.thumb
 3835              		.thumb_func
 3836              		.fpu fpv5-d16
 3838              	HAL_SPI_DMAResume:
 3839              	.LFB157:
2590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Process Locked */
 3840              		.loc 1 2590 0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 0
 3843              		@ frame_needed = 0, uses_anonymous_args = 0
 3844              		@ link register save eliminated.
 3845              	.LVL277:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3846              		.loc 1 2592 0
 3847 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3848 0004 012B     		cmp	r3, #1
 3849 0006 0CD0     		beq	.L347
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3850              		.loc 1 2592 0 is_stmt 0 discriminator 2
 3851 0008 0123     		movs	r3, #1
 3852 000a 80F85C30 		strb	r3, [r0, #92]
2595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3853              		.loc 1 2595 0 is_stmt 1 discriminator 2
 3854 000e 0268     		ldr	r2, [r0]
 3855 0010 5368     		ldr	r3, [r2, #4]
 3856 0012 43F00303 		orr	r3, r3, #3
 3857 0016 5360     		str	r3, [r2, #4]
2598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3858              		.loc 1 2598 0 discriminator 2
 3859 0018 0023     		movs	r3, #0
 3860 001a 80F85C30 		strb	r3, [r0, #92]
2600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 3861              		.loc 1 2600 0 discriminator 2
 3862 001e 1846     		mov	r0, r3
 3863              	.LVL278:
 3864 0020 7047     		bx	lr
 3865              	.LVL279:
 3866              	.L347:
2592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3867              		.loc 1 2592 0
 3868 0022 0220     		movs	r0, #2
 3869              	.LVL280:
2601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 154


 3870              		.loc 1 2601 0
 3871 0024 7047     		bx	lr
 3872              		.cfi_endproc
 3873              	.LFE157:
 3875              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3876              		.align	1
 3877              		.global	HAL_SPI_DMAStop
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu fpv5-d16
 3883              	HAL_SPI_DMAStop:
 3884              	.LFB158:
2610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 3885              		.loc 1 2610 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 0
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
 3889              	.LVL281:
 3890 0000 38B5     		push	{r3, r4, r5, lr}
 3891              	.LCFI41:
 3892              		.cfi_def_cfa_offset 16
 3893              		.cfi_offset 3, -16
 3894              		.cfi_offset 4, -12
 3895              		.cfi_offset 5, -8
 3896              		.cfi_offset 14, -4
 3897 0002 0446     		mov	r4, r0
 3898              	.LVL282:
2619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3899              		.loc 1 2619 0
 3900 0004 406D     		ldr	r0, [r0, #84]
 3901              	.LVL283:
 3902 0006 E0B1     		cbz	r0, .L351
2621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3903              		.loc 1 2621 0
 3904 0008 FFF7FEFF 		bl	HAL_DMA_Abort
 3905              	.LVL284:
 3906 000c 0546     		mov	r5, r0
 3907 000e 20B1     		cbz	r0, .L349
2623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3908              		.loc 1 2623 0
 3909 0010 236E     		ldr	r3, [r4, #96]
 3910 0012 43F01003 		orr	r3, r3, #16
 3911 0016 2366     		str	r3, [r4, #96]
 3912              	.LVL285:
2624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3913              		.loc 1 2624 0
 3914 0018 0125     		movs	r5, #1
 3915              	.LVL286:
 3916              	.L349:
2628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 3917              		.loc 1 2628 0
 3918 001a A06D     		ldr	r0, [r4, #88]
 3919 001c 38B1     		cbz	r0, .L350
2630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 3920              		.loc 1 2630 0
 3921 001e FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/ccQwr80L.s 			page 155


 3922              	.LVL287:
 3923 0022 20B1     		cbz	r0, .L350
2632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3924              		.loc 1 2632 0
 3925 0024 236E     		ldr	r3, [r4, #96]
 3926 0026 43F01003 		orr	r3, r3, #16
 3927 002a 2366     		str	r3, [r4, #96]
 3928              	.LVL288:
2633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 3929              		.loc 1 2633 0
 3930 002c 0125     		movs	r5, #1
 3931              	.LVL289:
 3932              	.L350:
2638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3933              		.loc 1 2638 0
 3934 002e 2268     		ldr	r2, [r4]
 3935 0030 5368     		ldr	r3, [r2, #4]
 3936 0032 23F00303 		bic	r3, r3, #3
 3937 0036 5360     		str	r3, [r2, #4]
2639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   return errorcode;
 3938              		.loc 1 2639 0
 3939 0038 0123     		movs	r3, #1
 3940 003a 84F85D30 		strb	r3, [r4, #93]
2641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 3941              		.loc 1 2641 0
 3942 003e 2846     		mov	r0, r5
 3943 0040 38BD     		pop	{r3, r4, r5, pc}
 3944              	.LVL290:
 3945              	.L351:
2611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
 3946              		.loc 1 2611 0
 3947 0042 0025     		movs	r5, #0
 3948 0044 E9E7     		b	.L349
 3949              		.cfi_endproc
 3950              	.LFE158:
 3952              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3953              		.align	1
 3954              		.weak	HAL_SPI_TxCpltCallback
 3955              		.syntax unified
 3956              		.thumb
 3957              		.thumb_func
 3958              		.fpu fpv5-d16
 3960              	HAL_SPI_TxCpltCallback:
 3961              	.LFB160:
2756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3962              		.loc 1 2756 0
 3963              		.cfi_startproc
 3964              		@ args = 0, pretend = 0, frame = 0
 3965              		@ frame_needed = 0, uses_anonymous_args = 0
 3966              		@ link register save eliminated.
 3967              	.LVL291:
 3968 0000 7047     		bx	lr
 3969              		.cfi_endproc
 3970              	.LFE160:
 3972              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3973              		.align	1
 3974              		.weak	HAL_SPI_RxCpltCallback
ARM GAS  /tmp/ccQwr80L.s 			page 156


 3975              		.syntax unified
 3976              		.thumb
 3977              		.thumb_func
 3978              		.fpu fpv5-d16
 3980              	HAL_SPI_RxCpltCallback:
 3981              	.LFB161:
2772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 3982              		.loc 1 2772 0
 3983              		.cfi_startproc
 3984              		@ args = 0, pretend = 0, frame = 0
 3985              		@ frame_needed = 0, uses_anonymous_args = 0
 3986              		@ link register save eliminated.
 3987              	.LVL292:
 3988 0000 7047     		bx	lr
 3989              		.cfi_endproc
 3990              	.LFE161:
 3992              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3993              		.align	1
 3994              		.weak	HAL_SPI_TxRxCpltCallback
 3995              		.syntax unified
 3996              		.thumb
 3997              		.thumb_func
 3998              		.fpu fpv5-d16
 4000              	HAL_SPI_TxRxCpltCallback:
 4001              	.LFB162:
2788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4002              		.loc 1 2788 0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 0
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
 4006              		@ link register save eliminated.
 4007              	.LVL293:
 4008 0000 7047     		bx	lr
 4009              		.cfi_endproc
 4010              	.LFE162:
 4012              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4013              		.align	1
 4014              		.weak	HAL_SPI_TxHalfCpltCallback
 4015              		.syntax unified
 4016              		.thumb
 4017              		.thumb_func
 4018              		.fpu fpv5-d16
 4020              	HAL_SPI_TxHalfCpltCallback:
 4021              	.LFB163:
2804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4022              		.loc 1 2804 0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 0
 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026              		@ link register save eliminated.
 4027              	.LVL294:
 4028 0000 7047     		bx	lr
 4029              		.cfi_endproc
 4030              	.LFE163:
 4032              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 4033              		.align	1
 4034              		.syntax unified
ARM GAS  /tmp/ccQwr80L.s 			page 157


 4035              		.thumb
 4036              		.thumb_func
 4037              		.fpu fpv5-d16
 4039              	SPI_DMAHalfTransmitCplt:
 4040              	.LFB173:
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4041              		.loc 1 3183 0
 4042              		.cfi_startproc
 4043              		@ args = 0, pretend = 0, frame = 0
 4044              		@ frame_needed = 0, uses_anonymous_args = 0
 4045              	.LVL295:
3183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4046              		.loc 1 3183 0
 4047 0000 08B5     		push	{r3, lr}
 4048              	.LCFI42:
 4049              		.cfi_def_cfa_offset 8
 4050              		.cfi_offset 3, -8
 4051              		.cfi_offset 14, -4
 4052              	.LVL296:
3190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4053              		.loc 1 3190 0
 4054 0002 806B     		ldr	r0, [r0, #56]
 4055              	.LVL297:
 4056 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 4057              	.LVL298:
 4058 0008 08BD     		pop	{r3, pc}
 4059              		.cfi_endproc
 4060              	.LFE173:
 4062              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4063              		.align	1
 4064              		.weak	HAL_SPI_RxHalfCpltCallback
 4065              		.syntax unified
 4066              		.thumb
 4067              		.thumb_func
 4068              		.fpu fpv5-d16
 4070              	HAL_SPI_RxHalfCpltCallback:
 4071              	.LFB164:
2820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4072              		.loc 1 2820 0
 4073              		.cfi_startproc
 4074              		@ args = 0, pretend = 0, frame = 0
 4075              		@ frame_needed = 0, uses_anonymous_args = 0
 4076              		@ link register save eliminated.
 4077              	.LVL299:
 4078 0000 7047     		bx	lr
 4079              		.cfi_endproc
 4080              	.LFE164:
 4082              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 4083              		.align	1
 4084              		.syntax unified
 4085              		.thumb
 4086              		.thumb_func
 4087              		.fpu fpv5-d16
 4089              	SPI_DMAHalfReceiveCplt:
 4090              	.LFB174:
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4091              		.loc 1 3201 0
ARM GAS  /tmp/ccQwr80L.s 			page 158


 4092              		.cfi_startproc
 4093              		@ args = 0, pretend = 0, frame = 0
 4094              		@ frame_needed = 0, uses_anonymous_args = 0
 4095              	.LVL300:
3201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4096              		.loc 1 3201 0
 4097 0000 08B5     		push	{r3, lr}
 4098              	.LCFI43:
 4099              		.cfi_def_cfa_offset 8
 4100              		.cfi_offset 3, -8
 4101              		.cfi_offset 14, -4
 4102              	.LVL301:
3208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4103              		.loc 1 3208 0
 4104 0002 806B     		ldr	r0, [r0, #56]
 4105              	.LVL302:
 4106 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 4107              	.LVL303:
 4108 0008 08BD     		pop	{r3, pc}
 4109              		.cfi_endproc
 4110              	.LFE174:
 4112              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4113              		.align	1
 4114              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4115              		.syntax unified
 4116              		.thumb
 4117              		.thumb_func
 4118              		.fpu fpv5-d16
 4120              	HAL_SPI_TxRxHalfCpltCallback:
 4121              	.LFB165:
2836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4122              		.loc 1 2836 0
 4123              		.cfi_startproc
 4124              		@ args = 0, pretend = 0, frame = 0
 4125              		@ frame_needed = 0, uses_anonymous_args = 0
 4126              		@ link register save eliminated.
 4127              	.LVL304:
 4128 0000 7047     		bx	lr
 4129              		.cfi_endproc
 4130              	.LFE165:
 4132              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 4133              		.align	1
 4134              		.syntax unified
 4135              		.thumb
 4136              		.thumb_func
 4137              		.fpu fpv5-d16
 4139              	SPI_DMAHalfTransmitReceiveCplt:
 4140              	.LFB175:
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4141              		.loc 1 3219 0
 4142              		.cfi_startproc
 4143              		@ args = 0, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              	.LVL305:
3219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4146              		.loc 1 3219 0
 4147 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccQwr80L.s 			page 159


 4148              	.LCFI44:
 4149              		.cfi_def_cfa_offset 8
 4150              		.cfi_offset 3, -8
 4151              		.cfi_offset 14, -4
 4152              	.LVL306:
3226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4153              		.loc 1 3226 0
 4154 0002 806B     		ldr	r0, [r0, #56]
 4155              	.LVL307:
 4156 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 4157              	.LVL308:
 4158 0008 08BD     		pop	{r3, pc}
 4159              		.cfi_endproc
 4160              	.LFE175:
 4162              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4163              		.align	1
 4164              		.weak	HAL_SPI_ErrorCallback
 4165              		.syntax unified
 4166              		.thumb
 4167              		.thumb_func
 4168              		.fpu fpv5-d16
 4170              	HAL_SPI_ErrorCallback:
 4171              	.LFB166:
2852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 4172              		.loc 1 2852 0
 4173              		.cfi_startproc
 4174              		@ args = 0, pretend = 0, frame = 0
 4175              		@ frame_needed = 0, uses_anonymous_args = 0
 4176              		@ link register save eliminated.
 4177              	.LVL309:
 4178 0000 7047     		bx	lr
 4179              		.cfi_endproc
 4180              	.LFE166:
 4182              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 4183              		.align	1
 4184              		.syntax unified
 4185              		.thumb
 4186              		.thumb_func
 4187              		.fpu fpv5-d16
 4189              	SPI_CloseTx_ISR:
 4190              	.LFB194:
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4191              		.loc 1 4098 0
 4192              		.cfi_startproc
 4193              		@ args = 0, pretend = 0, frame = 8
 4194              		@ frame_needed = 0, uses_anonymous_args = 0
 4195              	.LVL310:
4098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4196              		.loc 1 4098 0
 4197 0000 10B5     		push	{r4, lr}
 4198              	.LCFI45:
 4199              		.cfi_def_cfa_offset 8
 4200              		.cfi_offset 4, -8
 4201              		.cfi_offset 14, -4
 4202 0002 82B0     		sub	sp, sp, #8
 4203              	.LCFI46:
 4204              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccQwr80L.s 			page 160


 4205 0004 0446     		mov	r4, r0
4102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4206              		.loc 1 4102 0
 4207 0006 FFF7FEFF 		bl	HAL_GetTick
 4208              	.LVL311:
4105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4209              		.loc 1 4105 0
 4210 000a 2268     		ldr	r2, [r4]
 4211 000c 5368     		ldr	r3, [r2, #4]
 4212 000e 23F0A003 		bic	r3, r3, #160
 4213 0012 5360     		str	r3, [r2, #4]
4108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4214              		.loc 1 4108 0
 4215 0014 0246     		mov	r2, r0
 4216 0016 6421     		movs	r1, #100
 4217 0018 2046     		mov	r0, r4
 4218              	.LVL312:
 4219 001a FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4220              	.LVL313:
 4221 001e 18B1     		cbz	r0, .L367
4110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4222              		.loc 1 4110 0
 4223 0020 236E     		ldr	r3, [r4, #96]
 4224 0022 43F02003 		orr	r3, r3, #32
 4225 0026 2366     		str	r3, [r4, #96]
 4226              	.L367:
4114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4227              		.loc 1 4114 0
 4228 0028 A368     		ldr	r3, [r4, #8]
 4229 002a 33B9     		cbnz	r3, .L368
 4230              	.LBB5:
4116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4231              		.loc 1 4116 0
 4232 002c 0193     		str	r3, [sp, #4]
 4233 002e 2368     		ldr	r3, [r4]
 4234 0030 DA68     		ldr	r2, [r3, #12]
 4235 0032 0192     		str	r2, [sp, #4]
 4236 0034 9B68     		ldr	r3, [r3, #8]
 4237 0036 0193     		str	r3, [sp, #4]
 4238 0038 019B     		ldr	r3, [sp, #4]
 4239              	.L368:
 4240              	.LBE5:
4119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4241              		.loc 1 4119 0
 4242 003a 0123     		movs	r3, #1
 4243 003c 84F85D30 		strb	r3, [r4, #93]
4120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4244              		.loc 1 4120 0
 4245 0040 236E     		ldr	r3, [r4, #96]
 4246 0042 23B9     		cbnz	r3, .L372
4135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4247              		.loc 1 4135 0
 4248 0044 2046     		mov	r0, r4
 4249 0046 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4250              	.LVL314:
 4251              	.L366:
4138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 161


 4252              		.loc 1 4138 0
 4253 004a 02B0     		add	sp, sp, #8
 4254              	.LCFI47:
 4255              		.cfi_remember_state
 4256              		.cfi_def_cfa_offset 8
 4257              		@ sp needed
 4258 004c 10BD     		pop	{r4, pc}
 4259              	.LVL315:
 4260              	.L372:
 4261              	.LCFI48:
 4262              		.cfi_restore_state
4126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4263              		.loc 1 4126 0
 4264 004e 2046     		mov	r0, r4
 4265 0050 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4266              	.LVL316:
 4267 0054 F9E7     		b	.L366
 4268              		.cfi_endproc
 4269              	.LFE194:
 4271              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 4272              		.align	1
 4273              		.syntax unified
 4274              		.thumb
 4275              		.thumb_func
 4276              		.fpu fpv5-d16
 4278              	SPI_TxISR_8BIT:
 4279              	.LFB186:
3733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 4280              		.loc 1 3733 0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 0
 4283              		@ frame_needed = 0, uses_anonymous_args = 0
 4284              	.LVL317:
 4285 0000 08B5     		push	{r3, lr}
 4286              	.LCFI49:
 4287              		.cfi_def_cfa_offset 8
 4288              		.cfi_offset 3, -8
 4289              		.cfi_offset 14, -4
3734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 4290              		.loc 1 3734 0
 4291 0002 0368     		ldr	r3, [r0]
 4292 0004 826B     		ldr	r2, [r0, #56]
 4293 0006 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4294 0008 1A73     		strb	r2, [r3, #12]
3735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4295              		.loc 1 3735 0
 4296 000a 836B     		ldr	r3, [r0, #56]
 4297 000c 0133     		adds	r3, r3, #1
 4298 000e 8363     		str	r3, [r0, #56]
3736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4299              		.loc 1 3736 0
 4300 0010 C38F     		ldrh	r3, [r0, #62]
 4301 0012 9BB2     		uxth	r3, r3
 4302 0014 013B     		subs	r3, r3, #1
 4303 0016 9BB2     		uxth	r3, r3
 4304 0018 C387     		strh	r3, [r0, #62]	@ movhi
3738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
ARM GAS  /tmp/ccQwr80L.s 			page 162


 4305              		.loc 1 3738 0
 4306 001a C38F     		ldrh	r3, [r0, #62]
 4307 001c 9BB2     		uxth	r3, r3
 4308 001e 03B1     		cbz	r3, .L376
 4309              	.LVL318:
 4310              	.L373:
 4311 0020 08BD     		pop	{r3, pc}
 4312              	.LVL319:
 4313              	.L376:
3747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4314              		.loc 1 3747 0
 4315 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4316              	.LVL320:
3749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4317              		.loc 1 3749 0
 4318 0026 FBE7     		b	.L373
 4319              		.cfi_endproc
 4320              	.LFE186:
 4322              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 4323              		.align	1
 4324              		.syntax unified
 4325              		.thumb
 4326              		.thumb_func
 4327              		.fpu fpv5-d16
 4329              	SPI_TxISR_16BIT:
 4330              	.LFB187:
3758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4331              		.loc 1 3758 0
 4332              		.cfi_startproc
 4333              		@ args = 0, pretend = 0, frame = 0
 4334              		@ frame_needed = 0, uses_anonymous_args = 0
 4335              	.LVL321:
 4336 0000 08B5     		push	{r3, lr}
 4337              	.LCFI50:
 4338              		.cfi_def_cfa_offset 8
 4339              		.cfi_offset 3, -8
 4340              		.cfi_offset 14, -4
3760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4341              		.loc 1 3760 0
 4342 0002 0368     		ldr	r3, [r0]
 4343 0004 826B     		ldr	r2, [r0, #56]
 4344 0006 1288     		ldrh	r2, [r2]
 4345 0008 DA60     		str	r2, [r3, #12]
3761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4346              		.loc 1 3761 0
 4347 000a 836B     		ldr	r3, [r0, #56]
 4348 000c 0233     		adds	r3, r3, #2
 4349 000e 8363     		str	r3, [r0, #56]
3762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4350              		.loc 1 3762 0
 4351 0010 C38F     		ldrh	r3, [r0, #62]
 4352 0012 9BB2     		uxth	r3, r3
 4353 0014 013B     		subs	r3, r3, #1
 4354 0016 9BB2     		uxth	r3, r3
 4355 0018 C387     		strh	r3, [r0, #62]	@ movhi
3764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4356              		.loc 1 3764 0
ARM GAS  /tmp/ccQwr80L.s 			page 163


 4357 001a C38F     		ldrh	r3, [r0, #62]
 4358 001c 9BB2     		uxth	r3, r3
 4359 001e 03B1     		cbz	r3, .L380
 4360              	.LVL322:
 4361              	.L377:
 4362 0020 08BD     		pop	{r3, pc}
 4363              	.LVL323:
 4364              	.L380:
3773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4365              		.loc 1 3773 0
 4366 0022 FFF7FEFF 		bl	SPI_CloseTx_ISR
 4367              	.LVL324:
3775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4368              		.loc 1 3775 0
 4369 0026 FBE7     		b	.L377
 4370              		.cfi_endproc
 4371              	.LFE187:
 4373              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 4374              		.align	1
 4375              		.syntax unified
 4376              		.thumb
 4377              		.thumb_func
 4378              		.fpu fpv5-d16
 4380              	SPI_CloseRx_ISR:
 4381              	.LFB193:
4041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
 4382              		.loc 1 4041 0
 4383              		.cfi_startproc
 4384              		@ args = 0, pretend = 0, frame = 0
 4385              		@ frame_needed = 0, uses_anonymous_args = 0
 4386              	.LVL325:
 4387 0000 10B5     		push	{r4, lr}
 4388              	.LCFI51:
 4389              		.cfi_def_cfa_offset 8
 4390              		.cfi_offset 4, -8
 4391              		.cfi_offset 14, -4
 4392 0002 0446     		mov	r4, r0
4043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4393              		.loc 1 4043 0
 4394 0004 0268     		ldr	r2, [r0]
 4395 0006 5368     		ldr	r3, [r2, #4]
 4396 0008 23F06003 		bic	r3, r3, #96
 4397 000c 5360     		str	r3, [r2, #4]
4046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4398              		.loc 1 4046 0
 4399 000e FFF7FEFF 		bl	HAL_GetTick
 4400              	.LVL326:
 4401 0012 0246     		mov	r2, r0
 4402 0014 6421     		movs	r1, #100
 4403 0016 2046     		mov	r0, r4
 4404 0018 FFF7FEFF 		bl	SPI_EndRxTransaction
 4405              	.LVL327:
 4406 001c 18B1     		cbz	r0, .L382
4048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4407              		.loc 1 4048 0
 4408 001e 236E     		ldr	r3, [r4, #96]
 4409 0020 43F02003 		orr	r3, r3, #32
ARM GAS  /tmp/ccQwr80L.s 			page 164


 4410 0024 2366     		str	r3, [r4, #96]
 4411              	.L382:
4050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4412              		.loc 1 4050 0
 4413 0026 0123     		movs	r3, #1
 4414 0028 84F85D30 		strb	r3, [r4, #93]
4068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4415              		.loc 1 4068 0
 4416 002c 236E     		ldr	r3, [r4, #96]
 4417 002e 1BB1     		cbz	r3, .L386
4083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4418              		.loc 1 4083 0
 4419 0030 2046     		mov	r0, r4
 4420 0032 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4421              	.LVL328:
 4422 0036 10BD     		pop	{r4, pc}
 4423              	.LVL329:
 4424              	.L386:
4074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4425              		.loc 1 4074 0
 4426 0038 2046     		mov	r0, r4
 4427 003a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4428              	.LVL330:
 4429 003e 10BD     		pop	{r4, pc}
 4430              		.cfi_endproc
 4431              	.LFE193:
 4433              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 4434              		.align	1
 4435              		.syntax unified
 4436              		.thumb
 4437              		.thumb_func
 4438              		.fpu fpv5-d16
 4440              	SPI_RxISR_8BIT:
 4441              	.LFB184:
3648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 4442              		.loc 1 3648 0
 4443              		.cfi_startproc
 4444              		@ args = 0, pretend = 0, frame = 0
 4445              		@ frame_needed = 0, uses_anonymous_args = 0
 4446              	.LVL331:
 4447 0000 08B5     		push	{r3, lr}
 4448              	.LCFI52:
 4449              		.cfi_def_cfa_offset 8
 4450              		.cfi_offset 3, -8
 4451              		.cfi_offset 14, -4
3649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 4452              		.loc 1 3649 0
 4453 0002 036C     		ldr	r3, [r0, #64]
 4454 0004 0268     		ldr	r2, [r0]
 4455 0006 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4456 0008 1A70     		strb	r2, [r3]
3650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4457              		.loc 1 3650 0
 4458 000a 036C     		ldr	r3, [r0, #64]
 4459 000c 0133     		adds	r3, r3, #1
 4460 000e 0364     		str	r3, [r0, #64]
3651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
ARM GAS  /tmp/ccQwr80L.s 			page 165


 4461              		.loc 1 3651 0
 4462 0010 B0F84630 		ldrh	r3, [r0, #70]
 4463 0014 9BB2     		uxth	r3, r3
 4464 0016 013B     		subs	r3, r3, #1
 4465 0018 9BB2     		uxth	r3, r3
 4466 001a A0F84630 		strh	r3, [r0, #70]	@ movhi
3661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4467              		.loc 1 3661 0
 4468 001e B0F84630 		ldrh	r3, [r0, #70]
 4469 0022 9BB2     		uxth	r3, r3
 4470 0024 03B1     		cbz	r3, .L390
 4471              	.LVL332:
 4472              	.L387:
 4473 0026 08BD     		pop	{r3, pc}
 4474              	.LVL333:
 4475              	.L390:
3670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4476              		.loc 1 3670 0
 4477 0028 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4478              	.LVL334:
3672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4479              		.loc 1 3672 0
 4480 002c FBE7     		b	.L387
 4481              		.cfi_endproc
 4482              	.LFE184:
 4484              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
 4485              		.align	1
 4486              		.syntax unified
 4487              		.thumb
 4488              		.thumb_func
 4489              		.fpu fpv5-d16
 4491              	SPI_RxISR_16BIT:
 4492              	.LFB185:
3700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 4493              		.loc 1 3700 0
 4494              		.cfi_startproc
 4495              		@ args = 0, pretend = 0, frame = 0
 4496              		@ frame_needed = 0, uses_anonymous_args = 0
 4497              	.LVL335:
 4498 0000 08B5     		push	{r3, lr}
 4499              	.LCFI53:
 4500              		.cfi_def_cfa_offset 8
 4501              		.cfi_offset 3, -8
 4502              		.cfi_offset 14, -4
3701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4503              		.loc 1 3701 0
 4504 0002 036C     		ldr	r3, [r0, #64]
 4505 0004 0268     		ldr	r2, [r0]
 4506 0006 D268     		ldr	r2, [r2, #12]
 4507 0008 1A80     		strh	r2, [r3]	@ movhi
3702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4508              		.loc 1 3702 0
 4509 000a 036C     		ldr	r3, [r0, #64]
 4510 000c 0233     		adds	r3, r3, #2
 4511 000e 0364     		str	r3, [r0, #64]
3703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4512              		.loc 1 3703 0
ARM GAS  /tmp/ccQwr80L.s 			page 166


 4513 0010 B0F84630 		ldrh	r3, [r0, #70]
 4514 0014 9BB2     		uxth	r3, r3
 4515 0016 013B     		subs	r3, r3, #1
 4516 0018 9BB2     		uxth	r3, r3
 4517 001a A0F84630 		strh	r3, [r0, #70]	@ movhi
3713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4518              		.loc 1 3713 0
 4519 001e B0F84630 		ldrh	r3, [r0, #70]
 4520 0022 9BB2     		uxth	r3, r3
 4521 0024 03B1     		cbz	r3, .L394
 4522              	.LVL336:
 4523              	.L391:
 4524 0026 08BD     		pop	{r3, pc}
 4525              	.LVL337:
 4526              	.L394:
3722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4527              		.loc 1 3722 0
 4528 0028 FFF7FEFF 		bl	SPI_CloseRx_ISR
 4529              	.LVL338:
3724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4530              		.loc 1 3724 0
 4531 002c FBE7     		b	.L391
 4532              		.cfi_endproc
 4533              	.LFE185:
 4535              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 4536              		.align	1
 4537              		.syntax unified
 4538              		.thumb
 4539              		.thumb_func
 4540              		.fpu fpv5-d16
 4542              	SPI_CloseRxTx_ISR:
 4543              	.LFB192:
3964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4544              		.loc 1 3964 0
 4545              		.cfi_startproc
 4546              		@ args = 0, pretend = 0, frame = 0
 4547              		@ frame_needed = 0, uses_anonymous_args = 0
 4548              	.LVL339:
 4549 0000 10B5     		push	{r4, lr}
 4550              	.LCFI54:
 4551              		.cfi_def_cfa_offset 8
 4552              		.cfi_offset 4, -8
 4553              		.cfi_offset 14, -4
 4554 0002 0446     		mov	r4, r0
3968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4555              		.loc 1 3968 0
 4556 0004 FFF7FEFF 		bl	HAL_GetTick
 4557              	.LVL340:
3971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4558              		.loc 1 3971 0
 4559 0008 2268     		ldr	r2, [r4]
 4560 000a 5368     		ldr	r3, [r2, #4]
 4561 000c 23F02003 		bic	r3, r3, #32
 4562 0010 5360     		str	r3, [r2, #4]
3974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4563              		.loc 1 3974 0
 4564 0012 0246     		mov	r2, r0
ARM GAS  /tmp/ccQwr80L.s 			page 167


 4565 0014 6421     		movs	r1, #100
 4566 0016 2046     		mov	r0, r4
 4567              	.LVL341:
 4568 0018 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 4569              	.LVL342:
 4570 001c 18B1     		cbz	r0, .L396
3976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4571              		.loc 1 3976 0
 4572 001e 236E     		ldr	r3, [r4, #96]
 4573 0020 43F02003 		orr	r3, r3, #32
 4574 0024 2366     		str	r3, [r4, #96]
 4575              	.L396:
3996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4576              		.loc 1 3996 0
 4577 0026 236E     		ldr	r3, [r4, #96]
 4578 0028 93B9     		cbnz	r3, .L397
3998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 4579              		.loc 1 3998 0
 4580 002a 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 4581 002e DBB2     		uxtb	r3, r3
 4582 0030 042B     		cmp	r3, #4
 4583 0032 06D0     		beq	.L401
4010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user TxRx complete callback */
 4584              		.loc 1 4010 0
 4585 0034 0123     		movs	r3, #1
 4586 0036 84F85D30 		strb	r3, [r4, #93]
4015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4587              		.loc 1 4015 0
 4588 003a 2046     		mov	r0, r4
 4589 003c FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4590              	.LVL343:
 4591 0040 10BD     		pop	{r4, pc}
 4592              	.LVL344:
 4593              	.L401:
4000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         /* Call user Rx complete callback */
 4594              		.loc 1 4000 0
 4595 0042 0123     		movs	r3, #1
 4596 0044 84F85D30 		strb	r3, [r4, #93]
4005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4597              		.loc 1 4005 0
 4598 0048 2046     		mov	r0, r4
 4599 004a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4600              	.LVL345:
 4601 004e 10BD     		pop	{r4, pc}
 4602              	.LVL346:
 4603              	.L397:
4021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Call user error callback */
 4604              		.loc 1 4021 0
 4605 0050 0123     		movs	r3, #1
 4606 0052 84F85D30 		strb	r3, [r4, #93]
4026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4607              		.loc 1 4026 0
 4608 0056 2046     		mov	r0, r4
 4609 0058 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4610              	.LVL347:
 4611 005c 10BD     		pop	{r4, pc}
 4612              		.cfi_endproc
ARM GAS  /tmp/ccQwr80L.s 			page 168


 4613              	.LFE192:
 4615              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 4616              		.align	1
 4617              		.syntax unified
 4618              		.thumb
 4619              		.thumb_func
 4620              		.fpu fpv5-d16
 4622              	SPI_2linesTxISR_8BIT:
 4623              	.LFB181:
3491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in packing Bit mode */
 4624              		.loc 1 3491 0
 4625              		.cfi_startproc
 4626              		@ args = 0, pretend = 0, frame = 0
 4627              		@ frame_needed = 0, uses_anonymous_args = 0
 4628              	.LVL348:
 4629 0000 08B5     		push	{r3, lr}
 4630              	.LCFI55:
 4631              		.cfi_def_cfa_offset 8
 4632              		.cfi_offset 3, -8
 4633              		.cfi_offset 14, -4
3493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4634              		.loc 1 3493 0
 4635 0002 C38F     		ldrh	r3, [r0, #62]
 4636 0004 9BB2     		uxth	r3, r3
 4637 0006 012B     		cmp	r3, #1
 4638 0008 18D9     		bls	.L403
3495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr += sizeof(uint16_t);
 4639              		.loc 1 3495 0
 4640 000a 0368     		ldr	r3, [r0]
 4641 000c 826B     		ldr	r2, [r0, #56]
 4642 000e 1288     		ldrh	r2, [r2]
 4643 0010 DA60     		str	r2, [r3, #12]
3496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount -= 2U;
 4644              		.loc 1 3496 0
 4645 0012 836B     		ldr	r3, [r0, #56]
 4646 0014 0233     		adds	r3, r3, #2
 4647 0016 8363     		str	r3, [r0, #56]
3497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4648              		.loc 1 3497 0
 4649 0018 C38F     		ldrh	r3, [r0, #62]
 4650 001a 9BB2     		uxth	r3, r3
 4651 001c 023B     		subs	r3, r3, #2
 4652 001e 9BB2     		uxth	r3, r3
 4653 0020 C387     		strh	r3, [r0, #62]	@ movhi
 4654              	.L404:
3508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4655              		.loc 1 3508 0
 4656 0022 C38F     		ldrh	r3, [r0, #62]
 4657 0024 9BB2     		uxth	r3, r3
 4658 0026 43B9     		cbnz	r3, .L402
3522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4659              		.loc 1 3522 0
 4660 0028 0268     		ldr	r2, [r0]
 4661 002a 5368     		ldr	r3, [r2, #4]
 4662 002c 23F08003 		bic	r3, r3, #128
 4663 0030 5360     		str	r3, [r2, #4]
3524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQwr80L.s 			page 169


 4664              		.loc 1 3524 0
 4665 0032 B0F84630 		ldrh	r3, [r0, #70]
 4666 0036 9BB2     		uxth	r3, r3
 4667 0038 6BB1     		cbz	r3, .L407
 4668              	.LVL349:
 4669              	.L402:
 4670 003a 08BD     		pop	{r3, pc}
 4671              	.LVL350:
 4672              	.L403:
3502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pTxBuffPtr++;
 4673              		.loc 1 3502 0
 4674 003c 0368     		ldr	r3, [r0]
 4675 003e 826B     		ldr	r2, [r0, #56]
 4676 0040 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4677 0042 1A73     		strb	r2, [r3, #12]
3503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount--;
 4678              		.loc 1 3503 0
 4679 0044 836B     		ldr	r3, [r0, #56]
 4680 0046 0133     		adds	r3, r3, #1
 4681 0048 8363     		str	r3, [r0, #56]
3504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4682              		.loc 1 3504 0
 4683 004a C38F     		ldrh	r3, [r0, #62]
 4684 004c 9BB2     		uxth	r3, r3
 4685 004e 013B     		subs	r3, r3, #1
 4686 0050 9BB2     		uxth	r3, r3
 4687 0052 C387     		strh	r3, [r0, #62]	@ movhi
 4688 0054 E5E7     		b	.L404
 4689              	.L407:
3526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4690              		.loc 1 3526 0
 4691 0056 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4692              	.LVL351:
3529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4693              		.loc 1 3529 0
 4694 005a EEE7     		b	.L402
 4695              		.cfi_endproc
 4696              	.LFE181:
 4698              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 4699              		.align	1
 4700              		.syntax unified
 4701              		.thumb
 4702              		.thumb_func
 4703              		.fpu fpv5-d16
 4705              	SPI_2linesRxISR_8BIT:
 4706              	.LFB180:
3413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in packing mode */
 4707              		.loc 1 3413 0
 4708              		.cfi_startproc
 4709              		@ args = 0, pretend = 0, frame = 0
 4710              		@ frame_needed = 0, uses_anonymous_args = 0
 4711              	.LVL352:
 4712 0000 08B5     		push	{r3, lr}
 4713              	.LCFI56:
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 3, -8
 4716              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQwr80L.s 			page 170


3415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4717              		.loc 1 3415 0
 4718 0002 B0F84630 		ldrh	r3, [r0, #70]
 4719 0006 9BB2     		uxth	r3, r3
 4720 0008 012B     		cmp	r3, #1
 4721 000a 25D9     		bls	.L409
3417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr += sizeof(uint16_t);
 4722              		.loc 1 3417 0
 4723 000c 036C     		ldr	r3, [r0, #64]
 4724 000e 0268     		ldr	r2, [r0]
 4725 0010 D268     		ldr	r2, [r2, #12]
 4726 0012 1A80     		strh	r2, [r3]	@ movhi
3418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount -= 2U;
 4727              		.loc 1 3418 0
 4728 0014 036C     		ldr	r3, [r0, #64]
 4729 0016 0233     		adds	r3, r3, #2
 4730 0018 0364     		str	r3, [r0, #64]
3419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     if (hspi->RxXferCount == 1U)
 4731              		.loc 1 3419 0
 4732 001a B0F84630 		ldrh	r3, [r0, #70]
 4733 001e 9BB2     		uxth	r3, r3
 4734 0020 023B     		subs	r3, r3, #2
 4735 0022 9BB2     		uxth	r3, r3
 4736 0024 A0F84630 		strh	r3, [r0, #70]	@ movhi
3420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4737              		.loc 1 3420 0
 4738 0028 B0F84630 		ldrh	r3, [r0, #70]
 4739 002c 9BB2     		uxth	r3, r3
 4740 002e 012B     		cmp	r3, #1
 4741 0030 0CD0     		beq	.L413
 4742              	.L410:
3435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4743              		.loc 1 3435 0
 4744 0032 B0F84630 		ldrh	r3, [r0, #70]
 4745 0036 9BB2     		uxth	r3, r3
 4746 0038 3BB9     		cbnz	r3, .L408
3447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4747              		.loc 1 3447 0
 4748 003a 0268     		ldr	r2, [r0]
 4749 003c 5368     		ldr	r3, [r2, #4]
 4750 003e 23F06003 		bic	r3, r3, #96
 4751 0042 5360     		str	r3, [r2, #4]
3449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4752              		.loc 1 3449 0
 4753 0044 C38F     		ldrh	r3, [r0, #62]
 4754 0046 9BB2     		uxth	r3, r3
 4755 0048 ABB1     		cbz	r3, .L414
 4756              	.LVL353:
 4757              	.L408:
 4758 004a 08BD     		pop	{r3, pc}
 4759              	.LVL354:
 4760              	.L413:
3423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4761              		.loc 1 3423 0
 4762 004c 0268     		ldr	r2, [r0]
 4763 004e 5368     		ldr	r3, [r2, #4]
 4764 0050 43F48053 		orr	r3, r3, #4096
ARM GAS  /tmp/ccQwr80L.s 			page 171


 4765 0054 5360     		str	r3, [r2, #4]
 4766 0056 ECE7     		b	.L410
 4767              	.L409:
3429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->pRxBuffPtr++;
 4768              		.loc 1 3429 0
 4769 0058 036C     		ldr	r3, [r0, #64]
 4770 005a 0268     		ldr	r2, [r0]
 4771 005c 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 4772 005e 1A70     		strb	r2, [r3]
3430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount--;
 4773              		.loc 1 3430 0
 4774 0060 036C     		ldr	r3, [r0, #64]
 4775 0062 0133     		adds	r3, r3, #1
 4776 0064 0364     		str	r3, [r0, #64]
3431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 4777              		.loc 1 3431 0
 4778 0066 B0F84630 		ldrh	r3, [r0, #70]
 4779 006a 9BB2     		uxth	r3, r3
 4780 006c 013B     		subs	r3, r3, #1
 4781 006e 9BB2     		uxth	r3, r3
 4782 0070 A0F84630 		strh	r3, [r0, #70]	@ movhi
 4783 0074 DDE7     		b	.L410
 4784              	.L414:
3451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4785              		.loc 1 3451 0
 4786 0076 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4787              	.LVL355:
3454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4788              		.loc 1 3454 0
 4789 007a E6E7     		b	.L408
 4790              		.cfi_endproc
 4791              	.LFE180:
 4793              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
 4794              		.align	1
 4795              		.syntax unified
 4796              		.thumb
 4797              		.thumb_func
 4798              		.fpu fpv5-d16
 4800              	SPI_2linesTxISR_16BIT:
 4801              	.LFB183:
3590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 4802              		.loc 1 3590 0
 4803              		.cfi_startproc
 4804              		@ args = 0, pretend = 0, frame = 0
 4805              		@ frame_needed = 0, uses_anonymous_args = 0
 4806              	.LVL356:
 4807 0000 08B5     		push	{r3, lr}
 4808              	.LCFI57:
 4809              		.cfi_def_cfa_offset 8
 4810              		.cfi_offset 3, -8
 4811              		.cfi_offset 14, -4
3592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 4812              		.loc 1 3592 0
 4813 0002 0368     		ldr	r3, [r0]
 4814 0004 826B     		ldr	r2, [r0, #56]
 4815 0006 1288     		ldrh	r2, [r2]
 4816 0008 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccQwr80L.s 			page 172


3593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount--;
 4817              		.loc 1 3593 0
 4818 000a 836B     		ldr	r3, [r0, #56]
 4819 000c 0233     		adds	r3, r3, #2
 4820 000e 8363     		str	r3, [r0, #56]
3594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4821              		.loc 1 3594 0
 4822 0010 C38F     		ldrh	r3, [r0, #62]
 4823 0012 9BB2     		uxth	r3, r3
 4824 0014 013B     		subs	r3, r3, #1
 4825 0016 9BB2     		uxth	r3, r3
 4826 0018 C387     		strh	r3, [r0, #62]	@ movhi
3597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4827              		.loc 1 3597 0
 4828 001a C38F     		ldrh	r3, [r0, #62]
 4829 001c 9BB2     		uxth	r3, r3
 4830 001e 43B9     		cbnz	r3, .L415
3611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4831              		.loc 1 3611 0
 4832 0020 0268     		ldr	r2, [r0]
 4833 0022 5368     		ldr	r3, [r2, #4]
 4834 0024 23F08003 		bic	r3, r3, #128
 4835 0028 5360     		str	r3, [r2, #4]
3613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4836              		.loc 1 3613 0
 4837 002a B0F84630 		ldrh	r3, [r0, #70]
 4838 002e 9BB2     		uxth	r3, r3
 4839 0030 03B1     		cbz	r3, .L418
 4840              	.LVL357:
 4841              	.L415:
 4842 0032 08BD     		pop	{r3, pc}
 4843              	.LVL358:
 4844              	.L418:
3615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4845              		.loc 1 3615 0
 4846 0034 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4847              	.LVL359:
3618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4848              		.loc 1 3618 0
 4849 0038 FBE7     		b	.L415
 4850              		.cfi_endproc
 4851              	.LFE183:
 4853              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 4854              		.align	1
 4855              		.syntax unified
 4856              		.thumb
 4857              		.thumb_func
 4858              		.fpu fpv5-d16
 4860              	SPI_2linesRxISR_16BIT:
 4861              	.LFB182:
3538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
 4862              		.loc 1 3538 0
 4863              		.cfi_startproc
 4864              		@ args = 0, pretend = 0, frame = 0
 4865              		@ frame_needed = 0, uses_anonymous_args = 0
 4866              	.LVL360:
 4867 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccQwr80L.s 			page 173


 4868              	.LCFI58:
 4869              		.cfi_def_cfa_offset 8
 4870              		.cfi_offset 3, -8
 4871              		.cfi_offset 14, -4
3540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 4872              		.loc 1 3540 0
 4873 0002 036C     		ldr	r3, [r0, #64]
 4874 0004 0268     		ldr	r2, [r0]
 4875 0006 D268     		ldr	r2, [r2, #12]
 4876 0008 1A80     		strh	r2, [r3]	@ movhi
3541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount--;
 4877              		.loc 1 3541 0
 4878 000a 036C     		ldr	r3, [r0, #64]
 4879 000c 0233     		adds	r3, r3, #2
 4880 000e 0364     		str	r3, [r0, #64]
3542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4881              		.loc 1 3542 0
 4882 0010 B0F84630 		ldrh	r3, [r0, #70]
 4883 0014 9BB2     		uxth	r3, r3
 4884 0016 013B     		subs	r3, r3, #1
 4885 0018 9BB2     		uxth	r3, r3
 4886 001a A0F84630 		strh	r3, [r0, #70]	@ movhi
3544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4887              		.loc 1 3544 0
 4888 001e B0F84630 		ldrh	r3, [r0, #70]
 4889 0022 9BB2     		uxth	r3, r3
 4890 0024 3BB9     		cbnz	r3, .L419
3555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4891              		.loc 1 3555 0
 4892 0026 0268     		ldr	r2, [r0]
 4893 0028 5368     		ldr	r3, [r2, #4]
 4894 002a 23F04003 		bic	r3, r3, #64
 4895 002e 5360     		str	r3, [r2, #4]
3557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4896              		.loc 1 3557 0
 4897 0030 C38F     		ldrh	r3, [r0, #62]
 4898 0032 9BB2     		uxth	r3, r3
 4899 0034 03B1     		cbz	r3, .L422
 4900              	.LVL361:
 4901              	.L419:
 4902 0036 08BD     		pop	{r3, pc}
 4903              	.LVL362:
 4904              	.L422:
3559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 4905              		.loc 1 3559 0
 4906 0038 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 4907              	.LVL363:
3562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4908              		.loc 1 3562 0
 4909 003c FBE7     		b	.L419
 4910              		.cfi_endproc
 4911              	.LFE182:
 4913              		.section	.text.SPI_DMAError,"ax",%progbits
 4914              		.align	1
 4915              		.syntax unified
 4916              		.thumb
 4917              		.thumb_func
ARM GAS  /tmp/ccQwr80L.s 			page 174


 4918              		.fpu fpv5-d16
 4920              	SPI_DMAError:
 4921              	.LFB176:
3237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4922              		.loc 1 3237 0
 4923              		.cfi_startproc
 4924              		@ args = 0, pretend = 0, frame = 0
 4925              		@ frame_needed = 0, uses_anonymous_args = 0
 4926              	.LVL364:
 4927 0000 08B5     		push	{r3, lr}
 4928              	.LCFI59:
 4929              		.cfi_def_cfa_offset 8
 4930              		.cfi_offset 3, -8
 4931              		.cfi_offset 14, -4
3238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4932              		.loc 1 3238 0
 4933 0002 806B     		ldr	r0, [r0, #56]
 4934              	.LVL365:
3241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4935              		.loc 1 3241 0
 4936 0004 0268     		ldr	r2, [r0]
 4937 0006 5368     		ldr	r3, [r2, #4]
 4938 0008 23F00303 		bic	r3, r3, #3
 4939 000c 5360     		str	r3, [r2, #4]
3243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4940              		.loc 1 3243 0
 4941 000e 036E     		ldr	r3, [r0, #96]
 4942 0010 43F01003 		orr	r3, r3, #16
 4943 0014 0366     		str	r3, [r0, #96]
3244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Call user error callback */
 4944              		.loc 1 3244 0
 4945 0016 0123     		movs	r3, #1
 4946 0018 80F85D30 		strb	r3, [r0, #93]
3249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 4947              		.loc 1 3249 0
 4948 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4949              	.LVL366:
 4950 0020 08BD     		pop	{r3, pc}
 4951              		.cfi_endproc
 4952              	.LFE176:
 4954              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 4955              		.align	1
 4956              		.syntax unified
 4957              		.thumb
 4958              		.thumb_func
 4959              		.fpu fpv5-d16
 4961              	SPI_DMATransmitCplt:
 4962              	.LFB170:
2942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 4963              		.loc 1 2942 0
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 8
 4966              		@ frame_needed = 0, uses_anonymous_args = 0
 4967              	.LVL367:
 4968 0000 30B5     		push	{r4, r5, lr}
 4969              	.LCFI60:
 4970              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccQwr80L.s 			page 175


 4971              		.cfi_offset 4, -12
 4972              		.cfi_offset 5, -8
 4973              		.cfi_offset 14, -4
 4974 0002 83B0     		sub	sp, sp, #12
 4975              	.LCFI61:
 4976              		.cfi_def_cfa_offset 24
 4977 0004 0546     		mov	r5, r0
2943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 4978              		.loc 1 2943 0
 4979 0006 846B     		ldr	r4, [r0, #56]
 4980              	.LVL368:
2947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4981              		.loc 1 2947 0
 4982 0008 FFF7FEFF 		bl	HAL_GetTick
 4983              	.LVL369:
2950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 4984              		.loc 1 2950 0
 4985 000c 2B68     		ldr	r3, [r5]
 4986 000e 1B68     		ldr	r3, [r3]
 4987 0010 13F4807F 		tst	r3, #256
 4988 0014 23D1     		bne	.L426
2953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4989              		.loc 1 2953 0
 4990 0016 2268     		ldr	r2, [r4]
 4991 0018 5368     		ldr	r3, [r2, #4]
 4992 001a 23F02003 		bic	r3, r3, #32
 4993 001e 5360     		str	r3, [r2, #4]
2956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 4994              		.loc 1 2956 0
 4995 0020 2268     		ldr	r2, [r4]
 4996 0022 5368     		ldr	r3, [r2, #4]
 4997 0024 23F00203 		bic	r3, r3, #2
 4998 0028 5360     		str	r3, [r2, #4]
2959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 4999              		.loc 1 2959 0
 5000 002a 0246     		mov	r2, r0
 5001 002c 6421     		movs	r1, #100
 5002 002e 2046     		mov	r0, r4
 5003              	.LVL370:
 5004 0030 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5005              	.LVL371:
 5006 0034 18B1     		cbz	r0, .L427
2961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5007              		.loc 1 2961 0
 5008 0036 236E     		ldr	r3, [r4, #96]
 5009 0038 43F02003 		orr	r3, r3, #32
 5010 003c 2366     		str	r3, [r4, #96]
 5011              	.L427:
2965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5012              		.loc 1 2965 0
 5013 003e A368     		ldr	r3, [r4, #8]
 5014 0040 33B9     		cbnz	r3, .L428
 5015              	.LBB6:
2967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5016              		.loc 1 2967 0
 5017 0042 0193     		str	r3, [sp, #4]
 5018 0044 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccQwr80L.s 			page 176


 5019 0046 DA68     		ldr	r2, [r3, #12]
 5020 0048 0192     		str	r2, [sp, #4]
 5021 004a 9B68     		ldr	r3, [r3, #8]
 5022 004c 0193     		str	r3, [sp, #4]
 5023 004e 019B     		ldr	r3, [sp, #4]
 5024              	.L428:
 5025              	.LBE6:
2970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5026              		.loc 1 2970 0
 5027 0050 0023     		movs	r3, #0
 5028 0052 E387     		strh	r3, [r4, #62]	@ movhi
2971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5029              		.loc 1 2971 0
 5030 0054 0123     		movs	r3, #1
 5031 0056 84F85D30 		strb	r3, [r4, #93]
2973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5032              		.loc 1 2973 0
 5033 005a 236E     		ldr	r3, [r4, #96]
 5034 005c 23B9     		cbnz	r3, .L431
 5035              	.L426:
2988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5036              		.loc 1 2988 0
 5037 005e 2046     		mov	r0, r4
 5038 0060 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5039              	.LVL372:
 5040              	.L425:
2990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5041              		.loc 1 2990 0
 5042 0064 03B0     		add	sp, sp, #12
 5043              	.LCFI62:
 5044              		.cfi_remember_state
 5045              		.cfi_def_cfa_offset 12
 5046              		@ sp needed
 5047 0066 30BD     		pop	{r4, r5, pc}
 5048              	.LVL373:
 5049              	.L431:
 5050              	.LCFI63:
 5051              		.cfi_restore_state
2979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5052              		.loc 1 2979 0
 5053 0068 2046     		mov	r0, r4
 5054 006a FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5055              	.LVL374:
2981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5056              		.loc 1 2981 0
 5057 006e F9E7     		b	.L425
 5058              		.cfi_endproc
 5059              	.LFE170:
 5061              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5062              		.align	1
 5063              		.syntax unified
 5064              		.thumb
 5065              		.thumb_func
 5066              		.fpu fpv5-d16
 5068              	SPI_DMAReceiveCplt:
 5069              	.LFB171:
2999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
ARM GAS  /tmp/ccQwr80L.s 			page 177


 5070              		.loc 1 2999 0
 5071              		.cfi_startproc
 5072              		@ args = 0, pretend = 0, frame = 0
 5073              		@ frame_needed = 0, uses_anonymous_args = 0
 5074              	.LVL375:
 5075 0000 38B5     		push	{r3, r4, r5, lr}
 5076              	.LCFI64:
 5077              		.cfi_def_cfa_offset 16
 5078              		.cfi_offset 3, -16
 5079              		.cfi_offset 4, -12
 5080              		.cfi_offset 5, -8
 5081              		.cfi_offset 14, -4
 5082 0002 0546     		mov	r5, r0
3000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 5083              		.loc 1 3000 0
 5084 0004 846B     		ldr	r4, [r0, #56]
 5085              	.LVL376:
3004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5086              		.loc 1 3004 0
 5087 0006 FFF7FEFF 		bl	HAL_GetTick
 5088              	.LVL377:
3007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5089              		.loc 1 3007 0
 5090 000a 2B68     		ldr	r3, [r5]
 5091 000c 1B68     		ldr	r3, [r3]
 5092 000e 13F4807F 		tst	r3, #256
 5093 0012 19D1     		bne	.L433
3010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5094              		.loc 1 3010 0
 5095 0014 2268     		ldr	r2, [r4]
 5096 0016 5368     		ldr	r3, [r2, #4]
 5097 0018 23F02003 		bic	r3, r3, #32
 5098 001c 5360     		str	r3, [r2, #4]
3048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5099              		.loc 1 3048 0
 5100 001e 2268     		ldr	r2, [r4]
 5101 0020 5368     		ldr	r3, [r2, #4]
 5102 0022 23F00303 		bic	r3, r3, #3
 5103 0026 5360     		str	r3, [r2, #4]
3051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5104              		.loc 1 3051 0
 5105 0028 0246     		mov	r2, r0
 5106 002a 6421     		movs	r1, #100
 5107 002c 2046     		mov	r0, r4
 5108              	.LVL378:
 5109 002e FFF7FEFF 		bl	SPI_EndRxTransaction
 5110              	.LVL379:
 5111 0032 08B1     		cbz	r0, .L434
3053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5112              		.loc 1 3053 0
 5113 0034 2023     		movs	r3, #32
 5114 0036 2366     		str	r3, [r4, #96]
 5115              	.L434:
3056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5116              		.loc 1 3056 0
 5117 0038 0023     		movs	r3, #0
 5118 003a A4F84630 		strh	r3, [r4, #70]	@ movhi
ARM GAS  /tmp/ccQwr80L.s 			page 178


3057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5119              		.loc 1 3057 0
 5120 003e 0123     		movs	r3, #1
 5121 0040 84F85D30 		strb	r3, [r4, #93]
3068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5122              		.loc 1 3068 0
 5123 0044 236E     		ldr	r3, [r4, #96]
 5124 0046 1BB9     		cbnz	r3, .L437
 5125              	.L433:
3083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5126              		.loc 1 3083 0
 5127 0048 2046     		mov	r0, r4
 5128 004a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5129              	.LVL380:
 5130 004e 38BD     		pop	{r3, r4, r5, pc}
 5131              	.LVL381:
 5132              	.L437:
3074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5133              		.loc 1 3074 0
 5134 0050 2046     		mov	r0, r4
 5135 0052 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5136              	.LVL382:
3076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5137              		.loc 1 3076 0
 5138 0056 38BD     		pop	{r3, r4, r5, pc}
 5139              		.cfi_endproc
 5140              	.LFE171:
 5142              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5143              		.align	1
 5144              		.syntax unified
 5145              		.thumb
 5146              		.thumb_func
 5147              		.fpu fpv5-d16
 5149              	SPI_DMATransmitReceiveCplt:
 5150              	.LFB172:
3094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5151              		.loc 1 3094 0
 5152              		.cfi_startproc
 5153              		@ args = 0, pretend = 0, frame = 0
 5154              		@ frame_needed = 0, uses_anonymous_args = 0
 5155              	.LVL383:
 5156 0000 38B5     		push	{r3, r4, r5, lr}
 5157              	.LCFI65:
 5158              		.cfi_def_cfa_offset 16
 5159              		.cfi_offset 3, -16
 5160              		.cfi_offset 4, -12
 5161              		.cfi_offset 5, -8
 5162              		.cfi_offset 14, -4
 5163 0002 0546     		mov	r5, r0
3095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t tickstart;
 5164              		.loc 1 3095 0
 5165 0004 846B     		ldr	r4, [r0, #56]
 5166              	.LVL384:
3099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5167              		.loc 1 3099 0
 5168 0006 FFF7FEFF 		bl	HAL_GetTick
 5169              	.LVL385:
ARM GAS  /tmp/ccQwr80L.s 			page 179


3102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5170              		.loc 1 3102 0
 5171 000a 2B68     		ldr	r3, [r5]
 5172 000c 1B68     		ldr	r3, [r3]
 5173 000e 13F4807F 		tst	r3, #256
 5174 0012 1CD1     		bne	.L439
3105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5175              		.loc 1 3105 0
 5176 0014 2268     		ldr	r2, [r4]
 5177 0016 5368     		ldr	r3, [r2, #4]
 5178 0018 23F02003 		bic	r3, r3, #32
 5179 001c 5360     		str	r3, [r2, #4]
3136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5180              		.loc 1 3136 0
 5181 001e 0246     		mov	r2, r0
 5182 0020 6421     		movs	r1, #100
 5183 0022 2046     		mov	r0, r4
 5184              	.LVL386:
 5185 0024 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5186              	.LVL387:
 5187 0028 18B1     		cbz	r0, .L440
3138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5188              		.loc 1 3138 0
 5189 002a 236E     		ldr	r3, [r4, #96]
 5190 002c 43F02003 		orr	r3, r3, #32
 5191 0030 2366     		str	r3, [r4, #96]
 5192              	.L440:
3142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5193              		.loc 1 3142 0
 5194 0032 2268     		ldr	r2, [r4]
 5195 0034 5368     		ldr	r3, [r2, #4]
 5196 0036 23F00303 		bic	r3, r3, #3
 5197 003a 5360     		str	r3, [r2, #4]
3144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5198              		.loc 1 3144 0
 5199 003c 0023     		movs	r3, #0
 5200 003e E387     		strh	r3, [r4, #62]	@ movhi
3145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5201              		.loc 1 3145 0
 5202 0040 A4F84630 		strh	r3, [r4, #70]	@ movhi
3146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5203              		.loc 1 3146 0
 5204 0044 0123     		movs	r3, #1
 5205 0046 84F85D30 		strb	r3, [r4, #93]
3157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5206              		.loc 1 3157 0
 5207 004a 236E     		ldr	r3, [r4, #96]
 5208 004c 1BB9     		cbnz	r3, .L443
 5209              	.L439:
3172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5210              		.loc 1 3172 0
 5211 004e 2046     		mov	r0, r4
 5212 0050 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5213              	.LVL388:
 5214 0054 38BD     		pop	{r3, r4, r5, pc}
 5215              	.LVL389:
 5216              	.L443:
ARM GAS  /tmp/ccQwr80L.s 			page 180


3163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5217              		.loc 1 3163 0
 5218 0056 2046     		mov	r0, r4
 5219 0058 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5220              	.LVL390:
3165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5221              		.loc 1 3165 0
 5222 005c 38BD     		pop	{r3, r4, r5, pc}
 5223              		.cfi_endproc
 5224              	.LFE172:
 5226              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 5227              		.align	1
 5228              		.global	HAL_SPI_IRQHandler
 5229              		.syntax unified
 5230              		.thumb
 5231              		.thumb_func
 5232              		.fpu fpv5-d16
 5234              	HAL_SPI_IRQHandler:
 5235              	.LFB159:
2650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 5236              		.loc 1 2650 0
 5237              		.cfi_startproc
 5238              		@ args = 0, pretend = 0, frame = 16
 5239              		@ frame_needed = 0, uses_anonymous_args = 0
 5240              	.LVL391:
 5241 0000 10B5     		push	{r4, lr}
 5242              	.LCFI66:
 5243              		.cfi_def_cfa_offset 8
 5244              		.cfi_offset 4, -8
 5245              		.cfi_offset 14, -4
 5246 0002 84B0     		sub	sp, sp, #16
 5247              	.LCFI67:
 5248              		.cfi_def_cfa_offset 24
 5249 0004 0446     		mov	r4, r0
2651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 5250              		.loc 1 2651 0
 5251 0006 0268     		ldr	r2, [r0]
 5252 0008 5168     		ldr	r1, [r2, #4]
 5253              	.LVL392:
2652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5254              		.loc 1 2652 0
 5255 000a 9368     		ldr	r3, [r2, #8]
 5256              	.LVL393:
2655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 5257              		.loc 1 2655 0
 5258 000c 03F04100 		and	r0, r3, #65
 5259              	.LVL394:
 5260 0010 0128     		cmp	r0, #1
 5261 0012 67D0     		beq	.L455
 5262              	.L445:
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5263              		.loc 1 2663 0
 5264 0014 13F0020F 		tst	r3, #2
 5265 0018 02D0     		beq	.L447
2663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5266              		.loc 1 2663 0 is_stmt 0 discriminator 1
 5267 001a 11F0800F 		tst	r1, #128
ARM GAS  /tmp/ccQwr80L.s 			page 181


 5268 001e 68D1     		bne	.L456
 5269              	.L447:
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5270              		.loc 1 2670 0 is_stmt 1
 5271 0020 13F4B07F 		tst	r3, #352
 5272 0024 68D0     		beq	.L444
2670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5273              		.loc 1 2670 0 is_stmt 0 discriminator 1
 5274 0026 11F0200F 		tst	r1, #32
 5275 002a 65D0     		beq	.L444
2673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5276              		.loc 1 2673 0 is_stmt 1
 5277 002c 13F0400F 		tst	r3, #64
 5278 0030 0FD0     		beq	.L448
2675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5279              		.loc 1 2675 0
 5280 0032 94F85D00 		ldrb	r0, [r4, #93]	@ zero_extendqisi2
 5281 0036 C0B2     		uxtb	r0, r0
 5282 0038 0328     		cmp	r0, #3
 5283 003a 5FD0     		beq	.L449
2677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5284              		.loc 1 2677 0
 5285 003c 206E     		ldr	r0, [r4, #96]
 5286 003e 40F00400 		orr	r0, r0, #4
 5287 0042 2066     		str	r0, [r4, #96]
 5288              	.LBB7:
2678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5289              		.loc 1 2678 0
 5290 0044 0020     		movs	r0, #0
 5291 0046 0090     		str	r0, [sp]
 5292 0048 D068     		ldr	r0, [r2, #12]
 5293 004a 0090     		str	r0, [sp]
 5294 004c 9068     		ldr	r0, [r2, #8]
 5295 004e 0090     		str	r0, [sp]
 5296 0050 0098     		ldr	r0, [sp]
 5297              	.L448:
 5298              	.LBE7:
2688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5299              		.loc 1 2688 0
 5300 0052 13F0200F 		tst	r3, #32
 5301 0056 0CD0     		beq	.L450
2690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 5302              		.loc 1 2690 0
 5303 0058 206E     		ldr	r0, [r4, #96]
 5304 005a 40F00100 		orr	r0, r0, #1
 5305 005e 2066     		str	r0, [r4, #96]
 5306              	.LBB8:
2691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5307              		.loc 1 2691 0
 5308 0060 0020     		movs	r0, #0
 5309 0062 0290     		str	r0, [sp, #8]
 5310 0064 9068     		ldr	r0, [r2, #8]
 5311 0066 0290     		str	r0, [sp, #8]
 5312 0068 1068     		ldr	r0, [r2]
 5313 006a 20F04000 		bic	r0, r0, #64
 5314 006e 1060     		str	r0, [r2]
 5315 0070 029A     		ldr	r2, [sp, #8]
ARM GAS  /tmp/ccQwr80L.s 			page 182


 5316              	.L450:
 5317              	.LBE8:
2695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5318              		.loc 1 2695 0
 5319 0072 13F4807F 		tst	r3, #256
 5320 0076 09D0     		beq	.L451
2697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 5321              		.loc 1 2697 0
 5322 0078 236E     		ldr	r3, [r4, #96]
 5323              	.LVL395:
 5324 007a 43F00803 		orr	r3, r3, #8
 5325 007e 2366     		str	r3, [r4, #96]
 5326              	.LBB9:
2698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5327              		.loc 1 2698 0
 5328 0080 0023     		movs	r3, #0
 5329 0082 0393     		str	r3, [sp, #12]
 5330 0084 2368     		ldr	r3, [r4]
 5331 0086 9B68     		ldr	r3, [r3, #8]
 5332 0088 0393     		str	r3, [sp, #12]
 5333 008a 039B     		ldr	r3, [sp, #12]
 5334              	.L451:
 5335              	.LBE9:
2701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5336              		.loc 1 2701 0
 5337 008c 236E     		ldr	r3, [r4, #96]
 5338 008e 002B     		cmp	r3, #0
 5339 0090 32D0     		beq	.L444
2704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5340              		.loc 1 2704 0
 5341 0092 2268     		ldr	r2, [r4]
 5342 0094 5368     		ldr	r3, [r2, #4]
 5343 0096 23F0E003 		bic	r3, r3, #224
 5344 009a 5360     		str	r3, [r2, #4]
2706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
 5345              		.loc 1 2706 0
 5346 009c 0123     		movs	r3, #1
 5347 009e 84F85D30 		strb	r3, [r4, #93]
2708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5348              		.loc 1 2708 0
 5349 00a2 11F0030F 		tst	r1, #3
 5350 00a6 31D0     		beq	.L452
2710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5351              		.loc 1 2710 0
 5352 00a8 2268     		ldr	r2, [r4]
 5353 00aa 5368     		ldr	r3, [r2, #4]
 5354 00ac 23F00303 		bic	r3, r3, #3
 5355 00b0 5360     		str	r3, [r2, #4]
2713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 5356              		.loc 1 2713 0
 5357 00b2 A36D     		ldr	r3, [r4, #88]
 5358 00b4 4BB1     		cbz	r3, .L453
2717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 5359              		.loc 1 2717 0
 5360 00b6 174A     		ldr	r2, .L457
 5361 00b8 1A65     		str	r2, [r3, #80]
2718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
ARM GAS  /tmp/ccQwr80L.s 			page 183


 5362              		.loc 1 2718 0
 5363 00ba A06D     		ldr	r0, [r4, #88]
 5364 00bc FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5365              	.LVL396:
 5366 00c0 18B1     		cbz	r0, .L453
2720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 5367              		.loc 1 2720 0
 5368 00c2 236E     		ldr	r3, [r4, #96]
 5369 00c4 43F04003 		orr	r3, r3, #64
 5370 00c8 2366     		str	r3, [r4, #96]
 5371              	.L453:
2724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         {
 5372              		.loc 1 2724 0
 5373 00ca 636D     		ldr	r3, [r4, #84]
 5374 00cc A3B1     		cbz	r3, .L444
2728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 5375              		.loc 1 2728 0
 5376 00ce 114A     		ldr	r2, .L457
 5377 00d0 1A65     		str	r2, [r3, #80]
2729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           {
 5378              		.loc 1 2729 0
 5379 00d2 606D     		ldr	r0, [r4, #84]
 5380 00d4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5381              	.LVL397:
 5382 00d8 70B1     		cbz	r0, .L444
2731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****           }
 5383              		.loc 1 2731 0
 5384 00da 236E     		ldr	r3, [r4, #96]
 5385 00dc 43F04003 		orr	r3, r3, #64
 5386 00e0 2366     		str	r3, [r4, #96]
 5387 00e2 09E0     		b	.L444
 5388              	.LVL398:
 5389              	.L455:
2656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5390              		.loc 1 2656 0
 5391 00e4 11F0400F 		tst	r1, #64
 5392 00e8 94D0     		beq	.L445
2658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 5393              		.loc 1 2658 0
 5394 00ea E36C     		ldr	r3, [r4, #76]
 5395              	.LVL399:
 5396 00ec 2046     		mov	r0, r4
 5397 00ee 9847     		blx	r3
 5398              	.LVL400:
2659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5399              		.loc 1 2659 0
 5400 00f0 02E0     		b	.L444
 5401              	.LVL401:
 5402              	.L456:
2665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     return;
 5403              		.loc 1 2665 0
 5404 00f2 236D     		ldr	r3, [r4, #80]
 5405              	.LVL402:
 5406 00f4 2046     		mov	r0, r4
 5407 00f6 9847     		blx	r3
 5408              	.LVL403:
 5409              	.L444:
ARM GAS  /tmp/ccQwr80L.s 			page 184


2747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5410              		.loc 1 2747 0
 5411 00f8 04B0     		add	sp, sp, #16
 5412              	.LCFI68:
 5413              		.cfi_remember_state
 5414              		.cfi_def_cfa_offset 8
 5415              		@ sp needed
 5416 00fa 10BD     		pop	{r4, pc}
 5417              	.LVL404:
 5418              	.L449:
 5419              	.LCFI69:
 5420              		.cfi_restore_state
 5421              	.LBB10:
2682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         return;
 5422              		.loc 1 2682 0
 5423 00fc 0023     		movs	r3, #0
 5424              	.LVL405:
 5425 00fe 0193     		str	r3, [sp, #4]
 5426 0100 D368     		ldr	r3, [r2, #12]
 5427 0102 0193     		str	r3, [sp, #4]
 5428 0104 9368     		ldr	r3, [r2, #8]
 5429 0106 0193     		str	r3, [sp, #4]
 5430 0108 019B     		ldr	r3, [sp, #4]
 5431              	.LBE10:
2683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5432              		.loc 1 2683 0
 5433 010a F5E7     		b	.L444
 5434              	.L452:
2741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5435              		.loc 1 2741 0
 5436 010c 2046     		mov	r0, r4
 5437 010e FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5438              	.LVL406:
 5439 0112 F1E7     		b	.L444
 5440              	.L458:
 5441              		.align	2
 5442              	.L457:
 5443 0114 00000000 		.word	SPI_DMAAbortOnError
 5444              		.cfi_endproc
 5445              	.LFE159:
 5447              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5448              		.align	1
 5449              		.syntax unified
 5450              		.thumb
 5451              		.thumb_func
 5452              		.fpu fpv5-d16
 5454              	SPI_DMAAbortOnError:
 5455              	.LFB177:
3260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5456              		.loc 1 3260 0
 5457              		.cfi_startproc
 5458              		@ args = 0, pretend = 0, frame = 0
 5459              		@ frame_needed = 0, uses_anonymous_args = 0
 5460              	.LVL407:
 5461 0000 08B5     		push	{r3, lr}
 5462              	.LCFI70:
 5463              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQwr80L.s 			page 185


 5464              		.cfi_offset 3, -8
 5465              		.cfi_offset 14, -4
3261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5466              		.loc 1 3261 0
 5467 0002 806B     		ldr	r0, [r0, #56]
 5468              	.LVL408:
3262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5469              		.loc 1 3262 0
 5470 0004 0023     		movs	r3, #0
 5471 0006 A0F84630 		strh	r3, [r0, #70]	@ movhi
3263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5472              		.loc 1 3263 0
 5473 000a C387     		strh	r3, [r0, #62]	@ movhi
3269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5474              		.loc 1 3269 0
 5475 000c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 5476              	.LVL409:
 5477 0010 08BD     		pop	{r3, pc}
 5478              		.cfi_endproc
 5479              	.LFE177:
 5481              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 5482              		.align	1
 5483              		.weak	HAL_SPI_AbortCpltCallback
 5484              		.syntax unified
 5485              		.thumb
 5486              		.thumb_func
 5487              		.fpu fpv5-d16
 5489              	HAL_SPI_AbortCpltCallback:
 5490              	.LFB167:
2870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 5491              		.loc 1 2870 0
 5492              		.cfi_startproc
 5493              		@ args = 0, pretend = 0, frame = 0
 5494              		@ frame_needed = 0, uses_anonymous_args = 0
 5495              		@ link register save eliminated.
 5496              	.LVL410:
 5497 0000 7047     		bx	lr
 5498              		.cfi_endproc
 5499              	.LFE167:
 5501              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 5502              		.align	1
 5503              		.global	HAL_SPI_Abort_IT
 5504              		.syntax unified
 5505              		.thumb
 5506              		.thumb_func
 5507              		.fpu fpv5-d16
 5509              	HAL_SPI_Abort_IT:
 5510              	.LFB155:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5511              		.loc 1 2408 0
 5512              		.cfi_startproc
 5513              		@ args = 0, pretend = 0, frame = 16
 5514              		@ frame_needed = 0, uses_anonymous_args = 0
 5515              	.LVL411:
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
 5516              		.loc 1 2408 0
 5517 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccQwr80L.s 			page 186


 5518              	.LCFI71:
 5519              		.cfi_def_cfa_offset 12
 5520              		.cfi_offset 4, -12
 5521              		.cfi_offset 5, -8
 5522              		.cfi_offset 14, -4
 5523 0002 85B0     		sub	sp, sp, #20
 5524              	.LCFI72:
 5525              		.cfi_def_cfa_offset 32
 5526 0004 0446     		mov	r4, r0
 5527              	.LVL412:
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   count = resetcount;
 5528              		.loc 1 2416 0
 5529 0006 504B     		ldr	r3, .L489
 5530 0008 1B68     		ldr	r3, [r3]
 5531 000a 504A     		ldr	r2, .L489+4
 5532 000c A2FB0323 		umull	r2, r3, r2, r3
 5533 0010 5B0A     		lsrs	r3, r3, #9
 5534 0012 6422     		movs	r2, #100
 5535 0014 02FB03F3 		mul	r3, r2, r3
 5536 0018 0293     		str	r3, [sp, #8]
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5537              		.loc 1 2417 0
 5538 001a 029B     		ldr	r3, [sp, #8]
 5539 001c 0393     		str	r3, [sp, #12]
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5540              		.loc 1 2420 0
 5541 001e 0268     		ldr	r2, [r0]
 5542 0020 5368     		ldr	r3, [r2, #4]
 5543 0022 23F02003 		bic	r3, r3, #32
 5544 0026 5360     		str	r3, [r2, #4]
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5545              		.loc 1 2423 0
 5546 0028 0268     		ldr	r2, [r0]
 5547 002a 5368     		ldr	r3, [r2, #4]
 5548 002c 13F0800F 		tst	r3, #128
 5549 0030 12D0     		beq	.L463
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5550              		.loc 1 2425 0
 5551 0032 474B     		ldr	r3, .L489+8
 5552 0034 0365     		str	r3, [r0, #80]
 5553              	.L466:
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5554              		.loc 1 2429 0
 5555 0036 039B     		ldr	r3, [sp, #12]
 5556 0038 43B1     		cbz	r3, .L486
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5557              		.loc 1 2434 0
 5558 003a 039B     		ldr	r3, [sp, #12]
 5559 003c 013B     		subs	r3, r3, #1
 5560 003e 0393     		str	r3, [sp, #12]
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 5561              		.loc 1 2436 0
 5562 0040 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 5563 0044 DBB2     		uxtb	r3, r3
 5564 0046 072B     		cmp	r3, #7
 5565 0048 F5D1     		bne	.L466
 5566 004a 03E0     		b	.L465
ARM GAS  /tmp/ccQwr80L.s 			page 187


 5567              	.L486:
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 5568              		.loc 1 2431 0
 5569 004c 236E     		ldr	r3, [r4, #96]
 5570 004e 43F04003 		orr	r3, r3, #64
 5571 0052 2366     		str	r3, [r4, #96]
 5572              	.L465:
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5573              		.loc 1 2438 0
 5574 0054 029B     		ldr	r3, [sp, #8]
 5575 0056 0393     		str	r3, [sp, #12]
 5576              	.L463:
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5577              		.loc 1 2441 0
 5578 0058 5368     		ldr	r3, [r2, #4]
 5579 005a 13F0400F 		tst	r3, #64
 5580 005e 12D0     		beq	.L467
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
 5581              		.loc 1 2443 0
 5582 0060 3C4B     		ldr	r3, .L489+12
 5583 0062 E364     		str	r3, [r4, #76]
 5584              	.L470:
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5585              		.loc 1 2447 0
 5586 0064 039B     		ldr	r3, [sp, #12]
 5587 0066 43B1     		cbz	r3, .L487
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5588              		.loc 1 2452 0
 5589 0068 039B     		ldr	r3, [sp, #12]
 5590 006a 013B     		subs	r3, r3, #1
 5591 006c 0393     		str	r3, [sp, #12]
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     /* Reset Timeout Counter */
 5592              		.loc 1 2454 0
 5593 006e 94F85D30 		ldrb	r3, [r4, #93]	@ zero_extendqisi2
 5594 0072 DBB2     		uxtb	r3, r3
 5595 0074 072B     		cmp	r3, #7
 5596 0076 F5D1     		bne	.L470
 5597 0078 03E0     		b	.L469
 5598              	.L487:
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         break;
 5599              		.loc 1 2449 0
 5600 007a 236E     		ldr	r3, [r4, #96]
 5601 007c 43F04003 		orr	r3, r3, #64
 5602 0080 2366     		str	r3, [r4, #96]
 5603              	.L469:
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5604              		.loc 1 2456 0
 5605 0082 029B     		ldr	r3, [sp, #8]
 5606 0084 0393     		str	r3, [sp, #12]
 5607              	.L467:
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5608              		.loc 1 2462 0
 5609 0086 636D     		ldr	r3, [r4, #84]
 5610 0088 2BB1     		cbz	r3, .L471
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5611              		.loc 1 2466 0
 5612 008a 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccQwr80L.s 			page 188


 5613 008c 12F0020F 		tst	r2, #2
 5614 0090 1BD0     		beq	.L472
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5615              		.loc 1 2468 0
 5616 0092 314A     		ldr	r2, .L489+16
 5617 0094 1A65     		str	r2, [r3, #80]
 5618              	.L471:
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5619              		.loc 1 2476 0
 5620 0096 A36D     		ldr	r3, [r4, #88]
 5621 0098 33B1     		cbz	r3, .L473
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5622              		.loc 1 2480 0
 5623 009a 2268     		ldr	r2, [r4]
 5624 009c 5268     		ldr	r2, [r2, #4]
 5625 009e 12F0010F 		tst	r2, #1
 5626 00a2 15D0     		beq	.L474
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5627              		.loc 1 2482 0
 5628 00a4 2D4A     		ldr	r2, .L489+20
 5629 00a6 1A65     		str	r2, [r3, #80]
 5630              	.L473:
2491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5631              		.loc 1 2491 0
 5632 00a8 2368     		ldr	r3, [r4]
 5633 00aa 5B68     		ldr	r3, [r3, #4]
 5634 00ac 13F0020F 		tst	r3, #2
 5635 00b0 11D0     		beq	.L479
2494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5636              		.loc 1 2494 0
 5637 00b2 606D     		ldr	r0, [r4, #84]
 5638              	.LVL413:
 5639 00b4 20B3     		cbz	r0, .L480
2497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5640              		.loc 1 2497 0
 5641 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5642              	.LVL414:
 5643 00ba 18B3     		cbz	r0, .L481
2499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5644              		.loc 1 2499 0
 5645 00bc 636D     		ldr	r3, [r4, #84]
 5646 00be 0022     		movs	r2, #0
 5647 00c0 1A65     		str	r2, [r3, #80]
2500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5648              		.loc 1 2500 0
 5649 00c2 4023     		movs	r3, #64
 5650 00c4 2366     		str	r3, [r4, #96]
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5651              		.loc 1 2415 0
 5652 00c6 0125     		movs	r5, #1
 5653 00c8 06E0     		b	.L475
 5654              	.LVL415:
 5655              	.L472:
2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5656              		.loc 1 2472 0
 5657 00ca 0022     		movs	r2, #0
 5658 00cc 1A65     		str	r2, [r3, #80]
ARM GAS  /tmp/ccQwr80L.s 			page 189


 5659 00ce E2E7     		b	.L471
 5660              	.L474:
2486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5661              		.loc 1 2486 0
 5662 00d0 0022     		movs	r2, #0
 5663 00d2 1A65     		str	r2, [r3, #80]
 5664 00d4 E8E7     		b	.L473
 5665              	.L479:
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5666              		.loc 1 2415 0
 5667 00d6 0125     		movs	r5, #1
 5668              	.LVL416:
 5669              	.L475:
2509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5670              		.loc 1 2509 0
 5671 00d8 2368     		ldr	r3, [r4]
 5672 00da 5B68     		ldr	r3, [r3, #4]
 5673 00dc 13F0010F 		tst	r3, #1
 5674 00e0 09D0     		beq	.L476
2512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5675              		.loc 1 2512 0
 5676 00e2 A06D     		ldr	r0, [r4, #88]
 5677 00e4 38B1     		cbz	r0, .L476
2515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       {
 5678              		.loc 1 2515 0
 5679 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5680              	.LVL417:
 5681 00ea 68B1     		cbz	r0, .L482
2517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 5682              		.loc 1 2517 0
 5683 00ec A36D     		ldr	r3, [r4, #88]
 5684 00ee 0022     		movs	r2, #0
 5685 00f0 1A65     		str	r2, [r3, #80]
2518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5686              		.loc 1 2518 0
 5687 00f2 4023     		movs	r3, #64
 5688 00f4 2366     		str	r3, [r4, #96]
 5689              	.LVL418:
 5690              	.L476:
2527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5691              		.loc 1 2527 0
 5692 00f6 4DB9     		cbnz	r5, .L488
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   abortcplt = 1U;
 5693              		.loc 1 2414 0
 5694 00f8 0025     		movs	r5, #0
 5695              	.LVL419:
 5696              	.L477:
2561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5697              		.loc 1 2561 0
 5698 00fa 2846     		mov	r0, r5
 5699 00fc 05B0     		add	sp, sp, #20
 5700              	.LCFI73:
 5701              		.cfi_remember_state
 5702              		.cfi_def_cfa_offset 12
 5703              		@ sp needed
 5704 00fe 30BD     		pop	{r4, r5, pc}
 5705              	.LVL420:
ARM GAS  /tmp/ccQwr80L.s 			page 190


 5706              	.L480:
 5707              	.LCFI74:
 5708              		.cfi_restore_state
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5709              		.loc 1 2415 0
 5710 0100 0125     		movs	r5, #1
 5711 0102 E9E7     		b	.L475
 5712              	.L481:
2504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5713              		.loc 1 2504 0
 5714 0104 0025     		movs	r5, #0
 5715 0106 E7E7     		b	.L475
 5716              	.LVL421:
 5717              	.L482:
2522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****       }
 5718              		.loc 1 2522 0
 5719 0108 0025     		movs	r5, #0
 5720              	.LVL422:
 5721 010a F4E7     		b	.L476
 5722              	.LVL423:
 5723              	.L488:
2530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5724              		.loc 1 2530 0
 5725 010c 0023     		movs	r3, #0
 5726 010e A4F84630 		strh	r3, [r4, #70]	@ movhi
2531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5727              		.loc 1 2531 0
 5728 0112 E387     		strh	r3, [r4, #62]	@ movhi
2534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5729              		.loc 1 2534 0
 5730 0114 236E     		ldr	r3, [r4, #96]
 5731 0116 402B     		cmp	r3, #64
 5732 0118 14D0     		beq	.L484
2542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5733              		.loc 1 2542 0
 5734 011a 0025     		movs	r5, #0
 5735              	.LVL424:
 5736 011c 2566     		str	r5, [r4, #96]
 5737              	.L478:
 5738              	.LVL425:
 5739              	.LBB11:
2546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     __HAL_SPI_CLEAR_FREFLAG(hspi);
 5740              		.loc 1 2546 0
 5741 011e 0022     		movs	r2, #0
 5742 0120 0092     		str	r2, [sp]
 5743 0122 2368     		ldr	r3, [r4]
 5744 0124 D968     		ldr	r1, [r3, #12]
 5745 0126 0091     		str	r1, [sp]
 5746 0128 9968     		ldr	r1, [r3, #8]
 5747 012a 0091     		str	r1, [sp]
 5748 012c 0099     		ldr	r1, [sp]
 5749              	.LBE11:
 5750              	.LBB12:
2547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5751              		.loc 1 2547 0
 5752 012e 0192     		str	r2, [sp, #4]
 5753 0130 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccQwr80L.s 			page 191


 5754 0132 0193     		str	r3, [sp, #4]
 5755 0134 019B     		ldr	r3, [sp, #4]
 5756              	.LBE12:
2550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5757              		.loc 1 2550 0
 5758 0136 0123     		movs	r3, #1
 5759 0138 84F85D30 		strb	r3, [r4, #93]
2556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5760              		.loc 1 2556 0
 5761 013c 2046     		mov	r0, r4
 5762 013e FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5763              	.LVL426:
 5764 0142 DAE7     		b	.L477
 5765              	.LVL427:
 5766              	.L484:
2537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     }
 5767              		.loc 1 2537 0
 5768 0144 0125     		movs	r5, #1
 5769              	.LVL428:
 5770 0146 EAE7     		b	.L478
 5771              	.L490:
 5772              		.align	2
 5773              	.L489:
 5774 0148 00000000 		.word	SystemCoreClock
 5775 014c F1197605 		.word	91625969
 5776 0150 00000000 		.word	SPI_AbortTx_ISR
 5777 0154 00000000 		.word	SPI_AbortRx_ISR
 5778 0158 00000000 		.word	SPI_DMATxAbortCallback
 5779 015c 00000000 		.word	SPI_DMARxAbortCallback
 5780              		.cfi_endproc
 5781              	.LFE155:
 5783              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5784              		.align	1
 5785              		.syntax unified
 5786              		.thumb
 5787              		.thumb_func
 5788              		.fpu fpv5-d16
 5790              	SPI_DMARxAbortCallback:
 5791              	.LFB179:
3348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5792              		.loc 1 3348 0
 5793              		.cfi_startproc
 5794              		@ args = 0, pretend = 0, frame = 8
 5795              		@ frame_needed = 0, uses_anonymous_args = 0
 5796              	.LVL429:
 5797 0000 30B5     		push	{r4, r5, lr}
 5798              	.LCFI75:
 5799              		.cfi_def_cfa_offset 12
 5800              		.cfi_offset 4, -12
 5801              		.cfi_offset 5, -8
 5802              		.cfi_offset 14, -4
 5803 0002 85B0     		sub	sp, sp, #20
 5804              	.LCFI76:
 5805              		.cfi_def_cfa_offset 32
3349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5806              		.loc 1 3349 0
 5807 0004 846B     		ldr	r4, [r0, #56]
ARM GAS  /tmp/ccQwr80L.s 			page 192


 5808              	.LVL430:
3352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5809              		.loc 1 3352 0
 5810 0006 2268     		ldr	r2, [r4]
 5811 0008 1368     		ldr	r3, [r2]
 5812 000a 23F04003 		bic	r3, r3, #64
 5813 000e 1360     		str	r3, [r2]
3354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5814              		.loc 1 3354 0
 5815 0010 A36D     		ldr	r3, [r4, #88]
 5816 0012 0025     		movs	r5, #0
 5817 0014 1D65     		str	r5, [r3, #80]
3357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5818              		.loc 1 3357 0
 5819 0016 2268     		ldr	r2, [r4]
 5820 0018 5368     		ldr	r3, [r2, #4]
 5821 001a 23F00103 		bic	r3, r3, #1
 5822 001e 5360     		str	r3, [r2, #4]
3360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5823              		.loc 1 3360 0
 5824 0020 FFF7FEFF 		bl	HAL_GetTick
 5825              	.LVL431:
 5826 0024 0090     		str	r0, [sp]
 5827 0026 6423     		movs	r3, #100
 5828 0028 2A46     		mov	r2, r5
 5829 002a 8021     		movs	r1, #128
 5830 002c 2046     		mov	r0, r4
 5831 002e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 5832              	.LVL432:
 5833 0032 08B1     		cbz	r0, .L492
3362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5834              		.loc 1 3362 0
 5835 0034 4023     		movs	r3, #64
 5836 0036 2366     		str	r3, [r4, #96]
 5837              	.L492:
3366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5838              		.loc 1 3366 0
 5839 0038 FFF7FEFF 		bl	HAL_GetTick
 5840              	.LVL433:
 5841 003c 0090     		str	r0, [sp]
 5842 003e 6423     		movs	r3, #100
 5843 0040 0022     		movs	r2, #0
 5844 0042 4FF4C061 		mov	r1, #1536
 5845 0046 2046     		mov	r0, r4
 5846 0048 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5847              	.LVL434:
 5848 004c 08B1     		cbz	r0, .L493
3368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5849              		.loc 1 3368 0
 5850 004e 4023     		movs	r3, #64
 5851 0050 2366     		str	r3, [r4, #96]
 5852              	.L493:
3372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5853              		.loc 1 3372 0
 5854 0052 636D     		ldr	r3, [r4, #84]
 5855 0054 1BB1     		cbz	r3, .L494
3374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
ARM GAS  /tmp/ccQwr80L.s 			page 193


 5856              		.loc 1 3374 0
 5857 0056 1B6D     		ldr	r3, [r3, #80]
 5858 0058 0BB1     		cbz	r3, .L494
 5859              	.L491:
3404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5860              		.loc 1 3404 0
 5861 005a 05B0     		add	sp, sp, #20
 5862              	.LCFI77:
 5863              		.cfi_remember_state
 5864              		.cfi_def_cfa_offset 12
 5865              		@ sp needed
 5866 005c 30BD     		pop	{r4, r5, pc}
 5867              	.LVL435:
 5868              	.L494:
 5869              	.LCFI78:
 5870              		.cfi_restore_state
3381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5871              		.loc 1 3381 0
 5872 005e 0023     		movs	r3, #0
 5873 0060 A4F84630 		strh	r3, [r4, #70]	@ movhi
3382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5874              		.loc 1 3382 0
 5875 0064 E387     		strh	r3, [r4, #62]	@ movhi
3385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5876              		.loc 1 3385 0
 5877 0066 236E     		ldr	r3, [r4, #96]
 5878 0068 402B     		cmp	r3, #64
 5879 006a 01D0     		beq	.L496
3388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5880              		.loc 1 3388 0
 5881 006c 0023     		movs	r3, #0
 5882 006e 2366     		str	r3, [r4, #96]
 5883              	.L496:
 5884              	.LBB13:
3392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 5885              		.loc 1 3392 0
 5886 0070 0022     		movs	r2, #0
 5887 0072 0292     		str	r2, [sp, #8]
 5888 0074 2368     		ldr	r3, [r4]
 5889 0076 D968     		ldr	r1, [r3, #12]
 5890 0078 0291     		str	r1, [sp, #8]
 5891 007a 9968     		ldr	r1, [r3, #8]
 5892 007c 0291     		str	r1, [sp, #8]
 5893 007e 0299     		ldr	r1, [sp, #8]
 5894              	.LBE13:
 5895              	.LBB14:
3393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5896              		.loc 1 3393 0
 5897 0080 0392     		str	r2, [sp, #12]
 5898 0082 9B68     		ldr	r3, [r3, #8]
 5899 0084 0393     		str	r3, [sp, #12]
 5900 0086 039B     		ldr	r3, [sp, #12]
 5901              	.LBE14:
3396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5902              		.loc 1 3396 0
 5903 0088 0123     		movs	r3, #1
 5904 008a 84F85D30 		strb	r3, [r4, #93]
ARM GAS  /tmp/ccQwr80L.s 			page 194


3402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 5905              		.loc 1 3402 0
 5906 008e 2046     		mov	r0, r4
 5907 0090 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5908              	.LVL436:
 5909 0094 E1E7     		b	.L491
 5910              		.cfi_endproc
 5911              	.LFE179:
 5913              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5914              		.align	1
 5915              		.syntax unified
 5916              		.thumb
 5917              		.thumb_func
 5918              		.fpu fpv5-d16
 5920              	SPI_DMATxAbortCallback:
 5921              	.LFB178:
3282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogati
 5922              		.loc 1 3282 0
 5923              		.cfi_startproc
 5924              		@ args = 0, pretend = 0, frame = 8
 5925              		@ frame_needed = 0, uses_anonymous_args = 0
 5926              	.LVL437:
 5927 0000 10B5     		push	{r4, lr}
 5928              	.LCFI79:
 5929              		.cfi_def_cfa_offset 8
 5930              		.cfi_offset 4, -8
 5931              		.cfi_offset 14, -4
 5932 0002 84B0     		sub	sp, sp, #16
 5933              	.LCFI80:
 5934              		.cfi_def_cfa_offset 24
3283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5935              		.loc 1 3283 0
 5936 0004 846B     		ldr	r4, [r0, #56]
 5937              	.LVL438:
3285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5938              		.loc 1 3285 0
 5939 0006 636D     		ldr	r3, [r4, #84]
 5940 0008 0022     		movs	r2, #0
 5941 000a 1A65     		str	r2, [r3, #80]
3288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5942              		.loc 1 3288 0
 5943 000c 2268     		ldr	r2, [r4]
 5944 000e 5368     		ldr	r3, [r2, #4]
 5945 0010 23F00203 		bic	r3, r3, #2
 5946 0014 5360     		str	r3, [r2, #4]
3290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5947              		.loc 1 3290 0
 5948 0016 FFF7FEFF 		bl	HAL_GetTick
 5949              	.LVL439:
 5950 001a 0246     		mov	r2, r0
 5951 001c 6421     		movs	r1, #100
 5952 001e 2046     		mov	r0, r4
 5953 0020 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5954              	.LVL440:
 5955 0024 08B1     		cbz	r0, .L499
3292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5956              		.loc 1 3292 0
ARM GAS  /tmp/ccQwr80L.s 			page 195


 5957 0026 4023     		movs	r3, #64
 5958 0028 2366     		str	r3, [r4, #96]
 5959              	.L499:
3296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5960              		.loc 1 3296 0
 5961 002a 2268     		ldr	r2, [r4]
 5962 002c 1368     		ldr	r3, [r2]
 5963 002e 23F04003 		bic	r3, r3, #64
 5964 0032 1360     		str	r3, [r2]
3299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5965              		.loc 1 3299 0
 5966 0034 FFF7FEFF 		bl	HAL_GetTick
 5967              	.LVL441:
 5968 0038 0090     		str	r0, [sp]
 5969 003a 6423     		movs	r3, #100
 5970 003c 0022     		movs	r2, #0
 5971 003e 4FF4C061 		mov	r1, #1536
 5972 0042 2046     		mov	r0, r4
 5973 0044 FFF7FEFF 		bl	SPI_WaitFifoStateUntilTimeout
 5974              	.LVL442:
 5975 0048 08B1     		cbz	r0, .L500
3301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 5976              		.loc 1 3301 0
 5977 004a 4023     		movs	r3, #64
 5978 004c 2366     		str	r3, [r4, #96]
 5979              	.L500:
3305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 5980              		.loc 1 3305 0
 5981 004e A36D     		ldr	r3, [r4, #88]
 5982 0050 1BB1     		cbz	r3, .L501
3307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****     {
 5983              		.loc 1 3307 0
 5984 0052 1B6D     		ldr	r3, [r3, #80]
 5985 0054 0BB1     		cbz	r3, .L501
 5986              	.L498:
3337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 5987              		.loc 1 3337 0
 5988 0056 04B0     		add	sp, sp, #16
 5989              	.LCFI81:
 5990              		.cfi_remember_state
 5991              		.cfi_def_cfa_offset 8
 5992              		@ sp needed
 5993 0058 10BD     		pop	{r4, pc}
 5994              	.LVL443:
 5995              	.L501:
 5996              	.LCFI82:
 5997              		.cfi_restore_state
3314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5998              		.loc 1 3314 0
 5999 005a 0023     		movs	r3, #0
 6000 005c A4F84630 		strh	r3, [r4, #70]	@ movhi
3315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6001              		.loc 1 3315 0
 6002 0060 E387     		strh	r3, [r4, #62]	@ movhi
3318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   {
 6003              		.loc 1 3318 0
 6004 0062 236E     		ldr	r3, [r4, #96]
ARM GAS  /tmp/ccQwr80L.s 			page 196


 6005 0064 402B     		cmp	r3, #64
 6006 0066 01D0     		beq	.L503
3321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   }
 6007              		.loc 1 3321 0
 6008 0068 0023     		movs	r3, #0
 6009 006a 2366     		str	r3, [r4, #96]
 6010              	.L503:
 6011              	.LBB15:
3325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   __HAL_SPI_CLEAR_FREFLAG(hspi);
 6012              		.loc 1 3325 0
 6013 006c 0022     		movs	r2, #0
 6014 006e 0292     		str	r2, [sp, #8]
 6015 0070 2368     		ldr	r3, [r4]
 6016 0072 D968     		ldr	r1, [r3, #12]
 6017 0074 0291     		str	r1, [sp, #8]
 6018 0076 9968     		ldr	r1, [r3, #8]
 6019 0078 0291     		str	r1, [sp, #8]
 6020 007a 0299     		ldr	r1, [sp, #8]
 6021              	.LBE15:
 6022              	.LBB16:
3326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6023              		.loc 1 3326 0
 6024 007c 0392     		str	r2, [sp, #12]
 6025 007e 9B68     		ldr	r3, [r3, #8]
 6026 0080 0393     		str	r3, [sp, #12]
 6027 0082 039B     		ldr	r3, [sp, #12]
 6028              	.LBE16:
3329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6029              		.loc 1 3329 0
 6030 0084 0123     		movs	r3, #1
 6031 0086 84F85D30 		strb	r3, [r4, #93]
3335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 6032              		.loc 1 3335 0
 6033 008a 2046     		mov	r0, r4
 6034 008c FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 6035              	.LVL444:
 6036 0090 E1E7     		b	.L498
 6037              		.cfi_endproc
 6038              	.LFE178:
 6040              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 6041              		.align	1
 6042              		.global	HAL_SPI_GetState
 6043              		.syntax unified
 6044              		.thumb
 6045              		.thumb_func
 6046              		.fpu fpv5-d16
 6048              	HAL_SPI_GetState:
 6049              	.LFB168:
2905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI handle state */
 6050              		.loc 1 2905 0
 6051              		.cfi_startproc
 6052              		@ args = 0, pretend = 0, frame = 0
 6053              		@ frame_needed = 0, uses_anonymous_args = 0
 6054              		@ link register save eliminated.
 6055              	.LVL445:
2907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6056              		.loc 1 2907 0
ARM GAS  /tmp/ccQwr80L.s 			page 197


 6057 0000 90F85D00 		ldrb	r0, [r0, #93]	@ zero_extendqisi2
 6058              	.LVL446:
2908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6059              		.loc 1 2908 0
 6060 0004 7047     		bx	lr
 6061              		.cfi_endproc
 6062              	.LFE168:
 6064              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 6065              		.align	1
 6066              		.global	HAL_SPI_GetError
 6067              		.syntax unified
 6068              		.thumb
 6069              		.thumb_func
 6070              		.fpu fpv5-d16
 6072              	HAL_SPI_GetError:
 6073              	.LFB169:
2917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c ****   /* Return SPI ErrorCode */
 6074              		.loc 1 2917 0
 6075              		.cfi_startproc
 6076              		@ args = 0, pretend = 0, frame = 0
 6077              		@ frame_needed = 0, uses_anonymous_args = 0
 6078              		@ link register save eliminated.
 6079              	.LVL447:
2919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** }
 6080              		.loc 1 2919 0
 6081 0000 006E     		ldr	r0, [r0, #96]
 6082              	.LVL448:
2920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_spi.c **** 
 6083              		.loc 1 2920 0
 6084 0002 7047     		bx	lr
 6085              		.cfi_endproc
 6086              	.LFE169:
 6088              		.text
 6089              	.Letext0:
 6090              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6091              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6092              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 6093              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 6094              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 6095              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 6096              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 6097              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 6098              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_spi.h"
 6099              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/ccQwr80L.s 			page 198


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_spi.c
     /tmp/ccQwr80L.s:17     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 $t
     /tmp/ccQwr80L.s:23     .text.SPI_WaitFlagStateUntilTimeout:0000000000000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccQwr80L.s:127    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 $t
     /tmp/ccQwr80L.s:133    .text.SPI_WaitFifoStateUntilTimeout:0000000000000000 SPI_WaitFifoStateUntilTimeout
     /tmp/ccQwr80L.s:245    .text.SPI_EndRxTxTransaction:0000000000000000 $t
     /tmp/ccQwr80L.s:251    .text.SPI_EndRxTxTransaction:0000000000000000 SPI_EndRxTxTransaction
     /tmp/ccQwr80L.s:339    .text.SPI_EndRxTransaction:0000000000000000 $t
     /tmp/ccQwr80L.s:345    .text.SPI_EndRxTransaction:0000000000000000 SPI_EndRxTransaction
     /tmp/ccQwr80L.s:449    .text.SPI_AbortRx_ISR:0000000000000000 $t
     /tmp/ccQwr80L.s:455    .text.SPI_AbortRx_ISR:0000000000000000 SPI_AbortRx_ISR
     /tmp/ccQwr80L.s:553    .text.SPI_AbortRx_ISR:0000000000000088 $d
     /tmp/ccQwr80L.s:559    .text.SPI_AbortTx_ISR:0000000000000000 $t
     /tmp/ccQwr80L.s:565    .text.SPI_AbortTx_ISR:0000000000000000 SPI_AbortTx_ISR
     /tmp/ccQwr80L.s:720    .text.SPI_AbortTx_ISR:00000000000000e8 $d
     /tmp/ccQwr80L.s:726    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccQwr80L.s:733    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccQwr80L.s:746    .text.HAL_SPI_Init:0000000000000000 $t
     /tmp/ccQwr80L.s:753    .text.HAL_SPI_Init:0000000000000000 HAL_SPI_Init
     /tmp/ccQwr80L.s:890    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccQwr80L.s:897    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccQwr80L.s:910    .text.HAL_SPI_DeInit:0000000000000000 $t
     /tmp/ccQwr80L.s:917    .text.HAL_SPI_DeInit:0000000000000000 HAL_SPI_DeInit
     /tmp/ccQwr80L.s:967    .text.HAL_SPI_Transmit:0000000000000000 $t
     /tmp/ccQwr80L.s:974    .text.HAL_SPI_Transmit:0000000000000000 HAL_SPI_Transmit
     /tmp/ccQwr80L.s:1328   .text.HAL_SPI_TransmitReceive:0000000000000000 $t
     /tmp/ccQwr80L.s:1335   .text.HAL_SPI_TransmitReceive:0000000000000000 HAL_SPI_TransmitReceive
     /tmp/ccQwr80L.s:1861   .text.HAL_SPI_Receive:0000000000000000 $t
     /tmp/ccQwr80L.s:1868   .text.HAL_SPI_Receive:0000000000000000 HAL_SPI_Receive
     /tmp/ccQwr80L.s:2156   .text.HAL_SPI_Transmit_IT:0000000000000000 $t
     /tmp/ccQwr80L.s:2163   .text.HAL_SPI_Transmit_IT:0000000000000000 HAL_SPI_Transmit_IT
     /tmp/ccQwr80L.s:2287   .text.HAL_SPI_Transmit_IT:000000000000009c $d
     /tmp/ccQwr80L.s:4329   .text.SPI_TxISR_16BIT:0000000000000000 SPI_TxISR_16BIT
     /tmp/ccQwr80L.s:4278   .text.SPI_TxISR_8BIT:0000000000000000 SPI_TxISR_8BIT
     /tmp/ccQwr80L.s:2293   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccQwr80L.s:2300   .text.HAL_SPI_TransmitReceive_IT:0000000000000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccQwr80L.s:2498   .text.HAL_SPI_TransmitReceive_IT:00000000000000e0 $d
     /tmp/ccQwr80L.s:4860   .text.SPI_2linesRxISR_16BIT:0000000000000000 SPI_2linesRxISR_16BIT
     /tmp/ccQwr80L.s:4800   .text.SPI_2linesTxISR_16BIT:0000000000000000 SPI_2linesTxISR_16BIT
     /tmp/ccQwr80L.s:4705   .text.SPI_2linesRxISR_8BIT:0000000000000000 SPI_2linesRxISR_8BIT
     /tmp/ccQwr80L.s:4622   .text.SPI_2linesTxISR_8BIT:0000000000000000 SPI_2linesTxISR_8BIT
     /tmp/ccQwr80L.s:2506   .text.HAL_SPI_Receive_IT:0000000000000000 $t
     /tmp/ccQwr80L.s:2513   .text.HAL_SPI_Receive_IT:0000000000000000 HAL_SPI_Receive_IT
     /tmp/ccQwr80L.s:2674   .text.HAL_SPI_Receive_IT:00000000000000d0 $d
     /tmp/ccQwr80L.s:4491   .text.SPI_RxISR_16BIT:0000000000000000 SPI_RxISR_16BIT
     /tmp/ccQwr80L.s:4440   .text.SPI_RxISR_8BIT:0000000000000000 SPI_RxISR_8BIT
     /tmp/ccQwr80L.s:2680   .text.HAL_SPI_Transmit_DMA:0000000000000000 $t
     /tmp/ccQwr80L.s:2687   .text.HAL_SPI_Transmit_DMA:0000000000000000 HAL_SPI_Transmit_DMA
     /tmp/ccQwr80L.s:2891   .text.HAL_SPI_Transmit_DMA:0000000000000120 $d
     /tmp/ccQwr80L.s:4039   .text.SPI_DMAHalfTransmitCplt:0000000000000000 SPI_DMAHalfTransmitCplt
     /tmp/ccQwr80L.s:4961   .text.SPI_DMATransmitCplt:0000000000000000 SPI_DMATransmitCplt
     /tmp/ccQwr80L.s:4920   .text.SPI_DMAError:0000000000000000 SPI_DMAError
     /tmp/ccQwr80L.s:2898   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccQwr80L.s:2905   .text.HAL_SPI_TransmitReceive_DMA:0000000000000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccQwr80L.s:3245   .text.HAL_SPI_TransmitReceive_DMA:00000000000001fc $d
     /tmp/ccQwr80L.s:4139   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 SPI_DMAHalfTransmitReceiveCplt
ARM GAS  /tmp/ccQwr80L.s 			page 199


     /tmp/ccQwr80L.s:5149   .text.SPI_DMATransmitReceiveCplt:0000000000000000 SPI_DMATransmitReceiveCplt
     /tmp/ccQwr80L.s:4089   .text.SPI_DMAHalfReceiveCplt:0000000000000000 SPI_DMAHalfReceiveCplt
     /tmp/ccQwr80L.s:5068   .text.SPI_DMAReceiveCplt:0000000000000000 SPI_DMAReceiveCplt
     /tmp/ccQwr80L.s:3254   .text.HAL_SPI_Receive_DMA:0000000000000000 $t
     /tmp/ccQwr80L.s:3261   .text.HAL_SPI_Receive_DMA:0000000000000000 HAL_SPI_Receive_DMA
     /tmp/ccQwr80L.s:3496   .text.HAL_SPI_Receive_DMA:0000000000000168 $d
     /tmp/ccQwr80L.s:3503   .text.HAL_SPI_Abort:0000000000000000 $t
     /tmp/ccQwr80L.s:3510   .text.HAL_SPI_Abort:0000000000000000 HAL_SPI_Abort
     /tmp/ccQwr80L.s:3778   .text.HAL_SPI_Abort:0000000000000180 $d
     /tmp/ccQwr80L.s:3786   .text.HAL_SPI_DMAPause:0000000000000000 $t
     /tmp/ccQwr80L.s:3793   .text.HAL_SPI_DMAPause:0000000000000000 HAL_SPI_DMAPause
     /tmp/ccQwr80L.s:3831   .text.HAL_SPI_DMAResume:0000000000000000 $t
     /tmp/ccQwr80L.s:3838   .text.HAL_SPI_DMAResume:0000000000000000 HAL_SPI_DMAResume
     /tmp/ccQwr80L.s:3876   .text.HAL_SPI_DMAStop:0000000000000000 $t
     /tmp/ccQwr80L.s:3883   .text.HAL_SPI_DMAStop:0000000000000000 HAL_SPI_DMAStop
     /tmp/ccQwr80L.s:3953   .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:3960   .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
     /tmp/ccQwr80L.s:3973   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:3980   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccQwr80L.s:3993   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:4000   .text.HAL_SPI_TxRxCpltCallback:0000000000000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccQwr80L.s:4013   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:4020   .text.HAL_SPI_TxHalfCpltCallback:0000000000000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccQwr80L.s:4033   .text.SPI_DMAHalfTransmitCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:4063   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:4070   .text.HAL_SPI_RxHalfCpltCallback:0000000000000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccQwr80L.s:4083   .text.SPI_DMAHalfReceiveCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:4113   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:4120   .text.HAL_SPI_TxRxHalfCpltCallback:0000000000000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccQwr80L.s:4133   .text.SPI_DMAHalfTransmitReceiveCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:4163   .text.HAL_SPI_ErrorCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:4170   .text.HAL_SPI_ErrorCallback:0000000000000000 HAL_SPI_ErrorCallback
     /tmp/ccQwr80L.s:4183   .text.SPI_CloseTx_ISR:0000000000000000 $t
     /tmp/ccQwr80L.s:4189   .text.SPI_CloseTx_ISR:0000000000000000 SPI_CloseTx_ISR
     /tmp/ccQwr80L.s:4272   .text.SPI_TxISR_8BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4323   .text.SPI_TxISR_16BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4374   .text.SPI_CloseRx_ISR:0000000000000000 $t
     /tmp/ccQwr80L.s:4380   .text.SPI_CloseRx_ISR:0000000000000000 SPI_CloseRx_ISR
     /tmp/ccQwr80L.s:4434   .text.SPI_RxISR_8BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4485   .text.SPI_RxISR_16BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4536   .text.SPI_CloseRxTx_ISR:0000000000000000 $t
     /tmp/ccQwr80L.s:4542   .text.SPI_CloseRxTx_ISR:0000000000000000 SPI_CloseRxTx_ISR
     /tmp/ccQwr80L.s:4616   .text.SPI_2linesTxISR_8BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4699   .text.SPI_2linesRxISR_8BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4794   .text.SPI_2linesTxISR_16BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4854   .text.SPI_2linesRxISR_16BIT:0000000000000000 $t
     /tmp/ccQwr80L.s:4914   .text.SPI_DMAError:0000000000000000 $t
     /tmp/ccQwr80L.s:4955   .text.SPI_DMATransmitCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:5062   .text.SPI_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:5143   .text.SPI_DMATransmitReceiveCplt:0000000000000000 $t
     /tmp/ccQwr80L.s:5227   .text.HAL_SPI_IRQHandler:0000000000000000 $t
     /tmp/ccQwr80L.s:5234   .text.HAL_SPI_IRQHandler:0000000000000000 HAL_SPI_IRQHandler
     /tmp/ccQwr80L.s:5443   .text.HAL_SPI_IRQHandler:0000000000000114 $d
     /tmp/ccQwr80L.s:5454   .text.SPI_DMAAbortOnError:0000000000000000 SPI_DMAAbortOnError
     /tmp/ccQwr80L.s:5448   .text.SPI_DMAAbortOnError:0000000000000000 $t
     /tmp/ccQwr80L.s:5482   .text.HAL_SPI_AbortCpltCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:5489   .text.HAL_SPI_AbortCpltCallback:0000000000000000 HAL_SPI_AbortCpltCallback
ARM GAS  /tmp/ccQwr80L.s 			page 200


     /tmp/ccQwr80L.s:5502   .text.HAL_SPI_Abort_IT:0000000000000000 $t
     /tmp/ccQwr80L.s:5509   .text.HAL_SPI_Abort_IT:0000000000000000 HAL_SPI_Abort_IT
     /tmp/ccQwr80L.s:5774   .text.HAL_SPI_Abort_IT:0000000000000148 $d
     /tmp/ccQwr80L.s:5920   .text.SPI_DMATxAbortCallback:0000000000000000 SPI_DMATxAbortCallback
     /tmp/ccQwr80L.s:5790   .text.SPI_DMARxAbortCallback:0000000000000000 SPI_DMARxAbortCallback
     /tmp/ccQwr80L.s:5784   .text.SPI_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:5914   .text.SPI_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccQwr80L.s:6041   .text.HAL_SPI_GetState:0000000000000000 $t
     /tmp/ccQwr80L.s:6048   .text.HAL_SPI_GetState:0000000000000000 HAL_SPI_GetState
     /tmp/ccQwr80L.s:6065   .text.HAL_SPI_GetError:0000000000000000 $t
     /tmp/ccQwr80L.s:6072   .text.HAL_SPI_GetError:0000000000000000 HAL_SPI_GetError
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
