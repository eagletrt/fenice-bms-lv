ARM GAS  /tmp/ccAfYCgX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32f7xx_hal.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MspInit,"ax",%progbits
  17              		.align	1
  18              		.weak	HAL_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	HAL_MspInit:
  25              	.LFB143:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @file    stm32f7xx_hal.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @verbatim
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   @endverbatim
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @attention
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccAfYCgX.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */ 
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #include "stm32f7xx_hal.h"
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup STM32F7xx_HAL_Driver
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @brief STM32F7xx HAL Driver version number V1.2.7
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_MAIN   (0x01) /*!< [31:24] main version */
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB1   (0x02) /*!< [23:16] sub1 version */
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_SUB2   (0x07) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION_RC     (0x00) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define __STM32F7xx_HAL_VERSION         ((__STM32F7xx_HAL_VERSION_MAIN << 24)\
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB1 << 16)\
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_SUB2 << 8 )\
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         |(__STM32F7xx_HAL_VERSION_RC))
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                                         
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFF)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __IO uint32_t uwTick;
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /* Private functions ---------------------------------------------------------*/
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    Initialization and de-initialization functions
ARM GAS  /tmp/ccAfYCgX.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim    
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****               ##### Initialization and Configuration functions #####
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           and the backup domain when enabled.
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) De-Initializes common part of the HAL.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****           Tick interrupt priority. 
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              handled in milliseconds basis.
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             ISR process will be blocked. 
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         HAL function), it performs the following:
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configure the Flash prefetch, and instruction cache through ART accelerator.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Set NVIC Group Priority to 4.
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           "stm32f7xx_hal_msp.c" to do the global low level hardware initialization 
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *            
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         to have correct HAL operation.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (ART_ACCLERATOR_ENABLE != 0)
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    __HAL_FLASH_ART_ENABLE();
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* ART_ACCLERATOR_ENABLE */
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Flash prefetch */
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
ARM GAS  /tmp/ccAfYCgX.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #endif /* PREFETCH_ENABLE */
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Set Interrupt Group Priority */
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Init the low level hardware */
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspInit();
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         This function is optional.   
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* De-Init the low level hardware */
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_MspDeInit();
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Initialize the MSP.
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspInit(void)
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  27              		.loc 1 198 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
ARM GAS  /tmp/ccAfYCgX.s 			page 5


  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE143:
  36              		.section	.text.HAL_MspDeInit,"ax",%progbits
  37              		.align	1
  38              		.weak	HAL_MspDeInit
  39              		.syntax unified
  40              		.thumb
  41              		.thumb_func
  42              		.fpu fpv5-d16
  44              	HAL_MspDeInit:
  45              	.LFB144:
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  DeInitializes the MSP.
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_MspDeInit(void)
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
  46              		.loc 1 209 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE144:
  55              		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	1
  57              		.global	HAL_DeInit
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv5-d16
  63              	HAL_DeInit:
  64              	.LFB142:
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  65              		.loc 1 169 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 169 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  75              		.loc 1 171 0
  76 0002 094B     		ldr	r3, .L5
  77 0004 4FF0FF32 		mov	r2, #-1
  78 0008 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccAfYCgX.s 			page 6


 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  79              		.loc 1 172 0
  80 000a 0024     		movs	r4, #0
  81 000c 1C62     		str	r4, [r3, #32]
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  82              		.loc 1 174 0
  83 000e 5A62     		str	r2, [r3, #36]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  84              		.loc 1 175 0
  85 0010 5C62     		str	r4, [r3, #36]
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  86              		.loc 1 177 0
  87 0012 1A61     		str	r2, [r3, #16]
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  88              		.loc 1 178 0
  89 0014 1C61     		str	r4, [r3, #16]
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  90              		.loc 1 180 0
  91 0016 5A61     		str	r2, [r3, #20]
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  92              		.loc 1 181 0
  93 0018 5C61     		str	r4, [r3, #20]
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  94              		.loc 1 183 0
  95 001a 9A61     		str	r2, [r3, #24]
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
  96              		.loc 1 184 0
  97 001c 9C61     		str	r4, [r3, #24]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     
  98              		.loc 1 187 0
  99 001e FFF7FEFF 		bl	HAL_MspDeInit
 100              	.LVL0:
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 101              		.loc 1 191 0
 102 0022 2046     		mov	r0, r4
 103 0024 10BD     		pop	{r4, pc}
 104              	.L6:
 105 0026 00BF     		.align	2
 106              	.L5:
 107 0028 00380240 		.word	1073887232
 108              		.cfi_endproc
 109              	.LFE142:
 111              		.section	.text.HAL_InitTick,"ax",%progbits
 112              		.align	1
 113              		.weak	HAL_InitTick
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv5-d16
 119              	HAL_InitTick:
 120              	.LFB145:
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    */ 
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
ARM GAS  /tmp/ccAfYCgX.s 			page 7


 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function configures the source of the time base.
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        Tick interrupt priority.
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementation  in user file.
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval HAL status
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 121              		.loc 1 232 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL1:
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0446     		mov	r4, r0
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 132              		.loc 1 234 0
 133 0004 0E4B     		ldr	r3, .L13
 134 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 135              	.LVL2:
 136 0008 4FF47A73 		mov	r3, #1000
 137 000c B3FBF0F3 		udiv	r3, r3, r0
 138 0010 0C4A     		ldr	r2, .L13+4
 139 0012 1068     		ldr	r0, [r2]
 140 0014 B0FBF3F0 		udiv	r0, r0, r3
 141 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL3:
 143 001c 68B9     		cbnz	r0, .L9
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure the SysTick IRQ priority */
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 144              		.loc 1 240 0
 145 001e 0F2C     		cmp	r4, #15
 146 0020 01D9     		bls	.L12
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   else
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
ARM GAS  /tmp/ccAfYCgX.s 			page 8


 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     return HAL_ERROR;
 147              		.loc 1 247 0
 148 0022 0120     		movs	r0, #1
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Return function status */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return HAL_OK;
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 149              		.loc 1 252 0
 150 0024 10BD     		pop	{r4, pc}
 151              	.LVL4:
 152              	.L12:
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickPrio = TickPriority;
 153              		.loc 1 242 0
 154 0026 0022     		movs	r2, #0
 155 0028 2146     		mov	r1, r4
 156 002a 4FF0FF30 		mov	r0, #-1
 157 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL5:
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 159              		.loc 1 243 0
 160 0032 054B     		ldr	r3, .L13+8
 161 0034 1C60     		str	r4, [r3]
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 162              		.loc 1 251 0
 163 0036 0020     		movs	r0, #0
 164 0038 10BD     		pop	{r4, pc}
 165              	.LVL6:
 166              	.L9:
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 167              		.loc 1 236 0
 168 003a 0120     		movs	r0, #1
 169 003c 10BD     		pop	{r4, pc}
 170              	.LVL7:
 171              	.L14:
 172 003e 00BF     		.align	2
 173              	.L13:
 174 0040 00000000 		.word	.LANCHOR0
 175 0044 00000000 		.word	SystemCoreClock
 176 0048 00000000 		.word	.LANCHOR1
 177              		.cfi_endproc
 178              	.LFE145:
 180              		.section	.text.HAL_Init,"ax",%progbits
 181              		.align	1
 182              		.global	HAL_Init
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv5-d16
 188              	HAL_Init:
 189              	.LFB141:
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Configure Instruction cache through ART accelerator */ 
 190              		.loc 1 139 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccAfYCgX.s 			page 9


 195              	.LCFI2:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 199              		.loc 1 151 0
 200 0002 0320     		movs	r0, #3
 201 0004 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 202              	.LVL8:
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 203              		.loc 1 154 0
 204 0008 0020     		movs	r0, #0
 205 000a FFF7FEFF 		bl	HAL_InitTick
 206              	.LVL9:
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   
 207              		.loc 1 157 0
 208 000e FFF7FEFF 		bl	HAL_MspInit
 209              	.LVL10:
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 210              		.loc 1 161 0
 211 0012 0020     		movs	r0, #0
 212 0014 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE141:
 216              		.section	.text.HAL_IncTick,"ax",%progbits
 217              		.align	1
 218              		.weak	HAL_IncTick
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv5-d16
 224              	HAL_IncTick:
 225              	.LFB146:
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @}
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *  @brief    HAL Control functions
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  *
 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @verbatim
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****                       ##### HAL Control functions #####
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  ===============================================================================
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     [..]  This section provides functions allowing to:
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a tick value in millisecond
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Provide a blocking delay in millisecond
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Suspend the time base source interrupt
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Resume the time base source interrupt
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the HAL API driver version
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device identifier
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Get the device revision identifier
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
ARM GAS  /tmp/ccAfYCgX.s 			page 10


 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** @endverbatim
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @{
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        used as application time base.
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       in SysTick ISR.
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *      implementations in user file.
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_IncTick(void)
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 226              		.loc 1 291 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uwTick += uwTickFreq;
 231              		.loc 1 292 0
 232 0000 034A     		ldr	r2, .L18
 233 0002 1168     		ldr	r1, [r2]
 234 0004 034B     		ldr	r3, .L18+4
 235 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 0008 0B44     		add	r3, r3, r1
 237 000a 1360     		str	r3, [r2]
 238 000c 7047     		bx	lr
 239              	.L19:
 240 000e 00BF     		.align	2
 241              	.L18:
 242 0010 00000000 		.word	uwTick
 243 0014 00000000 		.word	.LANCHOR0
 244              		.cfi_endproc
 245              	.LFE146:
 247              		.section	.text.HAL_GetTick,"ax",%progbits
 248              		.align	1
 249              		.weak	HAL_GetTick
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv5-d16
 255              	HAL_GetTick:
 256              	.LFB147:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Provides a tick value in millisecond.
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick value
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 257              		.loc 1 302 0
 258              		.cfi_startproc
ARM GAS  /tmp/ccAfYCgX.s 			page 11


 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTick;
 262              		.loc 1 303 0
 263 0000 014B     		ldr	r3, .L21
 264 0002 1868     		ldr	r0, [r3]
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 265              		.loc 1 304 0
 266 0004 7047     		bx	lr
 267              	.L22:
 268 0006 00BF     		.align	2
 269              	.L21:
 270 0008 00000000 		.word	uwTick
 271              		.cfi_endproc
 272              	.LFE147:
 274              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 275              		.align	1
 276              		.global	HAL_GetTickPrio
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv5-d16
 282              	HAL_GetTickPrio:
 283              	.LFB148:
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function returns a tick priority.
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick priority
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 284              		.loc 1 311 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickPrio;
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 289              		.loc 1 313 0
 290 0000 014B     		ldr	r3, .L24
 291 0002 1868     		ldr	r0, [r3]
 292 0004 7047     		bx	lr
 293              	.L25:
 294 0006 00BF     		.align	2
 295              	.L24:
 296 0008 00000000 		.word	.LANCHOR1
 297              		.cfi_endproc
 298              	.LFE148:
 300              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_SetTickFreq
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv5-d16
 308              	HAL_SetTickFreq:
ARM GAS  /tmp/ccAfYCgX.s 			page 12


 309              	.LFB149:
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Set new tick Freq.
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Status
 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 310              		.loc 1 320 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              	.LVL11:
 315 0000 08B5     		push	{r3, lr}
 316              	.LCFI3:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 320              	.LVL12:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (uwTickFreq != Freq)
 321              		.loc 1 324 0
 322 0002 064B     		ldr	r3, .L30
 323 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 324 0006 8342     		cmp	r3, r0
 325 0008 06D0     		beq	.L28
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     uwTickFreq = Freq;
 326              		.loc 1 326 0
 327 000a 044B     		ldr	r3, .L30
 328 000c 1870     		strb	r0, [r3]
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     /* Apply the new tick Freq  */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 329              		.loc 1 329 0
 330 000e 044B     		ldr	r3, .L30+4
 331 0010 1868     		ldr	r0, [r3]
 332              	.LVL13:
 333 0012 FFF7FEFF 		bl	HAL_InitTick
 334              	.LVL14:
 335 0016 08BD     		pop	{r3, pc}
 336              	.LVL15:
 337              	.L28:
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 338              		.loc 1 321 0
 339 0018 0020     		movs	r0, #0
 340              	.LVL16:
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return status;
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 341              		.loc 1 333 0
 342 001a 08BD     		pop	{r3, pc}
 343              	.L31:
 344              		.align	2
ARM GAS  /tmp/ccAfYCgX.s 			page 13


 345              	.L30:
 346 001c 00000000 		.word	.LANCHOR0
 347 0020 00000000 		.word	.LANCHOR1
 348              		.cfi_endproc
 349              	.LFE149:
 351              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 352              		.align	1
 353              		.global	HAL_GetTickFreq
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv5-d16
 359              	HAL_GetTickFreq:
 360              	.LFB150:
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Return tick frequency.
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval tick period in Hz
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 361              		.loc 1 340 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   return uwTickFreq;
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 366              		.loc 1 342 0
 367 0000 014B     		ldr	r3, .L33
 368 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 369 0004 7047     		bx	lr
 370              	.L34:
 371 0006 00BF     		.align	2
 372              	.L33:
 373 0008 00000000 		.word	.LANCHOR0
 374              		.cfi_endproc
 375              	.LFE150:
 377              		.section	.text.HAL_Delay,"ax",%progbits
 378              		.align	1
 379              		.weak	HAL_Delay
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	HAL_Delay:
 386              	.LFB151:
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *        on variable incremented.
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is incremented.
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @param Delay  specifies the delay time length, in milliseconds.
ARM GAS  /tmp/ccAfYCgX.s 			page 14


 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 387              		.loc 1 356 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              	.LVL17:
 392 0000 38B5     		push	{r3, r4, r5, lr}
 393              	.LCFI4:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 3, -16
 396              		.cfi_offset 4, -12
 397              		.cfi_offset 5, -8
 398              		.cfi_offset 14, -4
 399 0002 0446     		mov	r4, r0
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 400              		.loc 1 357 0
 401 0004 FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL18:
 403 0008 0546     		mov	r5, r0
 404              	.LVL19:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   uint32_t wait = Delay;
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 405              		.loc 1 361 0
 406 000a B4F1FF3F 		cmp	r4, #-1
 407 000e 02D0     		beq	.L37
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 408              		.loc 1 363 0
 409 0010 044B     		ldr	r3, .L39
 410 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 0014 1C44     		add	r4, r4, r3
 412              	.LVL20:
 413              	.L37:
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 414              		.loc 1 366 0 discriminator 1
 415 0016 FFF7FEFF 		bl	HAL_GetTick
 416              	.LVL21:
 417 001a 401B     		subs	r0, r0, r5
 418 001c 8442     		cmp	r4, r0
 419 001e FAD8     		bhi	.L37
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   {
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   }
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 420              		.loc 1 369 0
 421 0020 38BD     		pop	{r3, r4, r5, pc}
 422              	.LVL22:
 423              	.L40:
 424 0022 00BF     		.align	2
 425              	.L39:
 426 0024 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccAfYCgX.s 			page 15


 427              		.cfi_endproc
 428              	.LFE151:
 430              		.section	.text.HAL_SuspendTick,"ax",%progbits
 431              		.align	1
 432              		.weak	HAL_SuspendTick
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv5-d16
 438              	HAL_SuspendTick:
 439              	.LFB152:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Suspend Tick increment.
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is suspended.
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_SuspendTick(void)
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 440              		.loc 1 382 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Disable SysTick Interrupt */
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 445              		.loc 1 384 0
 446 0000 024A     		ldr	r2, .L42
 447 0002 1368     		ldr	r3, [r2]
 448 0004 23F00203 		bic	r3, r3, #2
 449 0008 1360     		str	r3, [r2]
 450 000a 7047     		bx	lr
 451              	.L43:
 452              		.align	2
 453              	.L42:
 454 000c 10E000E0 		.word	-536813552
 455              		.cfi_endproc
 456              	.LFE152:
 458              		.section	.text.HAL_ResumeTick,"ax",%progbits
 459              		.align	1
 460              		.weak	HAL_ResumeTick
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv5-d16
 466              	HAL_ResumeTick:
 467              	.LFB153:
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief Resume Tick increment.
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
ARM GAS  /tmp/ccAfYCgX.s 			page 16


 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       is resumed.
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** __weak void HAL_ResumeTick(void)
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 468              		.loc 1 398 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   /* Enable SysTick Interrupt */
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 473              		.loc 1 400 0
 474 0000 024A     		ldr	r2, .L45
 475 0002 1368     		ldr	r3, [r2]
 476 0004 43F00203 		orr	r3, r3, #2
 477 0008 1360     		str	r3, [r2]
 478 000a 7047     		bx	lr
 479              	.L46:
 480              		.align	2
 481              	.L45:
 482 000c 10E000E0 		.word	-536813552
 483              		.cfi_endproc
 484              	.LFE153:
 486              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_GetHalVersion
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv5-d16
 494              	HAL_GetHalVersion:
 495              	.LFB154:
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the HAL revision
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 496              		.loc 1 408 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****  return __STM32F7xx_HAL_VERSION;
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 501              		.loc 1 410 0
 502 0000 0048     		ldr	r0, .L48
 503 0002 7047     		bx	lr
 504              	.L49:
 505              		.align	2
ARM GAS  /tmp/ccAfYCgX.s 			page 17


 506              	.L48:
 507 0004 00070201 		.word	16910080
 508              		.cfi_endproc
 509              	.LFE154:
 511              		.section	.text.HAL_GetREVID,"ax",%progbits
 512              		.align	1
 513              		.global	HAL_GetREVID
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv5-d16
 519              	HAL_GetREVID:
 520              	.LFB155:
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device revision identifier.
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device revision identifier
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetREVID(void)
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 521              		.loc 1 417 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 526              		.loc 1 418 0
 527 0000 014B     		ldr	r3, .L51
 528 0002 1868     		ldr	r0, [r3]
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 529              		.loc 1 419 0
 530 0004 000C     		lsrs	r0, r0, #16
 531 0006 7047     		bx	lr
 532              	.L52:
 533              		.align	2
 534              	.L51:
 535 0008 002004E0 		.word	-536600576
 536              		.cfi_endproc
 537              	.LFE155:
 539              		.section	.text.HAL_GetDEVID,"ax",%progbits
 540              		.align	1
 541              		.global	HAL_GetDEVID
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv5-d16
 547              	HAL_GetDEVID:
 548              	.LFB156:
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns the device identifier.
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetDEVID(void)
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 549              		.loc 1 426 0
 550              		.cfi_startproc
ARM GAS  /tmp/ccAfYCgX.s 			page 18


 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 554              		.loc 1 427 0
 555 0000 024B     		ldr	r3, .L54
 556 0002 1868     		ldr	r0, [r3]
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 557              		.loc 1 428 0
 558 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 559 0008 7047     		bx	lr
 560              	.L55:
 561 000a 00BF     		.align	2
 562              	.L54:
 563 000c 002004E0 		.word	-536600576
 564              		.cfi_endproc
 565              	.LFE156:
 567              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_GetUIDw0
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-d16
 575              	HAL_GetUIDw0:
 576              	.LFB157:
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 577              		.loc 1 435 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 582              		.loc 1 437 0
 583 0000 014B     		ldr	r3, .L57
 584 0002 1868     		ldr	r0, [r3]
 585 0004 7047     		bx	lr
 586              	.L58:
 587 0006 00BF     		.align	2
 588              	.L57:
 589 0008 20F4F01F 		.word	535884832
 590              		.cfi_endproc
 591              	.LFE157:
 593              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 594              		.align	1
 595              		.global	HAL_GetUIDw1
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv5-d16
ARM GAS  /tmp/ccAfYCgX.s 			page 19


 601              	HAL_GetUIDw1:
 602              	.LFB158:
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 603              		.loc 1 444 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 608              		.loc 1 446 0
 609 0000 014B     		ldr	r3, .L60
 610 0002 1868     		ldr	r0, [r3]
 611 0004 7047     		bx	lr
 612              	.L61:
 613 0006 00BF     		.align	2
 614              	.L60:
 615 0008 24F4F01F 		.word	535884836
 616              		.cfi_endproc
 617              	.LFE158:
 619              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 620              		.align	1
 621              		.global	HAL_GetUIDw2
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv5-d16
 627              	HAL_GetUIDw2:
 628              	.LFB159:
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval Device identifier
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 629              		.loc 1 453 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 634              		.loc 1 455 0
 635 0000 014B     		ldr	r3, .L63
 636 0002 1868     		ldr	r0, [r3]
 637 0004 7047     		bx	lr
 638              	.L64:
 639 0006 00BF     		.align	2
 640              	.L63:
 641 0008 28F4F01F 		.word	535884840
ARM GAS  /tmp/ccAfYCgX.s 			page 20


 642              		.cfi_endproc
 643              	.LFE159:
 645              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 646              		.align	1
 647              		.global	HAL_DBGMCU_EnableDBGSleepMode
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 651              		.fpu fpv5-d16
 653              	HAL_DBGMCU_EnableDBGSleepMode:
 654              	.LFB160:
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 655              		.loc 1 462 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 660              		.loc 1 463 0
 661 0000 024A     		ldr	r2, .L66
 662 0002 5368     		ldr	r3, [r2, #4]
 663 0004 43F00103 		orr	r3, r3, #1
 664 0008 5360     		str	r3, [r2, #4]
 665 000a 7047     		bx	lr
 666              	.L67:
 667              		.align	2
 668              	.L66:
 669 000c 002004E0 		.word	-536600576
 670              		.cfi_endproc
 671              	.LFE160:
 673              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 674              		.align	1
 675              		.global	HAL_DBGMCU_DisableDBGSleepMode
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv5-d16
 681              	HAL_DBGMCU_DisableDBGSleepMode:
 682              	.LFB161:
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 683              		.loc 1 471 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAfYCgX.s 			page 21


 687              		@ link register save eliminated.
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 688              		.loc 1 472 0
 689 0000 024A     		ldr	r2, .L69
 690 0002 5368     		ldr	r3, [r2, #4]
 691 0004 23F00103 		bic	r3, r3, #1
 692 0008 5360     		str	r3, [r2, #4]
 693 000a 7047     		bx	lr
 694              	.L70:
 695              		.align	2
 696              	.L69:
 697 000c 002004E0 		.word	-536600576
 698              		.cfi_endproc
 699              	.LFE161:
 701              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_DBGMCU_EnableDBGStopMode
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv5-d16
 709              	HAL_DBGMCU_EnableDBGStopMode:
 710              	.LFB162:
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 711              		.loc 1 480 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 716              		.loc 1 481 0
 717 0000 024A     		ldr	r2, .L72
 718 0002 5368     		ldr	r3, [r2, #4]
 719 0004 43F00203 		orr	r3, r3, #2
 720 0008 5360     		str	r3, [r2, #4]
 721 000a 7047     		bx	lr
 722              	.L73:
 723              		.align	2
 724              	.L72:
 725 000c 002004E0 		.word	-536600576
 726              		.cfi_endproc
 727              	.LFE162:
 729              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 730              		.align	1
 731              		.global	HAL_DBGMCU_DisableDBGStopMode
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv5-d16
 737              	HAL_DBGMCU_DisableDBGStopMode:
ARM GAS  /tmp/ccAfYCgX.s 			page 22


 738              	.LFB163:
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 739              		.loc 1 489 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 744              		.loc 1 490 0
 745 0000 024A     		ldr	r2, .L75
 746 0002 5368     		ldr	r3, [r2, #4]
 747 0004 23F00203 		bic	r3, r3, #2
 748 0008 5360     		str	r3, [r2, #4]
 749 000a 7047     		bx	lr
 750              	.L76:
 751              		.align	2
 752              	.L75:
 753 000c 002004E0 		.word	-536600576
 754              		.cfi_endproc
 755              	.LFE163:
 757              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 758              		.align	1
 759              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 763              		.fpu fpv5-d16
 765              	HAL_DBGMCU_EnableDBGStandbyMode:
 766              	.LFB164:
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 767              		.loc 1 498 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 772              		.loc 1 499 0
 773 0000 024A     		ldr	r2, .L78
 774 0002 5368     		ldr	r3, [r2, #4]
 775 0004 43F00403 		orr	r3, r3, #4
 776 0008 5360     		str	r3, [r2, #4]
 777 000a 7047     		bx	lr
 778              	.L79:
ARM GAS  /tmp/ccAfYCgX.s 			page 23


 779              		.align	2
 780              	.L78:
 781 000c 002004E0 		.word	-536600576
 782              		.cfi_endproc
 783              	.LFE164:
 785              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 786              		.align	1
 787              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 791              		.fpu fpv5-d16
 793              	HAL_DBGMCU_DisableDBGStandbyMode:
 794              	.LFB165:
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 795              		.loc 1 507 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 800              		.loc 1 508 0
 801 0000 024A     		ldr	r2, .L81
 802 0002 5368     		ldr	r3, [r2, #4]
 803 0004 23F00403 		bic	r3, r3, #4
 804 0008 5360     		str	r3, [r2, #4]
 805 000a 7047     		bx	lr
 806              	.L82:
 807              		.align	2
 808              	.L81:
 809 000c 002004E0 		.word	-536600576
 810              		.cfi_endproc
 811              	.LFE165:
 813              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 814              		.align	1
 815              		.global	HAL_EnableCompensationCell
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu fpv5-d16
 821              	HAL_EnableCompensationCell:
 822              	.LFB166:
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
ARM GAS  /tmp/ccAfYCgX.s 			page 24


 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableCompensationCell(void)
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 823              		.loc 1 518 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR |= SYSCFG_CMPCR_CMP_PD;
 828              		.loc 1 519 0
 829 0000 024A     		ldr	r2, .L84
 830 0002 136A     		ldr	r3, [r2, #32]
 831 0004 43F00103 		orr	r3, r3, #1
 832 0008 1362     		str	r3, [r2, #32]
 833 000a 7047     		bx	lr
 834              	.L85:
 835              		.align	2
 836              	.L84:
 837 000c 00380140 		.word	1073821696
 838              		.cfi_endproc
 839              	.LFE166:
 841              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 842              		.align	1
 843              		.global	HAL_DisableCompensationCell
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv5-d16
 849              	HAL_DisableCompensationCell:
 850              	.LFB167:
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableCompensationCell(void)
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 851              		.loc 1 529 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->CMPCR &= (uint32_t)~((uint32_t)SYSCFG_CMPCR_CMP_PD);
 856              		.loc 1 530 0
 857 0000 024A     		ldr	r2, .L87
 858 0002 136A     		ldr	r3, [r2, #32]
 859 0004 23F00103 		bic	r3, r3, #1
 860 0008 1362     		str	r3, [r2, #32]
 861 000a 7047     		bx	lr
 862              	.L88:
 863              		.align	2
 864              	.L87:
 865 000c 00380140 		.word	1073821696
 866              		.cfi_endproc
 867              	.LFE167:
ARM GAS  /tmp/ccAfYCgX.s 			page 25


 869              		.section	.text.HAL_EnableFMCMemorySwapping,"ax",%progbits
 870              		.align	1
 871              		.global	HAL_EnableFMCMemorySwapping
 872              		.syntax unified
 873              		.thumb
 874              		.thumb_func
 875              		.fpu fpv5-d16
 877              	HAL_EnableFMCMemorySwapping:
 878              	.LFB168:
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Enables the FMC Memory Mapping Swapping.
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0x60000000 
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0xC0000000   
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableFMCMemorySwapping(void)
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 879              		.loc 1 542 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP |= SYSCFG_MEMRMP_SWP_FMC_0;
 884              		.loc 1 543 0
 885 0000 024A     		ldr	r2, .L90
 886 0002 1368     		ldr	r3, [r2]
 887 0004 43F48063 		orr	r3, r3, #1024
 888 0008 1360     		str	r3, [r2]
 889 000a 7047     		bx	lr
 890              	.L91:
 891              		.align	2
 892              	.L90:
 893 000c 00380140 		.word	1073821696
 894              		.cfi_endproc
 895              	.LFE168:
 897              		.section	.text.HAL_DisableFMCMemorySwapping,"ax",%progbits
 898              		.align	1
 899              		.global	HAL_DisableFMCMemorySwapping
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv5-d16
 905              	HAL_DisableFMCMemorySwapping:
 906              	.LFB169:
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @brief  Disables the FMC Memory Mapping Swapping
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *   
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @note   SDRAM is accessible at 0xC0000000 (default mapping)  
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *         and NOR/RAM is accessible at 0x60000000 (default mapping)    
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   *           
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   * @retval None
ARM GAS  /tmp/ccAfYCgX.s 			page 26


 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   */
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableFMCMemorySwapping(void)
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 907              		.loc 1 555 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		@ link register save eliminated.
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SYSCFG->MEMRMP &= (uint32_t)~((uint32_t)SYSCFG_MEMRMP_SWP_FMC);
 912              		.loc 1 557 0
 913 0000 024A     		ldr	r2, .L93
 914 0002 1368     		ldr	r3, [r2]
 915 0004 23F44063 		bic	r3, r3, #3072
 916 0008 1360     		str	r3, [r2]
 917 000a 7047     		bx	lr
 918              	.L94:
 919              		.align	2
 920              	.L93:
 921 000c 00380140 		.word	1073821696
 922              		.cfi_endproc
 923              	.LFE169:
 925              		.section	.text.HAL_EnableMemorySwappingBank,"ax",%progbits
 926              		.align	1
 927              		.global	HAL_EnableMemorySwappingBank
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv5-d16
 933              	HAL_EnableMemorySwappingBank:
 934              	.LFB170:
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** #if defined (STM32F765xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Enable the Internal FLASH Bank Swapping.
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   Flash Bank2 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank1 mapped at 0x08100000 (AXI) (aliased at 0x00300000 (TCM))   
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_EnableMemorySwappingBank(void)
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 935              		.loc 1 572 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   SET_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 940              		.loc 1 573 0
 941 0000 024A     		ldr	r2, .L96
 942 0002 1368     		ldr	r3, [r2]
 943 0004 43F48073 		orr	r3, r3, #256
 944 0008 1360     		str	r3, [r2]
ARM GAS  /tmp/ccAfYCgX.s 			page 27


 945 000a 7047     		bx	lr
 946              	.L97:
 947              		.align	2
 948              	.L96:
 949 000c 00380140 		.word	1073821696
 950              		.cfi_endproc
 951              	.LFE170:
 953              		.section	.text.HAL_DisableMemorySwappingBank,"ax",%progbits
 954              		.align	1
 955              		.global	HAL_DisableMemorySwappingBank
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu fpv5-d16
 961              	HAL_DisableMemorySwappingBank:
 962              	.LFB171:
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** }
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** 
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** /**
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @brief  Disable the Internal FLASH Bank Swapping.
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *   
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   This function can be used only for STM32F77xx/STM32F76xx devices. 
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @note   The default state : Flash Bank1 mapped at 0x08000000 (AXI) (aliased at 0x00200000 (TCM)) 
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *         and Flash Bank2 mapped at 0x08100000 (AXI)( aliased at 0x00300000 (TCM)) 
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** *           
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** * @retval None
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** */
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** void HAL_DisableMemorySwappingBank(void)
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c **** {
 963              		.loc 1 587 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c ****   CLEAR_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_SWP_FB);
 968              		.loc 1 588 0
 969 0000 024A     		ldr	r2, .L99
 970 0002 1368     		ldr	r3, [r2]
 971 0004 23F48073 		bic	r3, r3, #256
 972 0008 1360     		str	r3, [r2]
 973 000a 7047     		bx	lr
 974              	.L100:
 975              		.align	2
 976              	.L99:
 977 000c 00380140 		.word	1073821696
 978              		.cfi_endproc
 979              	.LFE171:
 981              		.global	uwTickFreq
 982              		.global	uwTickPrio
 983              		.comm	uwTick,4,4
 984              		.section	.data.uwTickFreq,"aw",%progbits
 985              		.set	.LANCHOR0,. + 0
 988              	uwTickFreq:
 989 0000 01       		.byte	1
 990              		.section	.data.uwTickPrio,"aw",%progbits
 991              		.align	2
ARM GAS  /tmp/ccAfYCgX.s 			page 28


 992              		.set	.LANCHOR1,. + 0
 995              	uwTickPrio:
 996 0000 10000000 		.word	16
 997              		.text
 998              	.Letext0:
 999              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1000              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1001              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 1002              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 1003              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1004              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1005              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1006              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccAfYCgX.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal.c
     /tmp/ccAfYCgX.s:17     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccAfYCgX.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccAfYCgX.s:37     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccAfYCgX.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccAfYCgX.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccAfYCgX.s:63     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccAfYCgX.s:107    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccAfYCgX.s:112    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccAfYCgX.s:119    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccAfYCgX.s:174    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccAfYCgX.s:181    .text.HAL_Init:0000000000000000 $t
     /tmp/ccAfYCgX.s:188    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccAfYCgX.s:217    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccAfYCgX.s:224    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccAfYCgX.s:242    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccAfYCgX.s:248    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccAfYCgX.s:255    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccAfYCgX.s:270    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccAfYCgX.s:275    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccAfYCgX.s:282    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccAfYCgX.s:296    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccAfYCgX.s:301    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccAfYCgX.s:308    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccAfYCgX.s:346    .text.HAL_SetTickFreq:000000000000001c $d
     /tmp/ccAfYCgX.s:352    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccAfYCgX.s:359    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccAfYCgX.s:373    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccAfYCgX.s:378    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccAfYCgX.s:385    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccAfYCgX.s:426    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccAfYCgX.s:431    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccAfYCgX.s:438    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccAfYCgX.s:454    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccAfYCgX.s:459    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccAfYCgX.s:466    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccAfYCgX.s:482    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccAfYCgX.s:487    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccAfYCgX.s:494    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccAfYCgX.s:507    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccAfYCgX.s:512    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccAfYCgX.s:519    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccAfYCgX.s:535    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccAfYCgX.s:540    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccAfYCgX.s:547    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccAfYCgX.s:563    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccAfYCgX.s:568    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccAfYCgX.s:575    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccAfYCgX.s:589    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccAfYCgX.s:594    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccAfYCgX.s:601    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccAfYCgX.s:615    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccAfYCgX.s:620    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccAfYCgX.s:627    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccAfYCgX.s:641    .text.HAL_GetUIDw2:0000000000000008 $d
ARM GAS  /tmp/ccAfYCgX.s 			page 30


     /tmp/ccAfYCgX.s:646    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:653    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccAfYCgX.s:669    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccAfYCgX.s:674    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:681    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccAfYCgX.s:697    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccAfYCgX.s:702    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:709    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccAfYCgX.s:725    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccAfYCgX.s:730    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:737    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccAfYCgX.s:753    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccAfYCgX.s:758    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:765    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccAfYCgX.s:781    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccAfYCgX.s:786    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccAfYCgX.s:793    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccAfYCgX.s:809    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccAfYCgX.s:814    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccAfYCgX.s:821    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccAfYCgX.s:837    .text.HAL_EnableCompensationCell:000000000000000c $d
     /tmp/ccAfYCgX.s:842    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccAfYCgX.s:849    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccAfYCgX.s:865    .text.HAL_DisableCompensationCell:000000000000000c $d
     /tmp/ccAfYCgX.s:870    .text.HAL_EnableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccAfYCgX.s:877    .text.HAL_EnableFMCMemorySwapping:0000000000000000 HAL_EnableFMCMemorySwapping
     /tmp/ccAfYCgX.s:893    .text.HAL_EnableFMCMemorySwapping:000000000000000c $d
     /tmp/ccAfYCgX.s:898    .text.HAL_DisableFMCMemorySwapping:0000000000000000 $t
     /tmp/ccAfYCgX.s:905    .text.HAL_DisableFMCMemorySwapping:0000000000000000 HAL_DisableFMCMemorySwapping
     /tmp/ccAfYCgX.s:921    .text.HAL_DisableFMCMemorySwapping:000000000000000c $d
     /tmp/ccAfYCgX.s:926    .text.HAL_EnableMemorySwappingBank:0000000000000000 $t
     /tmp/ccAfYCgX.s:933    .text.HAL_EnableMemorySwappingBank:0000000000000000 HAL_EnableMemorySwappingBank
     /tmp/ccAfYCgX.s:949    .text.HAL_EnableMemorySwappingBank:000000000000000c $d
     /tmp/ccAfYCgX.s:954    .text.HAL_DisableMemorySwappingBank:0000000000000000 $t
     /tmp/ccAfYCgX.s:961    .text.HAL_DisableMemorySwappingBank:0000000000000000 HAL_DisableMemorySwappingBank
     /tmp/ccAfYCgX.s:977    .text.HAL_DisableMemorySwappingBank:000000000000000c $d
     /tmp/ccAfYCgX.s:988    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccAfYCgX.s:995    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccAfYCgX.s:991    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
